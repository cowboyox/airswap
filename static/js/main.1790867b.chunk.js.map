{"version":3,"sources":["app/hooks.ts","components/Icon/Icon.styles.tsx","components/Icon/icons/IconForbidden.tsx","components/Icon/icons/IconLink.tsx","components/Icon/icons/IconMedium.tsx","components/Icon/icons/IconPending.tsx","components/Icon/icons/IconStar.tsx","components/Icon/icons/IconSwap.tsx","components/Icon/icons/IconTelegram.tsx","components/Icon/icons/IconTransaction.tsx","components/Icon/icons/IconTwitter.tsx","components/Icon/icons/IconVote.tsx","components/Icon/Icon.tsx","components/Icon/icons/IconLibrary.tsx","components/Icon/icons/IconAirswap.tsx","components/Icon/icons/IconArrowDown.tsx","components/Icon/icons/IconArrowRight.tsx","components/Icon/icons/IconArrowLeft.tsx","components/Icon/icons/IconBars.tsx","components/Icon/icons/IconX.tsx","components/Icon/icons/IconCampaign.tsx","components/Icon/icons/IconChevronDown.tsx","components/Icon/icons/IconCode.tsx","components/Icon/icons/IconContactSupport.tsx","components/Icon/icons/IconDarkModeSwitch.tsx","components/Icon/icons/IconDeny.tsx","components/Icon/icons/IconDiscord.tsx","components/Icon/icons/IconEdit.tsx","components/BookmarkWarning/BookmarkWarning.styles.tsx","components/BookmarkWarning/BookmarkWarning.tsx","features/userSettings/helpers/getInitialThemeValue.ts","features/userSettings/userSettingsSlice.ts","features/userSettings/helpers/getInitialBookmarkWarning.ts","helpers/useWindowSize.ts","style/themes.ts","components/IconButton/IconButton.styles.tsx","components/IconButton/IconButton.tsx","components/Typography/Typography.styles.tsx","components/Typography/Typography.tsx","style/breakpoints.ts","style/sizes.ts","styled-components/Modal/Modal.tsx","style/mixins.ts","components/InformationModals/subcomponents/GuideButton/GuideButton.styles.tsx","components/InformationModals/subcomponents/GuideButton/GuideButton.tsx","components/InformationModals/subcomponents/JoinModal/JoinModal.styles.tsx","components/InformationModals/subcomponents/JoinModal/JoinModal.tsx","components/InformationModals/InformationModals.tsx","components/SocialButtons/SocialButtons.styles.tsx","components/SocialButtons/SocialButtons.tsx","constants/nativeETH.ts","features/tradeTerms/tradeTermsSlice.ts","features/pricing/pricingApi.ts","features/balances/balancesApi.ts","features/pricing/pricingSlice.ts","features/transactions/transactionActions.ts","contexts/lastLook/LastLook.tsx","constants/configParams.ts","features/wallet/walletSlice.ts","features/balances/balancesSlice.ts","features/metadata/metadataApi.ts","features/registry/registryApi.ts","features/registry/registrySlice.ts","features/metadata/metadataSlice.ts","helpers/findEthOrTokenByAddress.ts","components/Toasts/Toast.styles.tsx","components/Toasts/ErrorToast.tsx","components/Toasts/TransactionToast.tsx","components/Toasts/ToastController.tsx","features/orders/orderApi.ts","features/orders/ordersSlice.ts","features/transactions/transactionsSlice.ts","helpers/Validator.ts","helpers/transformHexToRgba.ts","styled-components/CloseButton/CloseButton.tsx","components/LoadingSpinner/LoadingSpinner.tsx","components/Button/Button.styles.tsx","components/Button/Button.tsx","components/Overlay/Overlay.styles.tsx","components/ErrorList/ErrorList.styles.tsx","components/ErrorList/ErrorList.tsx","components/InformationModals/subcomponents/GasFreeSwapsModal/GasFreeModal.styles.tsx","components/InformationModals/subcomponents/GasFreeSwapsModal/GasFreeSwapsModal.tsx","styled-components/Link/Link.styles.tsx","components/InformationModals/subcomponents/ProtocolFeeDiscountModal/ProtocolFeeDiscountModal.styles.tsx","components/InformationModals/subcomponents/ProtocolFeeDiscountModal/ProtocolFeeDiscountModal.tsx","components/Overlay/Overlay.tsx","components/TextInput/TextInput.styles.tsx","components/TextInput/TextInput.tsx","components/TokenList/TokenList.styles.tsx","components/TokenList/filter.ts","components/TokenList/sort.ts","components/TokenLogo/TokenLogo.styles.tsx","components/SwapWidget/subcomponents/ActionButtons/ActionButtons.tsx","components/TokenLogo/TokenLogo.tsx","components/TokenList/subcomponents/TokenImportButton/TokenImportButton.styles.tsx","components/TokenList/subcomponents/TokenImportButton/TokenImportButton.tsx","components/TokenList/subcomponents/InactiveTokensList/InactiveTokensList.tsx","helpers/stringToSignificantDecimals.ts","components/TokenList/subcomponents/TokenButton/TokenButton.styles.tsx","components/TokenList/subcomponents/TokenButton/TokenButton.tsx","components/TokenList/TokenList.tsx","components/SwapWidget/InfoSection.styles.tsx","components/SwapWidget/InfoSection.tsx","constants/supportedWalletProviders.ts","assets/wallet-provider-logos/metamask.svg","assets/wallet-provider-logos/walletconnect.svg","components/WalletProviderList/WalletProviderList.styles.tsx","components/WalletProviderList/WalletProviderList.tsx","components/SwapWidget/SwapWidget.styles.tsx","components/SwapWidget/subcomponents/ActionButtons/ActionButtons.styles.tsx","components/TokenSelect/TokenSelect.styles.tsx","components/TokenSelect/subcomponents/TokenSelectFocusBorder/TokenSelectFocusBorder.styles.tsx","components/TokenSelect/subcomponents/TokenSelectFocusBorder/TokenSelectFocusBorder.tsx","components/TokenSelect/TokenSelect.tsx","components/SwapWidget/helpers/getSwapInputIcon.tsx","components/SwapWidget/subcomponents/SwapInputs/SwapInputs.styles.tsx","components/SwapWidget/subcomponents/SwapInputs/SwapInputs.tsx","components/Timer/Timer.tsx","components/SwapWidget/subcomponents/SwapWidgetHeader/SwapWidgetHeader.styles.tsx","components/SwapWidget/subcomponents/SwapWidgetHeader/SwapWidgetHeader.tsx","components/SwapWidget/SwapWidget.tsx","components/Toasts/Toaster.tsx","components/Toolbar/Toolbar.styles.tsx","components/Toolbar/subcomponents/ToolbarButton/ToolbarButton.styles.tsx","components/Toolbar/subcomponents/ToolbarButton/ToolbarButton.tsx","components/Toolbar/Toolbar.tsx","components/WidgetFrame/WidgetFrame.styles.tsx","components/WidgetFrame/WidgetFrame.tsx","components/EthButton/EthButton.styles.tsx","components/EthButton/EthBalance.tsx","constants/locales.ts","components/SettingsPopover/SettingsPopover.styles.tsx","components/SettingsPopover/subcomponents/PopoverSection/PopoverSection.styles.tsx","components/SettingsPopover/subcomponents/PopoverSection/PopoverSection.tsx","components/SettingsPopover/SettingsPopover.tsx","components/SettingsButton/SettingsButton.style.tsx","components/SettingsButton/SettingsButton.tsx","hooks/useAddressOrEnsName.ts","components/WalletButton/subcomponents/WalletAddress/WalletAddress.styles.tsx","components/TransactionsTab/subcomponents/TransactionLink/TransactionLink.style.tsx","components/TransactionsTab/subcomponents/TransactionLink/TransactionLink.tsx","components/TransactionsTab/TransactionsTab.styles.tsx","components/TransactionsTab/subcomponents/WalletLink/WalletLink.styles.tsx","components/TransactionsTab/subcomponents/WalletLink/WalletLink.tsx","helpers/getTimeBetweenTwoDates.ts","components/TransactionsTab/subcomponents/WalletTransactionStatus/WalletTransactionStatus.styles.tsx","components/TransactionsTab/subcomponents/WalletTransactionStatus/WalletTransactionStatus.tsx","components/TransactionsTab/subcomponents/WalletTransaction/WalletTransaction.styles.tsx","components/TransactionsTab/subcomponents/WalletTransaction/WalletTransaction.tsx","components/TransactionsTab/TransactionsTab.tsx","styled-components/BorderedButton/BorderedButton.tsx","components/WalletButton/subcomponents/WalletAddress/WalletAddress.tsx","components/WalletButton/WalletButton.tsx","styled-components/PopoverContainer/PopoverContainer.tsx","features/transactions/handleTransaction.ts","app/store.ts","features/metadata/metadataSubscriber.ts","features/transactions/swapEventSubscriber.ts","features/wallet/walletApi.ts","components/Page/Page.styles.tsx","features/wallet/Wallet.tsx","components/Page/Page.tsx","components/PageLoader/PageLoader.tsx","i18n/i18n.ts","style/GlobalStyle.ts","style/reset.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","StyledIcon","styled","div","props","iconSize","color","IconForbidden","className","fill","viewBox","d","IconLink","IconMedium","width","height","xmlns","IconPending","IconStar","IconSwap","IconTelegram","IconTransaction","IconTwitter","IconVote","icons","about","airswap","strokeWidth","strokeLinecap","transform","bars","campaign","code","strokeLinejoin","deny","discord","edit","HiX","forbidden","IoMdInformationCircleOutline","medium","settings","IoMdSettings","star","swap","telegram","BiCheck","transaction","twitter","vote","Icon","name","IconComponent","Text","ButtonX","button","theme","colors","alwaysWhite","disabled","StyledBookmarkWarning","primary","BookmarkWarning","hidden","onClick","t","useTranslation","getInitialThemeValue","localStorage","THEME_LOCAL_STORAGE_KEY","BOOKMARK_WARNING_LOCAL_STORAGE_KEY","initialState","showBookmarkWarning","userSettingsSlice","createSlice","reducers","disableBookmarkWarning","state","toggleTheme","setTheme","payload","window","matchMedia","matches","selectUserSettings","userSettings","actions","useWindowSize","useState","undefined","windowSize","setWindowSize","useEffect","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","fontMono","typography","title1","fontSize","lineHeight","fontWeight","title2","title3","title4","subtitle","paragraph","infoHeading","infoSubHeading","formLabel","formInput","subText","selectItem","link","nav","small","darkTheme","primaryDark","white","black","alwaysBlack","grey","borderGrey","darkGrey","lightGrey","placeholderGrey","red","orange","green","placeholderGradient","darkSubText","shadows","widgetGlow","lightTheme","StyledIconButton","hasText","IconButton","React","forwardRef","ref","text","icon","tabIndex","elementMap","makeTypographyComponent","key","additionalCSS","tag","StyledH1","css","StyledH2","StyledH3","StyledH4","StyledSubText","StyledParagraph","StyledLink","StyledInfoHeading","StyledInfoSubHeading","StyledFormLabel","StyledFormInput","StyledSelectItem","StyledMetadata","titles","h1","h2","h3","h4","Title","children","type","StyledTitle","sizes","breakPoints","tinyScreenOnly","phoneOnly","tabletPortraitUp","tabletLandscapeUp","desktopUp","bigDesktopUp","StyledModal","Modal","ModalCloseButton","ModalTitle","ModalParagraph","InfoSubHeading","ModalSubTitle","ScrollBarStyle","InputOrButtonBorderStyle","BorderlessButtonStyle","BorderedPill","GuideButtonContainer","a","GuideButton","iconName","href","target","GuideButtons","guideButtons","JoinModal","map","guideButton","InformationModals","activeModal","onCloseModalClick","isOpen","onBackgroundClick","onEscapeKeydown","Container","Divider","PlainLink","Link","$deEmphasize","SocialButton","showLocales","destinations","locales","en","fr","SocialButtons","hoveredIcon","setHoveredIcon","hoveredLocale","setHoveredLocale","dest","onPointerEnter","bind","onPointerLeave","Object","keys","length","locale","nativeETH","chainId","address","decimals","symbol","logoURI","baseToken","quoteToken","baseAmount","quoteAmount","side","tradeTermsSlice","clear","set","_","action","setQuoteAmount","clearQuoteAmount","selectTradeTerms","tradeTerms","setTradeTerms","clearTradeTerms","setTradeTermsQuoteAmount","clearTradeTermsQuoteAmount","pricingIsLevels","value","subscribeToTransfersAndApprovals","pricingSlice","updatePricing","locator","pricing","existingIndex","findIndex","existingPricing","push","clearPricing","pair","i","splice","extraReducers","builder","addCase","selectBestPricing","createSelector","terms","bestQuoteAmount","BigNumber","bestPricing","baseTokenAmount","forEach","locatorPricing","relevantIndex","p","relevantPricing","signerFee","levels","bid","Error","signerAmount","multipliedBy","parseInt","toString","calculateCostFromLevels","ask","senderAmount","calculateQuoteAmount","gt","lt","submitTransaction","createAction","declineTransaction","mineTransaction","revertTransaction","LastLookContext","createContext","subscribeAllServers","servers","unsubscribeAllServers","sendOrderForConsideration","getSignedOrder","params","connectedServers","LastLookProvider","useWeb3React","account","library","dispatch","useCallback","s","Promise","resolve","server","handlePricing","pairPricing","find","console","warn","on","e","error","message","subscribe","removeAllListeners","disconnect","isSell","baseAmountAtomic","integerValue","ROUND_CEIL","quoteAmountAtomic","ROUND_FLOOR","unsignedOrder","createLightOrder","expiry","Math","floor","Date","now","nonce","senderWallet","getSenderWallet","signerWallet","signerToken","senderToken","createLightSignature","getSigner","lightDeploys","signature","order","status","protocol","timestamp","consider","useMemo","Provider","connected","providerName","walletSlice","setWalletConnected","setWalletDisconnected","setActiveProvider","selectWallet","wallet","balancesInterface","ethers","utils","Interface","JSON","stringify","BalanceChecker","abi","erc20Interface","erc20Abi","getContract","provider","Contract","balancesDeploys","fetchBalancesOrAllowances","method","spenderAddressType","tokenAddresses","walletAddress","contract","args","Light","getAddress","Wrapper","apply","amounts","amount","fetchBalances","fetchAllowancesLight","fetchAllowancesWrapper","activeTokenAddresses","onBalanceChange","spenderAddress","onApproval","filters","out","topics","id","hexZeroPad","in","tearDowns","direction","typedDirection","filter","listener","event","lowerCasedTokenAddress","toLowerCase","includes","parsedEvent","parseLog","isApproval","approvalAddress","wrapperAddress","off","fn","lastFetch","inFlightFetchTokens","values","getSetInFlightRequestTokensAction","getThunk","methods","balances","createAsyncThunk","getState","activeTokensAddresses","metadata","tokens","active","condition","pathParts","split","sliceState","getSlice","asyncThunk","incrementBy","currentAmount","from","tokenAddress","add","decrementBy","newAmount","sub","pending","fulfilled","tokenBalances","every","result","rejected","selectBalances","selectAllowances","allowances","requestActiveTokenBalances","requestActiveTokenAllowancesLight","requestActiveTokenAllowancesWrapper","balancesSlice","allowancesLightSlice","allowancesWrapperSlice","incrementBalanceBy","decrementBalanceBy","setAllowanceLight","setAllowanceWrapper","allowancesLightActions","allowancesWrapperActions","balancesReducer","reducer","allowancesLightReducer","allowancesWrapperReducer","allowancesReducer","combineReducers","light","wrapper","getActiveTokensLocalStorageKey","getCachedMetadataLocalStorageKey","getUnknownTokens","supportedTokenAddresses","allTokens","storageKey","uniqueTokenListAddresses","uniqBy","localStorageTokens","localStorageData","getItem","parse","removeItem","localStorageTokenAddresses","knownTokens","concat","unknownTokens","supportedTokenAddr","scrapedTokens","scrapePromises","scrapeToken","allSettled","results","r","tokenInfo","setItem","getActiveTokensFromLocalStorage","savedTokens","getTransactionsLocalStorageKey","RegistryInterface","RegistryContract","getStakerTokens","registryContract","registryDeploys","addTokensEventFilter","AddTokens","removeTokensEventFilter","RemoveTokens","all","queryFilter","addEvents","removeEvents","sortedEvents","log","removed","sort","b","blockNumber","logIndex","stakerTokens","staker","lowerCasedTokens","token","allSupportedTokens","fetchSupportedTokens","flat","activeTokensLocalStorage","activeTokens","registrySlice","setStakerTokens","setAllSupportedTokens","reset","selectAllSupportedTokens","registry","fetchAllTokens","thunkApi","fetchTokens","fetchUnkownTokens","metadataSlice","addActiveToken","lowerCasedToken","trim","removeActiveToken","reduce","selectAllTokenInfo","selectActiveTokens","allTokenInfo","findEthOrTokenByAddress","findTokenByAddress","IconContainer","HiXContainer","TextContainer","ErrorToast","onClose","heading","cta","style","cursor","TransactionToast","approvalToken","tx","translationKey","parseFloat","Number","formatUnits","toFixed","notifyTransaction","toast","dismiss","duration","notifyError","WETHInterface","WETHContract","swapLight","swapWrapper","requestOrders","baseTokenDecimals","rfqOrderPromises","race","getSignerSideOrder","toAtomicString","reject","setTimeout","rfqOrders","o","approveToken","contractType","spender","network","erc20Contract","approve","constants","MaxUint256","approvalTxHash","takeOrder","orderSortingFunction","aAmount","depositETH","senderTokenDecimals","wethAddresses","signer","connect","deposit","withdrawETH","withdraw","APPROVE_AMOUNT","refactorOrder","newOrder","hash","once","getTransactionReceipt","receipt","transactionHash","reason","request","orders","bestOrder","timeTilReRequest","reRequestTimerId","setReRequestTimerId","take","_network","ordersSlice","clearTimeout","selectBestOrder","selectBestOption","bestRfqOrder","lastLookOrder","rfqOrder","bestRFQSignerUnits","pow","lte","selectOrdersStatus","updateTransaction","transactionsSlice","setTransactions","err","unshift","selectTransactions","transactions","selectPendingApprovals","ValidatorInterface","ValidatorContract","Validator","chainIds","RINKEBY","signerOrProvider","this","ValidatorDeploys","getDefaultProvider","chainNames","checkSwap","v","count","errors","convertToArray","res","idx","toNumber","parseBytes32String","convertHexToRGBA","hexCode","opacity","hex","replace","substring","g","CloseButton","LoadingSpinnerContainer","spin","keyframes","SpinningIcon","AiOutlineLoading","LoadingSpinner","ButtonStyle","justifyContent","intent","getButtonBackground","$loading","getButtonHoverBackground","StyledButton","Button","loading","rest","ScrollContainer","$overflow","ContentContainer","motion","TitleContainer","TitleSubContainer","OverlayActionButtonStyle","OverlayActionButton","OverlayActionLink","isHidden","hasTitle","StyledScrollContainer","StyledErrorList","StyledError","StyledErrorIcon","ErrorTextContainer","SubText","LegendDivider","ErrorList","handleClick","containerRef","useRef","buttonRef","scrollContainerRef","overflow","setOverflow","StyledErrors","current","offsetTop","scrollHeight","buttonHeight","offsetHeight","GasFreeSwapsModal","onCloseButtonClick","ProtocolFeeDiscountModal","Overlay","title","subTitle","shouldReduceMotion","useReducedMotion","AnimatePresence","transition","ease","initial","y","animate","exit","FormLabel","StyledInput","FormInput","StyledTextInput","hideLabel","TextInput","label","hasError","inputProps","SearchInput","TokenContainer","Legend","LegendItem","InactiveTitleContainer","InactiveTitle","InformationIcon","NoResultsContainer","filterTokens","search","isAddress","lowerSearchParts","matchesSearch","sParts","some","sp","startsWith","endsWith","Boolean","createTokenFilterFunction","getTokenBalance","sortTokenByExactMatch","filteredTokens","tokenQuery","symbolMatch","exactMatches","symbolSubtrings","remainder","ButtonActions","remSizes","large","StyledTokenLogo","size","TokenLogo","Symbol","TokenName","UnsupportedTokenText","span","Metadata","ImportButton","TokenImportButton","isUnsupported","InactiveTokensList","inactiveTokens","onTokenClick","stringToSignificantDecimals","input","sigDecimals","indexOf","beforeDecimalPoint","afterDecimalPoint","trimmedDecimals","match","slice","sigDecimalsRemaining","inLeadingZeroes","currentDigit","scaleInAnimation","DeleteIcon","showDeleteButton","Balance","TokenButton","balance","setToken","TokenList","onSelectToken","editMode","setEditMode","setTokenQuery","sortedTokens","aBalance","bBalance","toLocaleLowerCase","sortTokensBySymbolAndBalance","sortedFilteredTokens","sortedInactiveTokens","el","placeholder","onChange","currentTarget","InfoHeading","FeeTextContainer","FeeText","ApprovalText","InfoButton","RevertPriceButton","InfoSection","isConnected","isPairUnavailable","orderSubmitted","isApproving","isSwapping","bestTradeOption","isWrapping","isFetchingOrders","requiresApproval","baseTokenInfo","quoteTokenInfo","onFeeButtonClick","invertPrice","setInvertPrice","price","dividedBy","SUPPORTED_WALLET_PROVIDERS","logo","getConnector","InjectedConnector","supportedChainIds","WalletConnectConnector","rpc","StyledWalletProviderList","ButtonIconContainer","ButtonIcon","img","ButtonText","WalletProviderList","onProviderSelected","src","alt","InfoContainer","ButtonContainer","HugeTicks","MdDoneAll","StyledSwapWidget","BackButton","MainButton","buttonTextMapping","connectWallet","switchNetwork","restart","goBack","requestQuotes","takeQuote","trackTransaction","ActionButtons","nextAction","walletIsActive","unsupportedNetwork","orderComplete","pairUnavailable","hasQuote","needsApproval","hasAmount","hasSufficientBalance","isLoading","onButtonClicked","secondaryAction","mainButtonText","isDisabled","hasBackButton","secondaryButtonText","fadeInOut","quoteTransition","fontTransition","FlexRow","AmountAndDetailsContainer","InputAndMaxButtonWrapper","MaxButton","AmountInput","hasSubtext","PlaceHolderBar","TokenLogoLeft","TokenLogoRight","StyledSelectButton","SelectItem","StyledLabel","TokenSelectContainer","$isLoading","$isQuote","fadeOutWhenInvisible","$invisible","StyledSelectButtonContent","StyledDownArrow","MdKeyboardArrowDown","PlaceholderContainer","Border","BorderRight","position","BorderTop","BorderBottom","GlobalStyle","createGlobalStyle","TokenSelectFocusBorder","TokenSelect","readOnly","includeAmountInput","selectedToken","onChangeTokenClicked","onMaxClicked","onAmountChange","isQuote","showMaxButton","inputMode","autoComplete","pattern","minLength","maxLength","spellCheck","getSwapInputIcon","tradeNotAllowed","$disabled","SwapIconContainer","floatRegExp","RegExp","SwapInputs","fromAmount","toAmount","onMaxButtonClick","onChangeTokenClick","isRequesting","onBaseAmountChange","handleTokenAmountChange","test","Timer","expiryTime","onTimerComplete","distance","setDistance","interval","setInterval","dist","clearInterval","PillStyle","Quote","NewQuoteText","SwapWidgetHeader","onGasFreeTradeButtonClick","RFQ_EXPIRY_BUFFER_MS","SwapWidget","showWalletList","setShowWalletList","onTrackTransactionClicked","history","useHistory","rfqOrderStatus","supportedTokens","pendingApprovals","LastLook","useContext","useRouteMatch","tokenFrom","tokenTo","setBaseAmount","showOrderSubmitted","setShowOrderSubmitted","showTokenSelectModalFor","setShowTokenSelectModalFor","showGasFeeInfo","setShowGasFeeInfo","protocolFeeDiscountInfo","setProtocolFeeDiscountInfo","setIsApproving","setIsSwapping","setIsWrapping","isConnecting","setIsConnecting","isRequestingQuotes","setIsRequestingQuotes","setPairUnavailable","validatorErrors","setValidatorErrors","activate","web3Error","defaultBaseTokenAddress","findTokensBySymbol","defaultQuoteTokenAddress","maxAmount","swapType","eth","weth","hasSufficientAllowance","gte","insufficientBalance","baseDecimals","tokenId","usesWrapper","_quoteToken","_baseToken","Registry","getServers","initializeTimeout","rfqServers","supportsProtocol","lastLookServers","rfqPromise","lastLookPromises","rfqDispatchResult","then","unwrapResult","orderPromises","timeoutOnNoOrdersPromise","any","waitExtraForAllOrdersPromise","takeBestOption","validator","accepted","doWrap","handleButtonClick","ethereum","UnsupportedChainIdError","newTokenAddress","pathname","finally","ToasterWrapper","Toaster","open","containerStyle","right","toastOptions","padding","margin","borderRadius","ToolbarContainer","IconAirswap","ToolbarButtonsContainer","ToolbarButtonContainer","ToolBarAnchorContainer","ToolbarButton","renderInner","Toolbar","onButtonClick","StyledTradeContainer","WidgetFrame","StyledEthBalance","EthBalance","SUPPORTED_LOCALES","LOCALE_LABEL","nb","ThemeContainer","ThemeButton","LocaleContainer","LocaleButton","Line","PopoverSection","SettingsPopover","selectedButton","setSelectedButton","navigator","language","selectedLocale","setSelectedLocale","i18n","handleThemeButtonClick","newTheme","changeLanguage","SettingsButtonContainer","SettingsButton","settingsOpen","setSettingsOpen","contains","handleEscKey","keyCode","document","ensCachedResponses","useAddressOrEnsName","truncate","fallback","truncateEthAddress","setResult","useLayoutEffect","cached","lookupAddress","StyledBlockies","Blockies","ConnectionStatusCircle","$connected","TransactionLink","rel","getEtherscanURL","BackgroundOverlay","WalletHeader","BlockiesContainer","WalletAddress","WalletLinkContainer","LegendLine","TransactionsContainer","TransactionContainer","NoTransactions","DiconnectButtonContainer","DisconnectButton","addressMapping","WalletLink","MS_PER_HOUR","MS_PER_DAY","MS_PER_MONTH","MS_PER_YEAR","getTimeBetweenTwoDates","date","currentDate","timeDiff","getTime","minutes","hours","days","months","years","SucceedIcon","ProcessingIcon","FailedIcon","WalletTransactionStatus","SpanTitle","SpanSubtitle","StyledTransactionLink","WalletTransaction","TransactionsTab","setTransactionsTabOpen","onDisconnectWalletClicked","transactionsScrollRef","addressOrName","pendingTransactions","completedTransactions","scale","seed","bgColor","BorderedButton","isUnsupportedNetwork","transactionsTabOpen","isButton","WalletButton","PopoverContainer","transactionInState","walletHasChanged","getTransaction","wait","assumedFailureTime","handleTransaction","store","configureStore","transactionsReducer","metadataReducer","tradeTermsReducer","ordersReducer","pricingReducer","walletReducer","registryReducer","userSettingsReducer","currentChainId","currentTransaction","activeTokensCache","transactionCache","previousChainId","txs","mostRecentTransactions","cachedTokensForActiveWallet","join","subscribeToSavedTokenChangesForLocalStoragePersisting","handleReceipt","mapSwapEvent","data","_isBigNumber","isSwapHex","isSwapAddress","isSwapEvent","LAST_ACCOUNT_LOCAL_STORAGE_KEY","StyledWallet","deactivate","setIsActivating","connector","setConnector","setProvider","activated","setActivated","lightContract","setLightContract","useBeforeunload","subscribeToSwapEvents","LightContract","lastConnectedAccount","storedString","loadLastAccount","saveLastAccount","teardownTransferListener","actionCreator","transactionsLocalStorage","close","StyledPage","adjustForBookmarkWarning","Page","activeModalPage","setActiveModalPage","PageLoader","use","HttpBackend","LanguageDetector","initReactI18next","init","fallbackLng","ns","load","debug","process","interpolation","escapeValue","react","useSuspense","backend","loadPath","getLibrary","Web3Provider","pollingInterval","config","EXPONENTIAL_AT","App","path","location","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1790867b.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\n\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import styled from \"styled-components/macro\";\n\ninterface StyledIconProps {\n  iconSize: number;\n}\n\nexport const StyledIcon = styled.div<StyledIconProps>`\n  svg {\n    width: ${(props) => `${props.iconSize}rem`};\n    height: ${(props) => `${props.iconSize}rem`};\n  }\n\n  circle,\n  path,\n  polygon,\n  rect {\n    fill: ${(props) => props.color || \"currentColor\"};\n  }\n\n  .stroke {\n    fill: none;\n    stroke: ${(props) => props.color || \"currentColor\"};\n  }\n`;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconForbidden: FC<SvgIconProps> = ({ className = \"\" }): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 24 24\" className={className}>\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9A7.902 7.902 0 014 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1A7.902 7.902 0 0120 12c0 4.42-3.58 8-8 8z\" />\n  </svg>\n);\n\nexport default IconForbidden;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconLink: FC<SvgIconProps> = ({ className = \"\" }): ReactElement => (\n  <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" className={className}>\n    <path d=\"M19 19H5V5h7V3H5a2 2 0 00-2 2v14a2 2 0 002 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n  </svg>\n);\n\nexport default IconLink;\n","import { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconMedium: FC<SvgIconProps> = ({ className = \"\" }): ReactElement => (\n  <svg\n    width=\"16\"\n    height=\"10\"\n    viewBox=\"0 0 16 10\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={className}\n  >\n    <path\n      d=\"M8.96252 5.00005C8.96584 6.12614 8.52211 7.20752 7.72878 8.00672C6.93544 8.80591 5.85736 9.25758 4.73127 9.26255C3.60518 9.25758 2.5271 8.80591 1.73376 8.00672C0.940424 7.20752 0.496696 6.12614 0.500019 5.00005C0.496696 3.87396 0.940424 2.79258 1.73376 1.99338C2.5271 1.19419 3.60518 0.742512 4.73127 0.737549C5.85736 0.742512 6.93544 1.19419 7.72878 1.99338C8.52211 2.79258 8.96584 3.87396 8.96252 5.00005ZM13.6 5.00005C13.6 7.21255 12.6563 9.01255 11.4875 9.01255C10.3188 9.01255 9.36877 7.21255 9.36877 5.00005C9.36877 2.78755 10.3188 0.987549 11.4875 0.987549C12.6563 0.987549 13.6 2.78755 13.6 5.00005ZM15.5 5.00005C15.5 6.9813 15.1688 8.5938 14.7563 8.5938C14.3438 8.5938 14.0125 6.9813 14.0125 5.00005C14.0125 3.0188 14.3438 1.4063 14.7563 1.4063C15.1688 1.4063 15.5 3.0188 15.5 5.00005Z\"\n      fill=\"currentcolor\"\n    />\n  </svg>\n);\n\nexport default IconMedium;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconPending: FC<SvgIconProps> = ({ className = \"\" }): ReactElement => (\n  <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" className={className}>\n    <path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\" />\n    <path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\" />\n  </svg>\n);\n\nexport default IconPending;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconStar: FC<SvgIconProps> = ({ className = \"\" }): ReactElement => (\n  <svg fill=\"currentColor\" viewBox=\"0 0 14 13\" className={className}>\n    <path d=\"M6.99967 10.5133L11.1197 12.9999L10.0263 8.31325L13.6663 5.15992L8.87301 4.75325L6.99967 0.333252L5.12634 4.75325L0.333008 5.15992L3.97301 8.31325L2.87967 12.9999L6.99967 10.5133Z\" />\n  </svg>\n);\n\nexport default IconStar;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconSwap: FC<SvgIconProps> = ({ className = \"\" }): ReactElement => (\n  <svg fill=\"currentColor\" viewBox=\"0 0 10 13\" className={className}>\n    <path d=\"M7.85714 10.0071V5H6.42857V10.0071H4.28571L7.14286 12.8571L10 10.0071H7.85714ZM2.85714 0L0 2.85H2.14286V7.85714H3.57143V2.85H5.71429L2.85714 0Z\" />\n  </svg>\n);\n\nexport default IconSwap;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconTelegram: FC<SvgIconProps> = ({ className = \"\" }): ReactElement => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={className}\n  >\n    <path\n      d=\"M7.965 0.50002C5.98195 0.509275 4.08327 1.30353 2.68431 2.70906C1.28535 4.11458 0.499978 6.01695 0.5 8.00002C0.5 9.98914 1.29018 11.8968 2.6967 13.3033C4.10322 14.7098 6.01088 15.5 8 15.5C9.98912 15.5 11.8968 14.7098 13.3033 13.3033C14.7098 11.8968 15.5 9.98914 15.5 8.00002C15.5 6.0109 14.7098 4.10324 13.3033 2.69672C11.8968 1.2902 9.98912 0.50002 8 0.50002C7.98833 0.499993 7.97667 0.499993 7.965 0.50002ZM11.0662 5.01502C11.1287 5.01377 11.2669 5.0294 11.3569 5.10252C11.4167 5.15446 11.4548 5.22694 11.4637 5.30564C11.4738 5.36377 11.4862 5.49689 11.4762 5.60065C11.3638 6.78689 10.875 9.66439 10.6262 10.9925C10.5212 11.555 10.3144 11.7431 10.1138 11.7613C9.67875 11.8019 9.34813 11.4738 8.92625 11.1975C8.26625 10.7644 7.89313 10.495 7.2525 10.0725C6.51188 9.58502 6.99188 9.31627 7.41375 8.87877C7.52437 8.76377 9.44313 7.01814 9.48063 6.86002C9.485 6.84002 9.48938 6.76627 9.44563 6.72752C9.40187 6.68877 9.33687 6.70189 9.29 6.71252C9.22375 6.72752 8.16937 7.42502 6.12687 8.80314C5.82688 9.00939 5.55625 9.1094 5.31313 9.10314C5.04563 9.09814 4.53062 8.95252 4.1475 8.82814C3.6775 8.67502 3.30437 8.59439 3.33687 8.33502C3.35375 8.20002 3.54 8.06189 3.895 7.92064C6.08125 6.96814 7.53875 6.34002 8.26875 6.03689C10.3513 5.17064 10.7844 5.02002 11.0662 5.01502Z\"\n      fill=\"currentcolor\"\n    />\n  </svg>\n);\n\nexport default IconTelegram;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconTransaction: FC<SvgIconProps> = ({\n  className = \"\",\n}): ReactElement => (\n  <svg width=\"12\" height=\"21\" viewBox=\"0 0 12 21\">\n    <path d=\"M4.57384 17.9222L10.7109 12.7726L9.24172 11.0216L3.10461 16.1713L0.900767 13.5448L0.346062 19.9779L6.77768 20.5487L4.57384 17.9222ZM11.697 1.50192L5.26538 0.931111L7.46923 3.55755L1.33212 8.7072L2.80134 10.4582L8.93845 5.30851L11.1423 7.93495L11.697 1.50192Z\" />\n  </svg>\n);\n\nexport default IconTransaction;\n","import { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconTwitter: FC<SvgIconProps> = ({ className = \"\" }): ReactElement => (\n  <svg\n    width=\"16\"\n    height=\"14\"\n    viewBox=\"0 0 16 14\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={className}\n  >\n    <path\n      d=\"M15.4706 2.35624C14.909 2.6035 14.3141 2.76671 13.705 2.84062C14.3463 2.45515 14.8265 1.85065 15.0569 1.13874C14.4625 1.48562 13.8038 1.73812 13.1025 1.87874C12.6398 1.38401 12.0268 1.05588 11.3585 0.945307C10.6903 0.834732 10.0042 0.9479 9.40684 1.26724C8.80948 1.58658 8.33429 2.09421 8.05503 2.71132C7.77578 3.32843 7.7081 4.02047 7.8625 4.67999C5.30625 4.55937 3.04188 3.33124 1.525 1.47624C1.24925 1.94488 1.10541 2.47938 1.10875 3.02312C1.10875 4.09187 1.6525 5.03124 2.47625 5.58312C1.98804 5.56758 1.51061 5.43558 1.08375 5.19812V5.23562C1.08347 5.94586 1.32892 6.63433 1.77844 7.18422C2.22797 7.7341 2.85388 8.11154 3.55 8.25249C3.09894 8.37336 2.62651 8.39151 2.1675 8.30562C2.36508 8.91687 2.74854 9.45121 3.26438 9.83405C3.78023 10.2169 4.40272 10.4292 5.045 10.4412C3.9572 11.295 2.61405 11.7583 1.23125 11.7569C0.9875 11.7569 0.744375 11.7425 0.5 11.715C1.90982 12.6177 3.54907 13.0969 5.22312 13.0956C10.8813 13.0956 13.9719 8.41062 13.9719 4.35499C13.9719 4.22374 13.9719 4.09249 13.9625 3.96124C14.5662 3.52678 15.087 2.98738 15.5 2.36874L15.4706 2.35624Z\"\n      fill=\"currentcolor\"\n    />\n  </svg>\n);\n\nexport default IconTwitter;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconVote: FC<SvgIconProps> = ({ className = \"\" }): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 24 24\" className={className}>\n    <path d=\"M18 12.9993H17.32L15.32 14.9993H17.23L19 16.9993H5L6.78 14.9993H8.83L6.83 12.9993H6L3 15.9993V19.9993C3 21.0993 3.89 21.9993 4.99 21.9993H19C20.1 21.9993 21 21.1093 21 19.9993V15.9993L18 12.9993ZM19 19.9993H5V18.9993H19V19.9993ZM11.34 15.0193C11.73 15.4093 12.36 15.4093 12.75 15.0193L19.11 8.65931C19.5 8.26931 19.5 7.63931 19.11 7.24931L14.16 2.29931C13.78 1.89931 13.15 1.89931 12.76 2.28931L6.39 8.65931C6 9.04931 6 9.67931 6.39 10.0693L11.34 15.0193ZM13.46 4.40931L17 7.94931L12.05 12.8993L8.51 9.35931L13.46 4.40931Z\" />\n  </svg>\n);\n\nexport default IconVote;\n","import { FC, ReactElement } from \"react\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { HiX } from \"react-icons/hi\";\nimport { IoMdInformationCircleOutline, IoMdSettings } from \"react-icons/io\";\n\nimport { StyledIcon } from \"./Icon.styles\";\nimport {\n  IconAirswap,\n  IconArrowDown,\n  IconArrowLeft,\n  IconArrowRight,\n  IconBars,\n  IconChevronDown,\n  IconCampaign,\n  IconCode,\n  IconContactSupport,\n  IconDarkModeSwitch,\n  IconDeny,\n  IconEdit,\n  IconForbidden,\n  IconLibrary,\n  IconLink,\n  IconPending,\n  IconStar,\n  IconSwap,\n  IconTelegram,\n  IconTransaction,\n  IconTwitter,\n  IconVote,\n  IconX,\n  IconDiscord,\n  IconMedium,\n} from \"./icons\";\n\ntype IconSet = {\n  [key: string]: FC<SvgIconProps>;\n};\n\nexport interface SvgIconProps {\n  className?: string;\n  iconSize?: number;\n  color?: string;\n}\n\nexport const icons: IconSet = {\n  about: IconLibrary,\n  airswap: IconAirswap,\n  \"arrow-down\": IconArrowDown,\n  \"arrow-right\": IconArrowRight,\n  \"arrow-left\": IconArrowLeft,\n  bars: IconBars,\n  \"button-x\": IconX,\n  campaign: IconCampaign,\n  \"chevron-down\": IconChevronDown,\n  code: IconCode,\n  \"contact-support\": IconContactSupport,\n  \"dark-mode-switch\": IconDarkModeSwitch,\n  deny: IconDeny,\n  discord: IconDiscord,\n  edit: IconEdit,\n  \"exit-modal\": HiX,\n  forbidden: IconForbidden,\n  \"information-circle-outline\": IoMdInformationCircleOutline,\n  medium: IconMedium,\n  settings: IoMdSettings,\n  star: IconStar,\n  swap: IconSwap,\n  telegram: IconTelegram,\n  \"transaction-completed\": BiCheck,\n  \"transaction-failed\": HiX,\n  \"transaction-pending\": IconPending,\n  \"transaction-link\": IconLink,\n  transaction: IconTransaction,\n  twitter: IconTwitter,\n  \"wallet-link\": IconLink,\n  vote: IconVote,\n};\n\ninterface IconProps extends SvgIconProps {\n  name: keyof typeof icons;\n}\n\nconst Icon: FC<IconProps> = ({\n  name,\n  iconSize = 1,\n  className = \"\",\n}): ReactElement | null => {\n  const IconComponent = icons[name];\n\n  return IconComponent ? (\n    <StyledIcon iconSize={iconSize} className={className}>\n      <IconComponent />\n    </StyledIcon>\n  ) : null;\n};\n\nexport default Icon;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconLibrary: FC<SvgIconProps> = ({ className = \"\" }): ReactElement => (\n  <svg viewBox=\"0 0 21 21\" className={className}>\n    <path d=\"M20.5968 4.76732C20.166 4.54732 19.7168 4.36398 19.2493 4.20815V15.2357C18.2043 14.8598 17.1318 14.6673 16.041 14.6673C14.2993 14.6673 12.576 15.1623 10.9993 16.1157V5.02398C9.51435 4.17148 7.80018 3.66732 5.95768 3.66732C4.31685 3.66732 2.76768 4.07065 1.40185 4.76732C1.09935 4.91398 0.916016 5.23482 0.916016 5.57398V16.6473C0.916016 17.179 1.34685 17.5548 1.83268 17.5548C1.97935 17.5548 2.12602 17.5182 2.27268 17.4448C3.38185 16.8673 4.62852 16.5007 5.95768 16.5007C7.85518 16.5007 9.60602 17.2523 10.9993 18.334C12.3927 17.2523 14.1435 16.5007 16.041 16.5007C17.3702 16.5007 18.6168 16.8673 19.726 17.454C19.8727 17.5273 20.0193 17.564 20.166 17.564C20.6427 17.564 21.0827 17.1882 21.0827 16.6565V5.57398C21.0827 5.23482 20.8993 4.91398 20.5968 4.76732ZM9.16602 15.2357C8.12102 14.8598 7.04852 14.6673 5.95768 14.6673C4.86685 14.6673 3.79435 14.8598 2.74935 15.2357V6.15148C3.76685 5.72065 4.83935 5.50065 5.95768 5.50065C7.05768 5.50065 8.14852 5.72982 9.16602 6.16065V15.2357ZM17.416 0.458984L12.8327 5.04232V13.7507L17.416 9.62565V0.458984Z\" />\n  </svg>\n);\n\nexport default IconLibrary;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconAirswap: FC<SvgIconProps> = ({ className = \"\" }): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 40 40\" className={className}>\n    <path d=\"M29.1306 28.9805L20.0115 38.0754L15.4785 33.5544C20.3656 33.2719 25.0757 31.7001 29.1306 28.9805Z\" />\n    <path d=\"M37.7705 19.6388L36.655 18.5262L20.0104 1.92578L3.3659 18.5262L1.93164 19.9567C2.10871 20.098 2.26807 20.2569 2.44514 20.3982C3.02947 20.8927 3.63151 21.3518 4.25125 21.7757C10.8382 26.4026 19.0011 27.7977 26.5443 25.9611C29.6253 25.2194 32.547 23.9302 35.1853 22.1819C35.8405 21.7404 36.4779 21.2812 37.0976 20.7867C37.4341 20.5218 37.7705 20.2392 38.1069 19.939L37.7705 19.6388ZM24.4018 23.8066C19.4438 20.7514 13.7245 19.162 7.88118 19.1796C15.4775 15.8949 24.7913 15.4357 33.3438 20.3452C30.6169 22.0759 27.5713 23.2591 24.4018 23.8066Z\" />\n  </svg>\n);\n\nexport default IconAirswap;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconArrowDown: FC<SvgIconProps> = ({ className = \"\" }): ReactElement => (\n  <svg viewBox=\"0 0 12 12\" className={className}>\n    <path\n      d=\"M11.3334 5.99996L10.3934 5.05996L6.66675 8.77996V0.666626H5.33341V8.77996L1.61341 5.05329L0.666748 5.99996L6.00008 11.3333L11.3334 5.99996Z\"\n      strokeWidth=\"0.4\"\n    />\n  </svg>\n);\n\nexport default IconArrowDown;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconArrowRight: FC<SvgIconProps> = ({ className = \"\" }): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 12 20\" className={className}>\n    <path\n      className=\"stroke\"\n      d=\"M2 18L10 10L2 2\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"square\"\n    />\n  </svg>\n);\n\nexport default IconArrowRight;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconArrowLeft: FC<SvgIconProps> = ({ className = \"\" }): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 12 20\" className={className}>\n    <path\n      className=\"stroke\"\n      d=\"M2 18L10 10L2 2\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"square\"\n      transform-origin=\"center\"\n      transform=\"scale(-1, 1)\"\n    />\n  </svg>\n);\n\nexport default IconArrowLeft;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconBars: FC<SvgIconProps> = ({ className = \"\" }): ReactElement => (\n  <svg viewBox=\"0 0 24 24\" className={className}>\n    <path d=\"M5 9.2H8V19H5V9.2ZM10.6 5H13.4V19H10.6V5ZM16.2 13H19V19H16.2V13Z\" />\n  </svg>\n);\n\nexport default IconBars;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconX: FC<SvgIconProps> = ({ className = \"\" }): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 14 14\" className={className}>\n    <path\n      d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\"\n      fill=\"white\"\n    />\n  </svg>\n);\n\nexport default IconX;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconCampaign: FC<SvgIconProps> = ({ className = \"\" }): ReactElement => (\n  <svg viewBox=\"0 0 25 24\" className={className}>\n    <path d=\"M18.9316 11C18.9316 11.67 18.9316 12.33 18.9316 13C20.1316 13 21.6916 13 22.9316 13C22.9316 12.33 22.9316 11.67 22.9316 11C21.6916 11 20.1316 11 18.9316 11Z\" />\n    <path d=\"M16.9316 17.61C17.8916 18.32 19.1416 19.26 20.1316 20C20.5316 19.47 20.9316 18.93 21.3316 18.4C20.3416 17.66 19.0916 16.72 18.1316 16C17.7316 16.54 17.3316 17.08 16.9316 17.61Z\" />\n    <path d=\"M21.3316 5.6C20.9316 5.07 20.5316 4.53 20.1316 4C19.1416 4.74 17.8916 5.68 16.9316 6.4C17.3316 6.93 17.7316 7.47 18.1316 8C19.0916 7.28 20.3416 6.35 21.3316 5.6Z\" />\n    <path d=\"M4.93164 9C3.83164 9 2.93164 9.9 2.93164 11V13C2.93164 14.1 3.83164 15 4.93164 15H5.93164V19H7.93164V15H8.93164L13.9316 18V6L8.93164 9H4.93164ZM9.96164 10.71L11.9316 9.53V14.47L9.96164 13.29L9.48164 13H8.93164H4.93164V11H8.93164H9.48164L9.96164 10.71Z\" />\n    <path d=\"M16.4316 12.0004C16.4316 10.6704 15.8516 9.47039 14.9316 8.65039V15.3404C15.8516 14.5304 16.4316 13.3304 16.4316 12.0004Z\" />\n  </svg>\n);\n\nexport default IconCampaign;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconChevronDown: FC<SvgIconProps> = ({\n  className = \"\",\n}): ReactElement => (\n  <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" className={className}>\n    <path\n      strokeWidth=\"0\"\n      d=\"M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\"\n    />\n  </svg>\n);\n\nexport default IconChevronDown;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconCode: FC<SvgIconProps> = ({ className = \"\" }): ReactElement => (\n  <svg viewBox=\"0 0 24 24\" className={className}>\n    <path d=\"M9.4 16.6L4.8 12L9.4 7.4L8 6L2 12L8 18L9.4 16.6ZM14.6 16.6L19.2 12L14.6 7.4L16 6L22 12L16 18L14.6 16.6Z\" />\n  </svg>\n);\n\nexport default IconCode;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconContactSupport: FC<SvgIconProps> = ({\n  className = \"\",\n}): ReactElement => (\n  <svg viewBox=\"0 0 24 24\" className={className}>\n    <path\n      d=\"M4 13C5.1 13 6 12.1 6 11C6 9.9 5.1 9 4 9C2.9 9 2 9.9 2 11C2 12.1 2.9 13 4 13ZM5.13 14.1C4.76 14.04 4.39 14 4 14C3.01 14 2.07 14.21 1.22 14.58C0.48 14.9 0 15.62 0 16.43V18H4.5V16.39C4.5 15.56 4.73 14.78 5.13 14.1ZM20 13C21.1 13 22 12.1 22 11C22 9.9 21.1 9 20 9C18.9 9 18 9.9 18 11C18 12.1 18.9 13 20 13ZM24 16.43C24 15.62 23.52 14.9 22.78 14.58C21.93 14.21 20.99 14 20 14C19.61 14 19.24 14.04 18.87 14.1C19.27 14.78 19.5 15.56 19.5 16.39V18H24V16.43ZM16.24 13.65C15.07 13.13 13.63 12.75 12 12.75C10.37 12.75 8.93 13.14 7.76 13.65C6.68 14.13 6 15.21 6 16.39V18H18V16.39C18 15.21 17.32 14.13 16.24 13.65ZM8.07 16C8.16 15.77 8.2 15.61 8.98 15.31C9.95 14.93 10.97 14.75 12 14.75C13.03 14.75 14.05 14.93 15.02 15.31C15.79 15.61 15.83 15.77 15.93 16H8.07ZM12 8C12.55 8 13 8.45 13 9C13 9.55 12.55 10 12 10C11.45 10 11 9.55 11 9C11 8.45 11.45 8 12 8ZM12 6C10.34 6 9 7.34 9 9C9 10.66 10.34 12 12 12C13.66 12 15 10.66 15 9C15 7.34 13.66 6 12 6Z\"\n      fill=\"white\"\n    />\n  </svg>\n);\n\nexport default IconContactSupport;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconDarkModeSwitch: FC<SvgIconProps> = ({\n  className = \"\",\n}): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 26 26\" className={className}>\n    <path\n      className=\"stroke\"\n      d=\"M12.9946 18.4559C16.0076 18.4559 18.4501 16.0134 18.4501 13.0005C18.4501 9.98761 16.0076 7.54517 12.9946 7.54517C9.98158 7.54517 7.53906 9.98761 7.53906 13.0005C7.53906 16.0134 9.98158 18.4559 12.9946 18.4559Z\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M13 1V3.18214\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M13 22.822V25.0042\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M4.51562 4.51343L6.06506 6.06274\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M19.9375 19.9404L21.4869 21.4897\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M1 13.0024H3.18222\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M22.8203 13.0024H25.0025\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M4.51562 21.4897L6.06506 19.9404\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M19.9375 6.06274L21.4869 4.51343\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path d=\"M13 19.003V7.60107L17.0507 9.02632L18.4009 13.302L16.3756 17.5778L13 19.003Z\" />\n  </svg>\n);\n\nexport default IconDarkModeSwitch;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconDeny: FC<SvgIconProps> = ({ className = \"\" }): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 20 20\" className={className}>\n    <path\n      d=\"M5 9V11H15V9H5ZM10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM10 18C5.59 18 2 14.41 2 10C2 5.59 5.59 2 10 2C14.41 2 18 5.59 18 10C18 14.41 14.41 18 10 18Z\"\n      fill=\"#6E7686\"\n    />\n  </svg>\n);\n\nexport default IconDeny;\n","import { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconDiscord: FC<SvgIconProps> = ({ className = \"\" }): ReactElement => (\n  <svg\n    width=\"16\"\n    height=\"12\"\n    viewBox=\"0 0 16 12\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={className}\n  >\n    <path\n      d=\"M13.1981 1.23123C12.2256 0.784835 11.1993 0.466511 10.1449 0.284233C10.1354 0.282446 10.1255 0.283725 10.1167 0.287888C10.1078 0.292051 10.1006 0.298886 10.0959 0.30742C9.964 0.541983 9.81794 0.84792 9.71569 1.08836C8.56275 0.915733 7.41569 0.915733 6.28644 1.08836C6.18419 0.842545 6.03281 0.541983 5.90038 0.30742C5.89547 0.299081 5.88817 0.292413 5.87941 0.288288C5.87066 0.284162 5.86087 0.282771 5.85131 0.284295C4.7968 0.46615 3.77044 0.784447 2.79806 1.23117C2.78975 1.23472 2.78274 1.24077 2.778 1.24848C0.833378 4.15373 0.300628 6.98755 0.562002 9.78623C0.562742 9.79309 0.564848 9.79972 0.568198 9.80574C0.571547 9.81176 0.576072 9.81705 0.581502 9.82129C1.8645 10.7635 3.10731 11.3355 4.32706 11.7147C4.33655 11.7175 4.34667 11.7174 4.35608 11.7143C4.36548 11.7112 4.37372 11.7053 4.37969 11.6974C4.66819 11.3034 4.92538 10.8879 5.14594 10.451C5.14897 10.4451 5.1507 10.4385 5.15102 10.4318C5.15133 10.4251 5.15023 10.4184 5.14777 10.4122C5.14531 10.4059 5.14156 10.4003 5.13677 10.3956C5.13197 10.3909 5.12624 10.3873 5.11994 10.385C4.71194 10.2302 4.3235 10.0415 3.94981 9.8273C3.943 9.82329 3.93728 9.81767 3.93315 9.81094C3.92902 9.8042 3.92661 9.79655 3.92615 9.78866C3.92568 9.78077 3.92716 9.77289 3.93046 9.7657C3.93376 9.75852 3.93877 9.75226 3.94506 9.74748C4.02369 9.68855 4.10238 9.62729 4.17744 9.56536C4.18411 9.55986 4.19219 9.55633 4.20075 9.55517C4.20932 9.55401 4.21805 9.55526 4.22594 9.55879C6.68081 10.6796 9.33844 10.6796 11.7643 9.55879C11.7722 9.55504 11.781 9.5536 11.7897 9.55465C11.7984 9.5557 11.8066 9.5592 11.8134 9.56473C11.8885 9.62661 11.9671 9.68855 12.0464 9.74748C12.0527 9.75222 12.0577 9.75843 12.0611 9.76558C12.0644 9.77272 12.066 9.78058 12.0655 9.78846C12.0651 9.79633 12.0628 9.80399 12.0587 9.81075C12.0547 9.81751 12.049 9.82317 12.0423 9.82723C11.6684 10.0456 11.2768 10.2319 10.8716 10.3844C10.8653 10.3868 10.8596 10.3905 10.8549 10.3952C10.8501 10.4 10.8464 10.4057 10.844 10.412C10.8416 10.4183 10.8405 10.425 10.8409 10.4318C10.8413 10.4385 10.8431 10.4451 10.8462 10.451C11.0714 10.8873 11.3286 11.3028 11.6118 11.6968C11.6176 11.7049 11.6258 11.711 11.6352 11.7142C11.6447 11.7174 11.6549 11.7176 11.6644 11.7147C12.8901 11.3355 14.1329 10.7635 15.4159 9.82129C15.4214 9.81726 15.426 9.8121 15.4294 9.80615C15.4327 9.80021 15.4348 9.79361 15.4354 9.7868C15.7482 6.55117 14.9116 3.74061 13.2176 1.24905C13.2135 1.24095 13.2066 1.23461 13.1981 1.23117V1.23123ZM5.5125 8.08211C4.77344 8.08211 4.16444 7.40355 4.16444 6.57023C4.16444 5.73698 4.76163 5.05842 5.51256 5.05842C6.26931 5.05842 6.87238 5.74292 6.86056 6.5703C6.86056 7.40355 6.26338 8.08211 5.5125 8.08211ZM10.4968 8.08211C9.75769 8.08211 9.14869 7.40355 9.14869 6.57023C9.14869 5.73698 9.74581 5.05842 10.4968 5.05842C11.2535 5.05842 11.8566 5.74292 11.8448 6.5703C11.8448 7.40355 11.2535 8.08211 10.4968 8.08211Z\"\n      fill=\"currentcolor\"\n    />\n  </svg>\n);\n\nexport default IconDiscord;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconEdit: FC<SvgIconProps> = ({ className = \"\" }): ReactElement => (\n  <svg viewBox=\"0 0 25 24\" className={className}>\n    <path d=\"M14.5131 9.02L15.4331 9.94L6.37312 19H5.45312V18.08L14.5131 9.02ZM18.1131 3C17.8631 3 17.6031 3.1 17.4131 3.29L15.5831 5.12L19.3331 8.87L21.1631 7.04C21.5531 6.65 21.5531 6.02 21.1631 5.63L18.8231 3.29C18.6231 3.09 18.3731 3 18.1131 3ZM14.5131 6.19L3.45312 17.25V21H7.20312L18.2631 9.94L14.5131 6.19Z\" />\n  </svg>\n);\n\nexport default IconEdit;\n","import styled from \"styled-components/macro\";\n\nimport { BookmarkWarningProps } from \"./BookmarkWarning\";\n\nexport const Text = styled.div`\n  transition: opacity 0.3s ease-out;\n`;\n\nexport const ButtonX = styled.button`\n  position: absolute;\n  right: 2rem;\n  color: ${(props) => props.theme.colors.alwaysWhite};\n  pointer-events: ${(props) => (props.disabled ? \"none\" : \"visible\")};\n  cursor: ${(props) => (props.disabled ? \"none\" : \"pointer\")};\n`;\n\nexport const StyledBookmarkWarning = styled.div<BookmarkWarningProps>`\n  height: 40px;\n  display: flex;\n  transition: opacity 0.3s ease-out;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  font-size: 1rem;\n  font-weight: 600;\n  white-space: nowrap;\n  padding-left: 1rem;\n  padding-right: 3.5rem;\n  color: ${(props) => props.theme.colors.alwaysWhite};\n  background: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  z-index: 1;\n  ${Text} {\n    font-weight: normal;\n    text-overflow: ellipsis;\n    text-align: center;\n    overflow: hidden;\n  }\n  ${ButtonX} {\n    font-weight: normal;\n  }\n`;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport Icon from \"../Icon/Icon\";\nimport { ButtonX, StyledBookmarkWarning, Text } from \"./BookmarkWarning.styles\";\n\nexport type BookmarkWarningProps = {\n  /**\n   * if hidden, return null so that nothing gets rendered\n   */\n  hidden?: boolean;\n  /**\n   * A handler for the close action\n   */\n  onClick?: () => void;\n};\n\nexport const BookmarkWarning = ({\n  hidden = false,\n  onClick,\n}: BookmarkWarningProps) => {\n  const { t } = useTranslation([\"common\"]);\n  if (hidden) return null;\n\n  return (\n    <StyledBookmarkWarning>\n      <Text>\n        {t(\"common:bookmarkWarning1\")}\n        <strong>airswap.io</strong>\n        {t(\"common:bookmarkWarning2\")}\n      </Text>\n      <ButtonX onClick={onClick}>\n        <Icon iconSize={1.0} name=\"button-x\" />{\" \"}\n      </ButtonX>\n    </StyledBookmarkWarning>\n  );\n};\n\nexport default BookmarkWarning;\n","import { ThemeType } from \"styled-components/macro\";\n\nimport { THEME_LOCAL_STORAGE_KEY } from \"../userSettingsSlice\";\n\nexport default function getInitialThemeValue(): ThemeType {\n  if (localStorage[THEME_LOCAL_STORAGE_KEY] === \"dark\") {\n    return \"dark\";\n  }\n\n  if (localStorage[THEME_LOCAL_STORAGE_KEY] === \"light\") {\n    return \"light\";\n  }\n\n  return \"dark\";\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { ThemeType } from \"styled-components/macro\";\n\nimport { RootState } from \"../../app/store\";\nimport getInitialBookmarkWarning from \"./helpers/getInitialBookmarkWarning\";\nimport getInitialThemeValue from \"./helpers/getInitialThemeValue\";\n\nexport interface UserSettingsState {\n  theme: ThemeType;\n  showBookmarkWarning: boolean;\n}\n\nexport const THEME_LOCAL_STORAGE_KEY = \"airswap/theme\";\nexport const BOOKMARK_WARNING_LOCAL_STORAGE_KEY =\n  \"airswap/show-bookmark-warning\";\n\nconst initialState: UserSettingsState = {\n  theme: getInitialThemeValue(),\n  showBookmarkWarning: getInitialBookmarkWarning(),\n};\n\nconst userSettingsSlice = createSlice({\n  name: \"userSettings\",\n  initialState,\n  reducers: {\n    disableBookmarkWarning: (state) => {\n      const showBookmarkWarning: boolean = false;\n      localStorage[BOOKMARK_WARNING_LOCAL_STORAGE_KEY] = \"disabled\";\n      state.showBookmarkWarning = showBookmarkWarning;\n    },\n    toggleTheme: (state) => {\n      const theme: ThemeType = state.theme === \"dark\" ? \"light\" : \"dark\";\n      localStorage[THEME_LOCAL_STORAGE_KEY] = theme;\n      state.theme = theme;\n    },\n    setTheme: (state, { payload }) => {\n      // if the user perfers dark color scheme and they are currently on light mode -> switch to dark\n      if (payload === \"system\") {\n        if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n          if (state.theme === \"light\") {\n            localStorage[THEME_LOCAL_STORAGE_KEY] = \"dark\";\n            state.theme = payload;\n          }\n        } else {\n          if (state.theme === \"dark\") {\n            localStorage[THEME_LOCAL_STORAGE_KEY] = \"light\";\n            state.theme = payload;\n          }\n        }\n      } else {\n        localStorage[THEME_LOCAL_STORAGE_KEY] = payload;\n        state.theme = payload;\n      }\n    },\n  },\n});\n\nexport const selectUserSettings = (state: RootState) => state.userSettings;\n\nexport const {\n  toggleTheme,\n  disableBookmarkWarning,\n  setTheme,\n} = userSettingsSlice.actions;\n\nexport default userSettingsSlice.reducer;\n","import { BOOKMARK_WARNING_LOCAL_STORAGE_KEY } from \"../userSettingsSlice\";\n\nexport default function getInitialBookmarkWarning(): boolean {\n  return localStorage[BOOKMARK_WARNING_LOCAL_STORAGE_KEY] !== \"disabled\";\n}\n","import { useState, useEffect } from \"react\";\n\n// Source: https://usehooks.com/useWindowSize/\n\ninterface WindowSizeState {\n  width?: number;\n  height?: number;\n}\n\nexport default function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowSizeState>({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n","import { DefaultTheme } from \"styled-components/macro\";\n\nexport const fontLoos = '\"loos-normal\", sans-serif';\nexport const fontMono = '\"DM Mono\", monospace';\n\nconst typography: DefaultTheme[\"typography\"] = {\n  title1: {\n    fontSize: \"2rem\",\n    lineHeight: 1.167,\n    fontWeight: 500,\n  },\n  title2: {\n    fontSize: \"1.5rem\",\n    lineHeight: 1.25,\n    fontWeight: 700,\n  },\n  title3: {\n    fontSize: \"1.25rem\",\n    lineHeight: 1.25,\n    fontWeight: 400,\n  },\n  title4: {\n    fontSize: \"1rem\",\n    lineHeight: 1.33,\n    fontWeight: 700,\n  },\n  subtitle: {\n    fontSize: \"1rem\",\n    lineHeight: 1.5,\n    fontWeight: 700,\n  },\n  paragraph: {\n    fontSize: \"1rem\",\n    lineHeight: 1.5,\n    fontWeight: 400,\n  },\n  infoHeading: {\n    fontSize: \"1rem\",\n    lineHeight: 1.5,\n    fontWeight: 600,\n  },\n  infoSubHeading: {\n    fontSize: \"1.0625rem\",\n    lineHeight: 1.41,\n    fontWeight: 400,\n  },\n  formLabel: {\n    fontSize: \"0.75rem\",\n    lineHeight: 1.5,\n    fontWeight: 600,\n  },\n  formInput: {\n    fontSize: \"1.5rem\",\n    lineHeight: 1.5,\n    fontWeight: 500,\n  },\n  subText: {\n    fontSize: \"0.875rem\",\n    lineHeight: 1.5,\n    fontWeight: 500,\n  },\n  // Form select inputs\n  selectItem: {\n    fontSize: \"1.125rem\",\n    lineHeight: 1 + 1 / 3,\n    fontWeight: 600,\n  },\n  link: {\n    fontSize: \"0.75rem\",\n    lineHeight: 2,\n    fontWeight: 700,\n  },\n  nav: {\n    fontSize: \"1rem\",\n    lineHeight: 1.25,\n    fontWeight: 400,\n  },\n  small: {\n    fontSize: \"0.875rem\",\n    lineHeight: 1.25,\n    fontWeight: 500,\n  },\n};\n\nexport const darkTheme: DefaultTheme = {\n  name: \"dark\",\n  colors: {\n    primary: \"#2B71FF\",\n    primaryDark: \"#0F5FFFAA\",\n    white: \"#FFFFFF\",\n    alwaysWhite: \"#FFFFFF\",\n    black: \"#060607\",\n    alwaysBlack: \"#060607\",\n    grey: \"#404040\",\n    borderGrey: \"#1A1E25\",\n    darkGrey: \"#101217\",\n    lightGrey: \"#6E7686\",\n    placeholderGrey: \"#6E7686\",\n    red: \"#FF0000\",\n    orange: \"#E7765A\",\n    green: \"#60FF66\",\n    placeholderGradient: \"linear-gradient(270deg, #232833 0%, #2F364400 93.3%)\",\n    darkSubText: \"#9EA3AC\",\n  },\n  shadows: {\n    widgetGlow: \"0 0 31.25rem 1rem #2B71FF\",\n  },\n  typography,\n};\n\nexport const lightTheme: DefaultTheme = {\n  name: \"light\",\n  colors: {\n    primary: \"#2B71FF\",\n    primaryDark: \"#101217\",\n    white: \"#060607\",\n    alwaysWhite: \"#FFFFFF\",\n    black: \"#FFFFFF\",\n    alwaysBlack: \"#000000\",\n    grey: \"#404040\",\n    borderGrey: \"#DDE2ED\",\n    darkGrey: \"#F5F8FF\",\n    lightGrey: \"#6E7686\",\n    placeholderGrey: \"#E0EAFF\",\n    red: \"#FF0000\",\n    orange: \"#E7765A\",\n    green: \"#60FF66\",\n    placeholderGradient: \"linear-gradient(270deg, #E1EBFF 0%, #E1EBFF00 93.3%)\",\n    darkSubText: \"#9EA3AC\",\n  },\n  shadows: {\n    widgetGlow: \"0 0 31.25rem 1rem #2B71FF\",\n  },\n  typography,\n};\n","import styled from \"styled-components/macro\";\n\nimport Icon from \"../Icon/Icon\";\n\ninterface StyledIconButtonProps {\n  hasText: boolean;\n}\n\nexport const StyledIcon = styled(Icon)``;\n\nexport const StyledIconButton = styled.button<StyledIconButtonProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  padding: 0.5rem;\n  font-weight: 600;\n  box-sizing: border-box;\n  border: 1px solid transparent;\n  border-radius: 2px;\n\n  ${StyledIcon} {\n    svg {\n      margin-left: ${(props) => (props.hasText ? \"0.5rem\" : 0)};\n    }\n  }\n\n  &:focus {\n    outline: 0;\n    border-color: ${(props) => props.theme.colors.lightGrey};\n  }\n\n  &:active {\n    border-color: ${(props) => props.theme.colors.primary};\n  }\n`;\n","import React, { ReactElement } from \"react\";\n\nimport { icons } from \"../Icon/Icon\";\nimport { StyledIcon, StyledIconButton } from \"./IconButton.styles\";\n\nexport type IconButtonProps = {\n  text?: string;\n  icon: keyof typeof icons;\n  iconSize?: number;\n  tabIndex?: number;\n  onClick?: () => void;\n  className?: string;\n};\n\nconst IconButton = React.forwardRef<HTMLButtonElement, IconButtonProps>(\n  (\n    { text, icon, iconSize, tabIndex = 0, className, onClick },\n    ref\n  ): ReactElement => {\n    return (\n      <StyledIconButton\n        hasText={!!text}\n        tabIndex={tabIndex}\n        className={className}\n        onClick={onClick}\n        ref={ref}\n      >\n        {text}\n        <StyledIcon name={icon} iconSize={iconSize} />\n      </StyledIconButton>\n    );\n  }\n);\n\nexport default IconButton;\n","import styled, {\n  DefaultTheme,\n  ThemedStyledFunction,\n  css,\n  StyledComponent,\n} from \"styled-components/macro\";\n\nconst elementMap: Record<\n  keyof DefaultTheme[\"typography\"],\n  keyof JSX.IntrinsicElements\n> = {\n  title1: \"h1\",\n  title2: \"h2\",\n  title3: \"h3\",\n  title4: \"h4\",\n  subtitle: \"h5\",\n  paragraph: \"p\",\n  infoHeading: \"h4\",\n  infoSubHeading: \"h4\",\n  formLabel: \"label\",\n  formInput: \"input\",\n  selectItem: \"div\",\n  link: \"a\",\n  nav: \"div\",\n  small: \"aside\",\n  subText: \"h5\",\n};\n\n/**\n * Creates a styled typography component for the key in `theme.typography`.\n * Element tag is defined above, and additional CSS can be added for properties\n * that are not common to all typography components.\n * @param key The key from `theme.typography` for typography params\n * @param additionalCSS Any additional CSS not included in `theme.typography.key`\n *                      to add, e.g. text-transform. Use `css` utility from\n *                      styled components to add it.\n * @returns A styled component with the correct typography styles appleid.\n */\nconst makeTypographyComponent = (\n  key: keyof DefaultTheme[\"typography\"],\n  additionalCSS?: any\n) => {\n  const tag = elementMap[key];\n  const Component = (styled[tag] as ThemedStyledFunction<\n    typeof tag,\n    DefaultTheme,\n    {},\n    never\n  >)`\n    font-size: ${(props) => props.theme.typography[key].fontSize};\n    font-weight: ${(props) => props.theme.typography[key].fontWeight};\n    line-height: ${(props) => props.theme.typography[key].lineHeight};\n    ${additionalCSS ? additionalCSS : \"\"}\n  `;\n  return Component;\n};\n\nexport const StyledH1 = makeTypographyComponent(\n  \"title1\",\n  css`\n    color: ${(props) =>\n      props.theme.name === \"dark\"\n        ? props.theme.colors.white\n        : props.theme.colors.alwaysBlack};\n  `\n);\nexport const StyledH2 = makeTypographyComponent(\n  \"title2\",\n  css`\n    color: ${(props) =>\n      props.theme.name === \"dark\"\n        ? props.theme.colors.white\n        : props.theme.colors.primary};\n  `\n);\nexport const StyledH3 = makeTypographyComponent(\"title3\");\nexport const StyledH4 = makeTypographyComponent(\"title4\");\nexport const StyledSubtitle = makeTypographyComponent(\n  \"subtitle\",\n  css`\n    text-transform: uppercase;\n  `\n);\nexport const StyledSubText = makeTypographyComponent(\n  \"subText\",\n  css`\n    color: ${(props) => props.theme.colors.darkSubText};\n  `\n);\nexport const StyledParagraph = makeTypographyComponent(\n  \"paragraph\",\n  css`\n    color: ${(props) =>\n      props.theme.name === \"dark\"\n        ? props.theme.colors.white\n        : props.theme.colors.grey};\n  `\n);\n\nexport const StyledLink = makeTypographyComponent(\n  \"link\",\n  css`\n    text-transform: uppercase;\n    text-decoration: underline;\n  `\n) as StyledComponent<\"a\", DefaultTheme, {}>;\n\nexport const StyledNavigation = makeTypographyComponent(\"nav\");\nexport const StyledInfoHeading = makeTypographyComponent(\"infoHeading\");\nexport const StyledInfoSubHeading = makeTypographyComponent(\n  \"infoSubHeading\",\n  css`\n    color: ${(props) => props.theme.colors.lightGrey};\n  `\n);\nexport const StyledFormLabel = makeTypographyComponent(\n  \"formLabel\",\n  css`\n    color: ${(props) => props.theme.colors.lightGrey};\n  `\n);\nexport const StyledFormInput = makeTypographyComponent(\n  \"formInput\",\n  css`\n    color: ${(props) =>\n      props.theme.name === \"dark\"\n        ? props.theme.colors.white\n        : props.theme.colors.primary};\n    background-color: transparent;\n    border: none;\n\n    &::placeholder {\n      color: ${(props) => props.theme.colors.placeholderGrey};\n    }\n  `\n);\nexport const StyledSelectItem = makeTypographyComponent(\"selectItem\");\nexport const StyledMetadata = makeTypographyComponent(\n  \"small\",\n  css`\n    color: ${(props) => props.theme.colors.lightGrey};\n  `\n);\n","import React, { FC, ReactElement } from \"react\";\n\nimport { StyledH1, StyledH2, StyledH3, StyledH4 } from \"./Typography.styles\";\n\ntype TitleType = \"h1\" | \"h2\" | \"h3\" | \"h4\";\n\nexport type TitleProps = {\n  children: React.ReactNode;\n  className?: string;\n  type: TitleType;\n};\n\nconst titles: Record<TitleType, FC<{ className?: string }>> = {\n  h1: StyledH1,\n  h2: StyledH2,\n  h3: StyledH3,\n  h4: StyledH4,\n};\n\nexport const Title: FC<TitleProps> = ({\n  className,\n  children,\n  type,\n}): ReactElement => {\n  const StyledTitle = titles[type];\n\n  return <StyledTitle className={className}>{children}</StyledTitle>;\n};\n\nexport {\n  StyledSubtitle as Subtitle,\n  StyledParagraph as Paragraph,\n  StyledInfoHeading as InfoHeading,\n  StyledInfoSubHeading as InfoSubHeading,\n  StyledFormLabel as FormLabel,\n  StyledFormInput as FormInput,\n  StyledSelectItem as SelectItem,\n  StyledLink as Link,\n  StyledNavigation as Navigation,\n  StyledMetadata as Metadata,\n  StyledSubText as SubText,\n} from \"./Typography.styles\";\n","const sizes = {\n  tinyScreen: \"320px\",\n  phone: \"480px\",\n  tabletPortrait: \"768px\",\n  tabletLandscape: \"1024px\",\n  desktop: \"1448px\",\n  bigDesktop: \"1800px\",\n};\n\nconst breakPoints = {\n  tinyScreenOnly: `(max-width: ${sizes.tinyScreen})`,\n  phoneOnly: `(max-width: ${sizes.phone})`,\n  tabletPortraitUp: `(min-width: ${sizes.tabletPortrait})`,\n  tabletLandscapeUp: `(min-width: ${sizes.tabletLandscape})`,\n  desktopUp: `(min-width: ${sizes.desktop})`,\n  bigDesktopUp: `(min-width: ${sizes.bigDesktop})`,\n};\n\nexport default breakPoints;\n","export const sizes = {\n  toolBarWidth: \"7rem\",\n  tradeContainerPadding: \"2rem\",\n};\n","import { DefaultTheme } from \"styled-components/macro\";\nimport styled from \"styled-components/macro\";\nimport Modal from \"styled-react-modal\";\n\nimport IconButton from \"../../components/IconButton/IconButton\";\nimport { InfoSubHeading, Title } from \"../../components/Typography/Typography\";\nimport breakPoints from \"../../style/breakpoints\";\nimport { sizes } from \"../../style/sizes\";\n\nexport const StyledModal = Modal.styled`\n  position: relative;\n  top: 1rem;\n  border: 1px solid ${(props: { theme: DefaultTheme }) =>\n    props.theme.colors.borderGrey};\n  border-radius: 0.1875rem;\n  width: 37.5rem;\n  min-height: 30rem;\n  padding: 2.5rem 2.125rem;\n  background: ${(props: { theme: DefaultTheme }) =>\n    props.theme.colors.darkGrey};\n\n  @media ${breakPoints.tabletPortraitUp} {\n    left: calc(${sizes.toolBarWidth}/2);\n  }\n\n  @media ${breakPoints.tabletLandscapeUp} {\n    left: 0;\n  }\n`;\n\nexport const ModalCloseButton = styled(IconButton)`\n  position: absolute;\n  top: 1.5rem;\n  right: 1.5rem;\n  padding: 0.25rem;\n`;\n\nexport const ModalTitle = styled(Title)`\n  margin-bottom: 1.5rem;\n`;\n\nexport const ModalParagraph = styled(InfoSubHeading)`\n  color: ${(props: { theme: DefaultTheme }) => props.theme.colors.darkSubText};\n\n  & + & {\n    margin-top: 1rem;\n  }\n`;\n\nexport const ModalSubTitle = styled(Title)`\n  margin: 2.5rem 0 0.5rem;\n  font-size: 1rem;\n`;\n","import { css } from \"styled-components\";\n\nexport const ScrollBarStyle = css`\n  &::-webkit-scrollbar {\n    border-radius: 0.5rem;\n    width: 0.5rem;\n    background: ${(props) => props.theme.colors.darkGrey};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: ${(props) => props.theme.colors.white};\n    border-radius: 0.5rem;\n  }\n`;\n\nexport const InputOrButtonBorderStyle = css`\n  border: 1px solid ${(props) => props.theme.colors.borderGrey};\n\n  &:hover,\n  &:focus {\n    outline: 0;\n    border-color: ${(props) => props.theme.colors.lightGrey};\n  }\n\n  &:active {\n    border-color: ${(props) => props.theme.colors.primary};\n  }\n`;\n\nexport const BorderlessButtonStyle = css`\n  border: 1px solid transparent;\n\n  &:focus {\n    outline: 0;\n    border-color: ${(props) => props.theme.colors.lightGrey};\n  }\n\n  &:active {\n    border-color: ${(props) => props.theme.colors.primary};\n  }\n`;\n\nexport const BorderedPill = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid ${(props) => props.theme.colors.borderGrey};\n  border-radius: 24rem;\n  height: 3rem;\n  padding: 0 1.25rem;\n`;\n","import styled from \"styled-components/macro\";\n\nimport { InputOrButtonBorderStyle } from \"../../../../style/mixins\";\nimport Icon from \"../../../Icon/Icon\";\n\nexport const StyledIcon = styled(Icon)`\n  margin-bottom: 0.375rem;\n  color: ${(props) => props.theme.colors.darkSubText};\n`;\n\nexport const Text = styled.div`\n  font-size: 0.75rem;\n  font-weight: 700;\n  text-transform: uppercase;\n  line-height: 2;\n  color: ${(props) => props.theme.colors.darkSubText};\n`;\n\nexport const GuideButtonContainer = styled.a`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n  border: 1px solid ${(props) => props.theme.colors.borderGrey};\n  padding: 1rem;\n  width: 25%;\n  height: 6.625rem;\n  overflow: hidden;\n\n  &:not(&:last-of-type):not(:focus) {\n    border-right: 0;\n  }\n\n  &:first-of-type {\n    border-top-left-radius: 0.1875rem;\n    border-bottom-left-radius: 0.1875rem;\n  }\n\n  &:last-of-type {\n    border-top-right-radius: 0.1875rem;\n    border-bottom-right-radius: 0.1875rem;\n  }\n\n  ${InputOrButtonBorderStyle}\n\n  &:focus {\n    z-index: 1;\n\n    & + & {\n      border-left: 0;\n    }\n\n    &:not(:last-of-type) {\n      padding-right: calc(1rem - 1px);\n    }\n  }\n\n  &:hover {\n    border: 1px solid ${(props) => props.theme.colors.borderGrey};\n\n    ${StyledIcon} {\n      color: ${(props) => props.theme.colors.white};\n    }\n\n    ${Text} {\n      color: ${(props) => props.theme.colors.white};\n    }\n  }\n\n  &:active {\n    border-color: ${(props) => props.theme.colors.primary};\n  }\n`;\n","import React, { FC } from \"react\";\n\nimport { GuideButtonContainer, StyledIcon, Text } from \"./GuideButton.styles\";\n\nexport interface GuideButtonProps {\n  iconName: string;\n  text: string;\n  href: string;\n}\n\nconst GuideButton: FC<GuideButtonProps> = ({ iconName, text, href }) => {\n  return (\n    <GuideButtonContainer target=\"_blank\" href={href}>\n      <StyledIcon name={iconName} iconSize={1.5} />\n      <Text>{text}</Text>\n    </GuideButtonContainer>\n  );\n};\n\nexport default GuideButton;\n","import styled from \"styled-components/macro\";\n\nexport const GuideButtons = styled.div`\n  display: flex;\n  position: relative;\n  width: 100%;\n  margin-top: 2.125rem;\n`;\n","import React, { FC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport {\n  ModalParagraph,\n  ModalSubTitle,\n  ModalTitle,\n} from \"../../../../styled-components/Modal/Modal\";\nimport GuideButton, { GuideButtonProps } from \"../GuideButton/GuideButton\";\nimport { GuideButtons } from \"./JoinModal.styles\";\n\nconst guideButtons: GuideButtonProps[] = [\n  {\n    iconName: \"vote\",\n    text: \"voter\",\n    href: \"https://about.airswap.io/guides/voters\",\n  },\n  {\n    iconName: \"code\",\n    text: \"developer\",\n    href: \"https://github.com/airswap\",\n  },\n  {\n    iconName: \"campaign\",\n    text: \"ambassador\",\n    href: \"https://about.airswap.io/guides/ambassadors\",\n  },\n  {\n    iconName: \"edit\",\n    text: \"author\",\n    href: \"https://about.airswap.io/guides/authors\",\n  },\n];\n\nconst JoinModal: FC = () => {\n  const { t } = useTranslation([\"information\"]);\n\n  return (\n    <>\n      <ModalTitle type=\"h2\">{t(\"information:join.title\")}</ModalTitle>\n      <ModalParagraph>{t(\"information:join.intro\")}</ModalParagraph>\n\n      <ModalParagraph>{t(\"information:join.paragraph\")}</ModalParagraph>\n\n      <ModalSubTitle type=\"h2\">\n        {t(\"information:join.getStarted\")}\n      </ModalSubTitle>\n\n      <ModalParagraph>{t(\"information:join.paragraph2\")}</ModalParagraph>\n\n      <GuideButtons>\n        {guideButtons.map((guideButton) => {\n          return (\n            <GuideButton\n              key={guideButton.text}\n              iconName={guideButton.iconName}\n              text={guideButton.text}\n              href={guideButton.href}\n            />\n          );\n        })}\n      </GuideButtons>\n    </>\n  );\n};\n\nexport default JoinModal;\n","import React, { FC } from \"react\";\n\nimport { useAppSelector } from \"../../app/hooks\";\nimport { selectUserSettings } from \"../../features/userSettings/userSettingsSlice\";\nimport { darkTheme, lightTheme } from \"../../style/themes\";\nimport {\n  ModalCloseButton,\n  StyledModal,\n} from \"../../styled-components/Modal/Modal\";\nimport JoinModal from \"./subcomponents/JoinModal/JoinModal\";\n\nexport type InformationType = \"stats\" | \"about\" | \"join\";\n\ntype InformationModalProps = {\n  activeModal: InformationType | null;\n  onCloseModalClick: () => void;\n};\n\nconst InformationModals: FC<InformationModalProps> = ({\n  activeModal,\n  onCloseModalClick,\n}) => {\n  // TODO: For some reason StyledModal doesn't inherit theme, so we have to import it again here.\n  const { theme } = useAppSelector(selectUserSettings);\n\n  return (\n    <StyledModal\n      theme={theme === \"dark\" ? darkTheme : lightTheme}\n      isOpen={!!activeModal}\n      onBackgroundClick={onCloseModalClick}\n      onEscapeKeydown={onCloseModalClick}\n    >\n      {activeModal === \"join\" && <JoinModal />}\n      <ModalCloseButton\n        icon=\"exit-modal\"\n        iconSize={1.5}\n        onClick={onCloseModalClick}\n      />\n    </StyledModal>\n  );\n};\n\nexport default InformationModals;\n","import styled from \"styled-components/macro\";\n\nimport { BorderedPill, InputOrButtonBorderStyle } from \"../../style/mixins\";\nimport Icon from \"../Icon/Icon\";\nimport { Link } from \"../Typography/Typography\";\n\nexport const Container = styled.div`\n  position: fixed;\n  bottom: 2.25rem;\n  right: 1.5rem;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  /* justify-content: flex-end; */\n  gap: 0.5rem;\n`;\n\nexport const Divider = styled.div`\n  height: 1px;\n  width: 1rem;\n  background-color: ${(props) => props.theme.colors.borderGrey};\n  flex-shrink: 0;\n  margin-top: 0.25rem;\n`;\n\nexport const PlainLink = styled(Link)<{ $deEmphasize: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n  line-height: 1;\n  height: 2.25rem;\n  width: 2.25rem;\n  transition: opacity 0.3s ease-in-out;\n  opacity: ${({ $deEmphasize }) => ($deEmphasize ? 0.5 : 1)};\n`;\n\nexport const SocialButton = styled.a<{ showLocales: number }>`\n  ${BorderedPill}\n  ${InputOrButtonBorderStyle}\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  width: 2.5rem;\n  height: ${({ showLocales }) => (1 + showLocales) * 2.5 + \"rem\"};\n`;\n\nexport const StyledIcon = styled(Icon)<{ $deEmphasize: boolean }>`\n  padding: 0.6666rem;\n  transition: opacity 0.3s ease-in-out;\n  opacity: ${({ $deEmphasize }) => ($deEmphasize ? 0.5 : 1)};\n`;\n","import { FC, useState } from \"react\";\n\nimport { icons } from \"../Icon/Icon\";\nimport {\n  Container,\n  SocialButton,\n  StyledIcon,\n  PlainLink,\n  Divider,\n} from \"./SocialButtons.styles\";\n\nconst destinations: {\n  icon: keyof typeof icons;\n  primary: string;\n  locales?: Record<string, string>;\n}[] = [\n  {\n    icon: \"twitter\",\n    primary: \"https://twitter.com/airswap\",\n    locales: {\n      en: \"https://twitter.com/airswap\",\n      fr: \"https://twitter.com/airswap_fr\",\n    },\n  },\n  {\n    icon: \"discord\",\n    primary: \"https://chat.airswap.io/\",\n  },\n  {\n    icon: \"medium\",\n    primary: \"https://blog.airswap.io/\",\n  },\n  {\n    icon: \"telegram\",\n    primary: \"https://t.me/airswapofficial\",\n  },\n];\n\nconst SocialButtons: FC<{}> = () => {\n  const [hoveredIcon, setHoveredIcon] = useState<keyof typeof icons | null>(\n    null\n  );\n  const [hoveredLocale, setHoveredLocale] = useState<string | null>(null);\n\n  return (\n    <Container>\n      {destinations.map((dest) => (\n        <SocialButton\n          href={dest.primary}\n          key={dest.icon}\n          onPointerEnter={setHoveredIcon.bind(null, dest.icon)}\n          onPointerLeave={setHoveredIcon.bind(null, null)}\n          showLocales={\n            hoveredIcon === dest.icon\n              ? Object.keys(dest.locales || {}).length\n              : 0\n          }\n        >\n          {hoveredIcon === dest.icon && (\n            <>\n              {Object.keys(dest.locales || {}).map((locale) => (\n                <PlainLink\n                  onPointerEnter={setHoveredLocale.bind(null, locale)}\n                  onPointerLeave={setHoveredLocale.bind(null, null)}\n                  $deEmphasize={\n                    hoveredLocale !== null && hoveredLocale !== locale\n                  }\n                  href={dest.locales?.[locale]}\n                  key={`${dest.icon}-${locale}`}\n                >\n                  {locale}\n                </PlainLink>\n              ))}\n              <Divider />\n            </>\n          )}\n          <StyledIcon\n            iconSize={1}\n            name={dest.icon}\n            $deEmphasize={hoveredIcon !== null && hoveredIcon !== dest.icon}\n          />\n        </SocialButton>\n      ))}\n    </Container>\n  );\n};\n\nexport default SocialButtons;\n","import { TokenInfo } from \"@uniswap/token-lists\";\n\nconst nativeETH: Record<number, TokenInfo> = {\n  1: {\n    chainId: 1,\n    address: \"0x0000000000000000000000000000000000000000\",\n    name: \"Ether\",\n    decimals: 18,\n    symbol: \"ETH\",\n    logoURI: \"images/ethereum-logo.png\",\n  },\n  4: {\n    chainId: 4,\n    address: \"0x0000000000000000000000000000000000000000\",\n    name: \"Ether\",\n    decimals: 18,\n    symbol: \"ETH\",\n    logoURI: \"images/ethereum-logo.png\",\n  },\n};\n\nexport default nativeETH;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { RootState } from \"../../app/store\";\n\nexport type TradeTerms = {\n  /**\n   * The token whose quantity is known\n   */\n  baseToken: { address: string; decimals: number };\n  baseAmount: string;\n  /**\n   * The token whose quantity is unknown\n   */\n  quoteToken: { address: string; decimals: number };\n  /**\n   * The amount of quote token (once known).\n   */\n  quoteAmount: string | null;\n  /**\n   * Sell means sending a known amount of baseToken to receive an as yet unknown\n   * amount of quoteToken. Buy means sending an as yet unknown amount of\n   * quoteToken to receive a known amount of baseToken.\n   */\n  side: \"sell\" | \"buy\";\n};\n\nconst initialState: TradeTerms = {\n  baseToken: { address: \"\", decimals: 18 },\n  quoteToken: { address: \"\", decimals: 18 },\n  baseAmount: \"\",\n  quoteAmount: null,\n  side: \"sell\",\n};\n\nconst tradeTermsSlice = createSlice({\n  name: \"tradeTerms\",\n  initialState,\n  reducers: {\n    clear: () => initialState,\n    set: (_, action: PayloadAction<TradeTerms>) => action.payload,\n    setQuoteAmount: (state, action: PayloadAction<string>) => {\n      state.quoteAmount = action.payload;\n    },\n    clearQuoteAmount: (state) => {\n      state.quoteAmount = null;\n    },\n  },\n});\n\nexport const selectTradeTerms = (state: RootState) => state.tradeTerms;\n\nexport const {\n  set: setTradeTerms,\n  clear: clearTradeTerms,\n  setQuoteAmount: setTradeTermsQuoteAmount,\n  clearQuoteAmount: clearTradeTermsQuoteAmount,\n} = tradeTermsSlice.actions;\n\nexport default tradeTermsSlice.reducer;\n","import { Formula, Levels, Pricing } from \"@airswap/types\";\nimport { calculateCostFromLevels } from \"@airswap/utils\";\n\nimport { BigNumber } from \"bignumber.js\";\n\nexport function pricingIsLevels(value: Levels | Formula): value is Levels {\n  return typeof value !== \"string\";\n}\n\n/**\n * Calculates the quote amount from pricing, given a base amount, fee, and\n * pricing.\n */\nexport const calculateQuoteAmount: (params: {\n  baseAmount: string;\n  side: \"buy\" | \"sell\";\n  signerFee: string;\n  pricing: Pricing;\n}) => string = ({ baseAmount, side, signerFee, pricing }) => {\n  // baseAmount always known.\n  // For a sell, baseAmount is signerAmount.\n  // For a buy, baseAmount is senderAmount.\n\n  if (side === \"sell\") {\n    const levels = pricing.bid;\n    if (!pricingIsLevels(levels)) {\n      throw new Error(\"formulaic pricing not yet supported\");\n    }\n    const signerAmount = new BigNumber(baseAmount)\n      .multipliedBy(1 - parseInt(signerFee) / 1000)\n      // .integerValue(BigNumber.ROUND_CEIL)\n      .toString();\n\n    // FIXME: this can throw if requested amount exceeds available.\n    const senderAmount = calculateCostFromLevels(\n      signerAmount.toString(),\n      levels\n    );\n\n    return senderAmount;\n  } else {\n    // buy order.\n    const levels = pricing.ask;\n    if (!pricingIsLevels(levels)) {\n      throw new Error(\"formulaic pricing not yet supported\");\n    }\n    const senderAmount = baseAmount;\n    // Fee comes out of signerAmount, so we need to add it to the quoteAmount\n    const signerAmount = new BigNumber(\n      calculateCostFromLevels(senderAmount, levels)\n    )\n      .multipliedBy(1 + parseInt(signerFee) / 1000)\n      // .integerValue(BigNumber.ROUND_FLOOR)\n      .toString();\n    return signerAmount;\n  }\n};\n","import BalanceChecker from \"@airswap/balances/build/contracts/BalanceChecker.json\";\nimport balancesDeploys from \"@airswap/balances/deploys.js\";\nimport { Light, Wrapper } from \"@airswap/libraries\";\n\nimport erc20Abi from \"erc-20-abi\";\nimport { BigNumber, ethers, EventFilter, Event, providers } from \"ethers\";\nimport { hexZeroPad, id } from \"ethers/lib/utils\";\n\ninterface SubscribeParams {\n  activeTokenAddresses: string[];\n  walletAddress: string;\n  spenderAddress: string;\n  provider: ethers.providers.Web3Provider;\n  onBalanceChange: (\n    tokenAddress: string,\n    amount: BigNumber,\n    direction: \"in\" | \"out\"\n  ) => void;\n  onApproval: (\n    tokenAddress: string,\n    spenderAddress: string,\n    amount: BigNumber\n  ) => void;\n}\n\ninterface WalletParams {\n  chainId: number;\n  provider: ethers.providers.Web3Provider;\n  walletAddress: string;\n  tokenAddresses: string[];\n}\n\nconst balancesInterface = new ethers.utils.Interface(\n  JSON.stringify(BalanceChecker.abi)\n);\n\nconst erc20Interface = new ethers.utils.Interface(erc20Abi);\n\nconst getContract = (\n  chainId: keyof typeof balancesDeploys,\n  provider: ethers.providers.Web3Provider\n) => {\n  return new ethers.Contract(\n    balancesDeploys[chainId],\n    balancesInterface,\n    provider as providers.Provider\n  );\n};\n\n/**\n * Fetches balances or allowances for a wallet using the airswap utility\n * contract `BalanceChecker.sol`. Balances are returned in base units.\n */\nconst fetchBalancesOrAllowances: (\n  method: \"walletBalances\" | \"walletAllowances\",\n  spenderAddressType: \"Wrapper\" | \"Light\" | \"None\",\n  params: WalletParams\n) => Promise<string[]> = async (\n  method,\n  spenderAddressType,\n  { chainId, provider, tokenAddresses, walletAddress }\n) => {\n  const contract = getContract(chainId, provider);\n  const args =\n    method === \"walletBalances\"\n      ? [walletAddress, tokenAddresses]\n      : spenderAddressType === \"Light\"\n      ? // sender, spender, tokens.\n        [walletAddress, Light.getAddress(chainId), tokenAddresses]\n      : [walletAddress, Wrapper.getAddress(chainId), tokenAddresses];\n  const amounts: BigNumber[] = await contract[method].apply(null, args);\n  return amounts.map((amount) => amount.toString());\n};\n\nconst fetchBalances = fetchBalancesOrAllowances.bind(\n  null,\n  \"walletBalances\",\n  \"None\"\n);\nconst fetchAllowancesLight = fetchBalancesOrAllowances.bind(\n  null,\n  \"walletAllowances\",\n  \"Light\"\n);\nconst fetchAllowancesWrapper = fetchBalancesOrAllowances.bind(\n  null,\n  \"walletAllowances\",\n  \"Wrapper\"\n);\n\n// event Transfer(address indexed _from, address indexed _to, uint256 _value)\n// event Approval(address indexed _owner, address indexed _spender, uint256 _value)\nlet subscribeToTransfersAndApprovals: (params: SubscribeParams) => () => void;\nsubscribeToTransfersAndApprovals = ({\n  activeTokenAddresses,\n  walletAddress,\n  provider,\n  onBalanceChange,\n  spenderAddress,\n  onApproval,\n}) => {\n  // event Transfer(address indexed _from, address indexed _to, uint256 _value)\n  const filters: {\n    in: EventFilter;\n    out: EventFilter;\n  } = {\n    // Tokens being transferred out of our account or approved by our account\n    out: {\n      topics: [\n        [\n          id(\"Transfer(address,address,uint256)\"),\n          id(\"Approval(address,address,uint256)\"),\n        ], // event name\n        hexZeroPad(walletAddress, 32), // from\n      ],\n    },\n\n    // Tokens being transferred in to our account\n    in: {\n      topics: [\n        id(\"Transfer(address,address,uint256)\"), // event name\n        [],\n        hexZeroPad(walletAddress, 32), // to\n      ],\n    },\n  };\n\n  const tearDowns: (() => void)[] = [];\n\n  Object.keys(filters).forEach((direction) => {\n    // in or out?\n    const typedDirection = direction as keyof typeof filters;\n    const filter = filters[typedDirection];\n\n    function listener(event: Event) {\n      const { address } = event;\n      const lowerCasedTokenAddress = address.toLowerCase();\n\n      // Ignore transactions for non-active tokens.\n      if (!activeTokenAddresses.includes(lowerCasedTokenAddress)) return;\n\n      const parsedEvent = erc20Interface.parseLog(event);\n      const isApproval = parsedEvent.name === \"Approval\";\n\n      // Ignore approvals for other spenders.\n      const approvalAddress = parsedEvent.args[1].toLowerCase();\n      const wrapperAddress = Wrapper.getAddress().toLowerCase();\n      if (\n        isApproval &&\n        approvalAddress !== spenderAddress.toLowerCase() &&\n        approvalAddress !== wrapperAddress\n      )\n        return;\n\n      const amount: BigNumber = parsedEvent.args[2];\n      isApproval\n        ? onApproval(lowerCasedTokenAddress, approvalAddress, amount)\n        : onBalanceChange(lowerCasedTokenAddress, amount, typedDirection);\n    }\n    provider.on(filter, listener);\n    tearDowns.push(provider.off.bind(provider, filter, listener));\n  });\n\n  return () => {\n    tearDowns.forEach((fn) => fn());\n  };\n};\n\nexport {\n  fetchBalances,\n  fetchAllowancesLight,\n  fetchAllowancesWrapper,\n  subscribeToTransfersAndApprovals,\n};\n","import { Pricing } from \"@airswap/types\";\nimport { createSlice, PayloadAction, createSelector } from \"@reduxjs/toolkit\";\n\nimport BigNumber from \"bignumber.js\";\n\nimport { RootState } from \"../../app/store\";\nimport {\n  clearTradeTerms,\n  selectTradeTerms,\n} from \"../tradeTerms/tradeTermsSlice\";\nimport { calculateQuoteAmount } from \"./pricingApi\";\n\nexport interface PricingState {\n  [locator: string]: Pricing[];\n}\n\ntype Pair = {\n  baseToken: string;\n  quoteToken: string;\n};\n\n// Initially empty\nconst initialState: PricingState = {};\n\nexport const pricingSlice = createSlice({\n  name: \"pricing\",\n  initialState,\n  reducers: {\n    updatePricing: (\n      state,\n      action: PayloadAction<{ locator: string; pricing: Pricing }>\n    ) => {\n      const { locator, pricing } = action.payload;\n      if (!state[locator]) {\n        state[locator] = [pricing];\n      } else {\n        const existingIndex = state[locator].findIndex(\n          (existingPricing) =>\n            existingPricing.baseToken === pricing.baseToken &&\n            existingPricing.quoteToken === pricing.quoteToken\n        );\n        if (existingIndex !== -1) {\n          state[locator][existingIndex] = pricing;\n        } else {\n          state[locator].push(pricing);\n        }\n      }\n    },\n    clearPricing: (\n      state,\n      action: PayloadAction<{ locator: string; pair: Pair }>\n    ) => {\n      const { locator, pair } = action.payload;\n      if (!state[locator]) return;\n      const i = state[locator].findIndex(\n        (existingPricing) =>\n          existingPricing.baseToken === pair.baseToken &&\n          existingPricing.quoteToken === pair.quoteToken\n      );\n      if (i === -1) return;\n      state[locator].splice(i, 1);\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(clearTradeTerms, () => initialState);\n  },\n});\n\nexport const { updatePricing, clearPricing } = pricingSlice.actions;\n\nconst selectPricing = (state: RootState) => state.pricing;\n\nexport const selectBestPricing = createSelector(\n  selectTradeTerms,\n  selectPricing,\n  (terms, pricing) => {\n    let bestQuoteAmount = new BigNumber(0);\n    let bestPricing: {\n      locator: string;\n      quoteAmount: string;\n    } | null = null;\n\n    const { quoteToken, baseToken, baseAmount: baseTokenAmount, side } = terms;\n\n    Object.keys(pricing).forEach((locator) => {\n      const locatorPricing = pricing[locator];\n      const relevantIndex = locatorPricing.findIndex(\n        (p) =>\n          p.quoteToken === quoteToken.address &&\n          p.baseToken === baseToken.address\n      );\n\n      if (relevantIndex === -1) return;\n      const relevantPricing: Pricing = locatorPricing[relevantIndex];\n\n      const quoteAmount = new BigNumber(\n        calculateQuoteAmount({\n          baseAmount: baseTokenAmount,\n          pricing: relevantPricing,\n          signerFee: \"7\",\n          side,\n        })\n      );\n\n      if (\n        (side === \"sell\" && quoteAmount.gt(bestQuoteAmount)) ||\n        (side === \"buy\" && quoteAmount.lt(bestQuoteAmount))\n      ) {\n        bestQuoteAmount = quoteAmount;\n        bestPricing = {\n          locator,\n          quoteAmount: quoteAmount.toString(),\n        };\n      }\n    });\n\n    return bestPricing;\n  }\n);\n\nexport default pricingSlice.reducer;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nimport {\n  SubmittedTransaction,\n  SubmittedApproval,\n  ProtocolType,\n} from \"./transactionsSlice\";\n\nconst submitTransaction = createAction<\n  SubmittedTransaction | SubmittedApproval\n>(\"transaction/submitTransaction\");\n\nconst declineTransaction = createAction<{\n  hash: string;\n  reason: string;\n}>(\"transactions/declineTransaction\");\n\nconst mineTransaction = createAction<{\n  protocol?: ProtocolType;\n  signerWallet?: string;\n  hash?: string;\n  nonce?: string;\n}>(\"transaction/mineTransaction\");\n\nconst revertTransaction = createAction<{\n  hash: string;\n  reason: string;\n}>(\"transactions/revertTransaction\");\n\nexport {\n  submitTransaction,\n  declineTransaction,\n  mineTransaction,\n  revertTransaction,\n};\n","import { createContext, FC, useCallback, useMemo } from \"react\";\n\nimport { Server } from \"@airswap/libraries\";\n// TODO: type defs for this.\n// @ts-ignore\nimport lightDeploys from \"@airswap/light/deploys.js\";\nimport { LightOrder, Pricing } from \"@airswap/types\";\nimport { createLightOrder, createLightSignature } from \"@airswap/utils\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport BigNumber from \"bignumber.js\";\n\nimport { useAppDispatch } from \"../../app/hooks\";\nimport { LAST_LOOK_ORDER_EXPIRY_SEC } from \"../../constants/configParams\";\nimport { updatePricing } from \"../../features/pricing/pricingSlice\";\nimport { TradeTerms } from \"../../features/tradeTerms/tradeTermsSlice\";\nimport { submitTransaction } from \"../../features/transactions/transactionActions\";\nimport { SubmittedOrder } from \"../../features/transactions/transactionsSlice\";\n\ntype Pair = {\n  baseToken: string;\n  quoteToken: string;\n};\n\nexport const LastLookContext = createContext<{\n  subscribeAllServers: (servers: Server[], pair: Pair) => Promise<Pricing>[];\n  unsubscribeAllServers: () => void;\n  sendOrderForConsideration: (params: {\n    locator: string;\n    order: LightOrder;\n  }) => Promise<boolean>;\n  getSignedOrder: (params: {\n    locator: string;\n    terms: TradeTerms;\n  }) => Promise<{ order: LightOrder; senderWallet: string }>;\n}>({\n  subscribeAllServers(servers: Server[], pair: Pair): Promise<Pricing | any>[] {\n    return [];\n  },\n  unsubscribeAllServers: () => {},\n  sendOrderForConsideration: async () => {\n    return false;\n  },\n  getSignedOrder: async (params: {\n    locator: string;\n    terms: TradeTerms;\n  }): Promise<LightOrder | any> => {\n    return {};\n  },\n});\n\nconst connectedServers: Record<string, Server> = {};\nconst LastLookProvider: FC = ({ children }) => {\n  const { account, library, chainId } = useWeb3React();\n\n  const dispatch = useAppDispatch();\n\n  const subscribeAllServers = useCallback(\n    (servers: Server[], pair: Pair) => {\n      return servers.map(async (s) => {\n        return new Promise<Pricing>(async (resolve) => {\n          let server = s;\n          if (connectedServers[s.locator]) server = connectedServers[s.locator];\n          connectedServers[server.locator] = server;\n\n          const handlePricing = (pricing: Pricing[]) => {\n            const pairPricing = pricing.find(\n              (p) =>\n                p &&\n                p.baseToken === pair.baseToken &&\n                p.quoteToken === pair.quoteToken\n            );\n            if (pairPricing) {\n              resolve(pairPricing);\n              dispatch(\n                updatePricing({\n                  locator: server.locator,\n                  pricing: pairPricing,\n                })\n              );\n            } else {\n              console.warn(\n                `Didn't receive pricing for pair in update from ${server.locator}`\n              );\n            }\n          };\n\n          server.on(\"pricing\", handlePricing.bind(null));\n          server.on(\"error\", (e) => {\n            console.error(\n              `RPC WebSocket error: [${server.locator}]: ${e.code} - ${e.message}`,\n              e\n            );\n          });\n          const pricing = await server.subscribe([pair]);\n          handlePricing(pricing);\n        });\n      });\n    },\n    [dispatch]\n  );\n\n  const unsubscribeAllServers = useCallback(() => {\n    Object.keys(connectedServers).forEach((locator) => {\n      const server = connectedServers[locator];\n      server.removeAllListeners();\n      server.disconnect();\n      delete connectedServers[locator];\n    });\n  }, []);\n\n  const getSignedOrder = useCallback(\n    async (params: {\n      locator: string;\n      terms: TradeTerms;\n    }): Promise<{ order: LightOrder; senderWallet: string }> => {\n      const { locator, terms } = params;\n      const server = connectedServers[locator];\n\n      const isSell = terms.side === \"sell\";\n\n      if (terms.quoteAmount === null)\n        throw new Error(\"No quote amount specified\");\n      const baseAmountAtomic = new BigNumber(terms.baseAmount)\n        .multipliedBy(10 ** terms.baseToken.decimals)\n        .integerValue(BigNumber.ROUND_CEIL)\n        .toString();\n      const quoteAmountAtomic = new BigNumber(terms.quoteAmount!)\n        .multipliedBy(10 ** terms.quoteToken.decimals)\n        .integerValue(BigNumber.ROUND_FLOOR)\n        .toString();\n\n      const unsignedOrder = createLightOrder({\n        expiry: Math.floor(Date.now() / 1000 + LAST_LOOK_ORDER_EXPIRY_SEC),\n        nonce: Date.now().toString(),\n        senderWallet: server.getSenderWallet(),\n        signerWallet: account,\n        signerToken: terms.baseToken.address,\n        senderToken: terms.quoteToken.address,\n        signerFee: \"7\",\n        signerAmount: isSell ? baseAmountAtomic : quoteAmountAtomic,\n        senderAmount: !isSell ? baseAmountAtomic : quoteAmountAtomic,\n      });\n      const signature = await createLightSignature(\n        unsignedOrder,\n        library.getSigner(),\n        lightDeploys[chainId],\n        chainId!\n      );\n\n      const order: LightOrder = {\n        expiry: unsignedOrder.expiry,\n        nonce: unsignedOrder.nonce,\n        senderToken: unsignedOrder.senderToken,\n        senderAmount: unsignedOrder.senderAmount,\n        signerWallet: unsignedOrder.signerWallet,\n        signerToken: unsignedOrder.signerToken,\n        signerAmount: unsignedOrder.signerAmount,\n        ...signature,\n      };\n\n      const transaction: SubmittedOrder = {\n        type: \"Order\",\n        order: order,\n        nonce: order.nonce,\n        status: \"processing\",\n        protocol: \"last-look\",\n        expiry: unsignedOrder.expiry,\n        timestamp: Date.now(),\n      };\n      dispatch(submitTransaction(transaction));\n\n      return {\n        order,\n        senderWallet: unsignedOrder.senderWallet,\n      };\n    },\n    [account, chainId, dispatch, library]\n  );\n\n  const sendOrderForConsideration = useCallback(\n    async (params: { locator: string; order: LightOrder }) => {\n      const { locator, order } = params;\n      const server = connectedServers[locator];\n      try {\n        return server.consider(order);\n      } catch (e) {\n        console.error(\"Server unable to consider order: \", e);\n        throw e;\n      }\n    },\n    []\n  );\n\n  const value = useMemo(\n    () => ({\n      subscribeAllServers,\n      unsubscribeAllServers,\n      sendOrderForConsideration,\n      getSignedOrder,\n    }),\n    [\n      getSignedOrder,\n      subscribeAllServers,\n      unsubscribeAllServers,\n      sendOrderForConsideration,\n    ]\n  );\n\n  return (\n    <LastLookContext.Provider value={value}>\n      {children}\n    </LastLookContext.Provider>\n  );\n};\n\nexport default LastLookProvider;\n","/**\n * Time in milliseconds before a quote expires that new quotes will be fetched.\n * This time should be sufficient for a user to take an order and have a\n * reasonable expectation that it will be mined within this buffer time.\n */\nexport const RFQ_EXPIRY_BUFFER_MS = 60 * 1000;\n\n/**\n * Time in seconds of last look order expiry duration\n */\nexport const LAST_LOOK_ORDER_EXPIRY_SEC = 2 * 60;\n\n/**\n * Time to wait for quotes before presenting \"no peers\" message.\n */\nexport const RECEIVE_QUOTE_TIMEOUT_MS = 5 * 1000;\n\n/**\n * Time to wait between receiving the first quote from a maker\n * to let other quotes come in from other makers before displaying\n * a price.\n */\nexport const ADDITIONAL_QUOTE_BUFFER = 2 * 60 * 1000;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { RootState } from \"../../app/store\";\n\nexport interface WalletState {\n  connected: boolean;\n  address: string | null;\n  chainId: number | null;\n  providerName: string | null;\n}\n\nconst initialState: WalletState = {\n  connected: false,\n  address: null,\n  chainId: null,\n  providerName: null,\n};\n\nconst walletSlice = createSlice({\n  name: \"wallet\",\n  initialState,\n  reducers: {\n    setWalletConnected: (\n      state,\n      action: PayloadAction<{ address: string; chainId: number }>\n    ) => {\n      state.connected = true;\n      state.address = action.payload.address;\n      state.chainId = action.payload.chainId;\n    },\n    setWalletDisconnected: () => initialState,\n    setActiveProvider: (state, action: PayloadAction<string>) => {\n      state.providerName = action.payload;\n    },\n  },\n});\n\nexport const selectWallet = (state: RootState) => state.wallet;\n\nexport const {\n  setWalletConnected,\n  setWalletDisconnected,\n  setActiveProvider,\n} = walletSlice.actions;\n\nexport default walletSlice.reducer;\n","import {\n  AsyncThunk,\n  combineReducers,\n  createAction,\n  createAsyncThunk,\n  createSlice,\n  PayloadAction,\n} from \"@reduxjs/toolkit\";\n\nimport { BigNumber, ethers } from \"ethers\";\n\nimport { AppDispatch, RootState } from \"../../app/store\";\nimport { setWalletConnected } from \"../wallet/walletSlice\";\nimport {\n  fetchAllowancesLight,\n  fetchAllowancesWrapper,\n  fetchBalances,\n} from \"./balancesApi\";\n\nexport interface BalancesState {\n  status: \"idle\" | \"fetching\" | \"failed\";\n  /** Timestamp of last successful fetch */\n  lastFetch: number | null;\n  /** An array of token addresses currently being fetched. If there are two\n   * fetches in flight, this array will contain the list of addresses in the\n   * largest request.\n   */\n  inFlightFetchTokens: string[] | null; // used to prevent duplicate fetches\n  /** Token balances */\n  values: {\n    [tokenAddress: string]: string | null; // null while fetching\n  };\n}\n\n// Initially empty.\nexport const initialState: BalancesState = {\n  status: \"idle\",\n  lastFetch: null,\n  inFlightFetchTokens: null,\n  values: {},\n};\n\nconst getSetInFlightRequestTokensAction = (\n  type: \"balances\" | \"allowances.light\" | \"allowances.wrapper\"\n) => {\n  return createAction<string[]>(`${type}/setInFlightRequestTokens`);\n};\n\nconst getThunk: (\n  type: \"balances\" | \"allowances.light\" | \"allowances.wrapper\"\n) => AsyncThunk<\n  { address: string; amount: string }[],\n  {\n    provider: ethers.providers.Web3Provider;\n  },\n  {}\n> = (type: \"balances\" | \"allowances.light\" | \"allowances.wrapper\") => {\n  const methods = {\n    balances: fetchBalances,\n    \"allowances.light\": fetchAllowancesLight,\n    \"allowances.wrapper\": fetchAllowancesWrapper,\n  };\n  return createAsyncThunk<\n    { address: string; amount: string }[],\n    {\n      provider: ethers.providers.Web3Provider;\n    },\n    {\n      // Optional fields for defining thunkApi field types\n      dispatch: AppDispatch;\n      state: RootState;\n    }\n  >(\n    `${type}/requestForActiveTokens`,\n    async (params, { getState, dispatch }) => {\n      try {\n        const state = getState();\n        const activeTokensAddresses = [\n          ...state.metadata.tokens.active,\n          \"0x0000000000000000000000000000000000000000\",\n        ];\n        const { chainId, address } = state.wallet;\n        dispatch(\n          getSetInFlightRequestTokensAction(type)(activeTokensAddresses)\n        );\n        const amounts = await methods[type]({\n          ...params,\n          chainId: chainId!,\n          walletAddress: address!,\n          tokenAddresses: activeTokensAddresses,\n        });\n        return activeTokensAddresses.map((address, i) => ({\n          address,\n          amount: amounts[i],\n        }));\n      } catch (e: any) {\n        console.error(`Error fetching ${type}: ` + e.message);\n        // TODO: error handling\n        return [];\n      }\n    },\n    {\n      // Logic to prevent fetching again if we're already fetching the same or more tokens.\n      condition: (params, { getState }) => {\n        const pathParts = type.split(\".\");\n        const sliceState =\n          pathParts.length > 1\n            ? // @ts-ignore\n              getState()[pathParts[0]][pathParts[1]]\n            : // @ts-ignore\n              getState()[type];\n        // If we're not fetching, definitely continue\n        if (sliceState.status !== \"fetching\") return true;\n        if (sliceState.inFlightFetchTokens) {\n          const tokensToFetch = getState().metadata.tokens.active;\n          // only fetch if new list is larger.\n          return tokensToFetch.length > sliceState.inFlightFetchTokens.length;\n        }\n      },\n    }\n  );\n};\n\nconst getSlice = (\n  type: \"balances\" | \"allowances.light\" | \"allowances.wrapper\",\n  asyncThunk: ReturnType<typeof getThunk>\n) => {\n  return createSlice({\n    name: type,\n    initialState,\n    reducers: {\n      incrementBy: (\n        state,\n        action: PayloadAction<{ tokenAddress: string; amount: string }>\n      ) => {\n        const currentAmount = BigNumber.from(\n          state.values[action.payload.tokenAddress.toLowerCase()] || 0\n        );\n        state.values[\n          action.payload.tokenAddress.toLowerCase()\n        ] = currentAmount.add(action.payload.amount).toString();\n      },\n      decrementBy: (\n        state,\n        action: PayloadAction<{ tokenAddress: string; amount: string }>\n      ) => {\n        const currentAmount = BigNumber.from(\n          state.values[action.payload.tokenAddress.toLowerCase()] || 0\n        );\n        let newAmount = currentAmount.sub(action.payload.amount);\n        if (newAmount.lt(\"0\")) newAmount = BigNumber.from(\"0\");\n        state.values[\n          action.payload.tokenAddress.toLowerCase()\n        ] = newAmount.toString();\n      },\n      set: (\n        state,\n        action: PayloadAction<{ tokenAddress: string; amount: string }>\n      ) => {\n        state.values[action.payload.tokenAddress.toLowerCase()] =\n          action.payload.amount;\n      },\n    },\n    extraReducers: (builder) => {\n      builder\n        // Reset to initial state if a new account is connected.\n        .addCase(setWalletConnected, () => initialState)\n\n        // Handle requesting balances\n        .addCase(asyncThunk.pending, (state) => {\n          state.status = \"fetching\";\n        })\n        .addCase(getSetInFlightRequestTokensAction(type), (state, action) => {\n          state.inFlightFetchTokens = action.payload;\n        })\n        .addCase(asyncThunk.fulfilled, (state, action) => {\n          state.lastFetch = Date.now();\n          const tokenBalances = action.payload;\n\n          tokenBalances?.forEach(({ address, amount }) => {\n            state.values[address] = amount;\n          });\n\n          // Only clear fetching status if this request contained the largest\n          // list of tokens (which will be stored in inFlightFetchTokens)\n          if (\n            state.inFlightFetchTokens &&\n            tokenBalances.every(\n              (result, i) => state.inFlightFetchTokens![i] === result.address\n            )\n          ) {\n            state.inFlightFetchTokens = null;\n            state.status = \"idle\";\n          }\n        })\n        .addCase(asyncThunk.rejected, (state, action) => {\n          state.status = \"failed\";\n        });\n    },\n  });\n};\n\nexport const selectBalances = (state: RootState) => state.balances;\nexport const selectAllowances = (state: RootState) => state.allowances;\nexport const selectAllowancesLight = (state: RootState) =>\n  state.allowances.light;\nexport const selectAllowancesWrapper = (state: RootState) =>\n  state.allowances.wrapper;\n\nexport const requestActiveTokenBalances = getThunk(\"balances\");\nexport const requestActiveTokenAllowancesLight = getThunk(\"allowances.light\");\nexport const requestActiveTokenAllowancesWrapper = getThunk(\n  \"allowances.wrapper\"\n);\n\nexport const balancesSlice = getSlice(\"balances\", requestActiveTokenBalances);\nexport const allowancesLightSlice = getSlice(\n  \"allowances.light\",\n  requestActiveTokenAllowancesLight\n);\nexport const allowancesWrapperSlice = getSlice(\n  \"allowances.wrapper\",\n  requestActiveTokenAllowancesWrapper\n);\n\nexport const {\n  incrementBy: incrementBalanceBy,\n  decrementBy: decrementBalanceBy,\n  set: setBalance,\n} = balancesSlice.actions;\nexport const {\n  incrementBy: incrementAllowanceLightBy,\n  decrementBy: decreementAllowanceLightBy,\n  set: setAllowanceLight,\n} = allowancesLightSlice.actions;\nexport const {\n  incrementBy: incrementAllowanceWrapperBy,\n  decrementBy: decreementAllowanceWrapperBy,\n  set: setAllowanceWrapper,\n} = allowancesWrapperSlice.actions;\n\nexport const balancesActions = balancesSlice.actions;\nexport const allowancesLightActions = allowancesLightSlice.actions;\nexport const allowancesWrapperActions = allowancesWrapperSlice.actions;\n\nexport const balancesReducer = balancesSlice.reducer;\nexport const allowancesLightReducer = allowancesLightSlice.reducer;\nexport const allowancesWrapperReducer = allowancesWrapperSlice.reducer;\nexport const allowancesReducer = combineReducers({\n  light: allowancesLightReducer,\n  wrapper: allowancesWrapperReducer,\n});\n","import { fetchTokens, scrapeToken } from \"@airswap/metadata\";\nimport { TokenInfo } from \"@airswap/types\";\n\nimport { providers } from \"ethers\";\nimport uniqBy from \"lodash.uniqby\";\n\nconst tokensCache: {\n  [chainId: number]: TokenInfo[];\n} = {};\n\nexport const getActiveTokensLocalStorageKey: (\n  account: string,\n  chainId: number\n) => string = (account, chainId) =>\n  `airswap/activeTokens/${account}/${chainId}`;\n\nexport const getCachedMetadataLocalStorageKey = (chainId: number): string =>\n  `airswap/metadataCache/${chainId}`;\n\nexport const getAllTokens = async (chainId: number) => {\n  let tokens;\n  if (!tokensCache[chainId]) {\n    tokensCache[chainId] = (await fetchTokens(chainId)).tokens;\n    //TODO: handle failure here, need to decide what to do with errors\n  }\n  tokens = tokensCache[chainId];\n  return tokens;\n};\n\nexport const getUnknownTokens = async (\n  chainId: number,\n  supportedTokenAddresses: string[],\n  allTokens: TokenInfo[],\n  provider: providers.Provider\n): Promise<TokenInfo[]> => {\n  const storageKey = getCachedMetadataLocalStorageKey(chainId);\n  // Get a list of all token addresses from token lists\n  const uniqueTokenListAddresses = uniqBy(allTokens, (t) => t.address).map(\n    (t) => t.address\n  );\n\n  // Get any tokens we've previously manually looked up from cache\n  let localStorageTokens: TokenInfo[] = [];\n  const localStorageData = localStorage.getItem(storageKey);\n  if (localStorageData) {\n    try {\n      localStorageTokens = (JSON.parse(localStorageData) as TokenInfo[]).filter(\n        // This filter ensures we don't continue to store tokens that become\n        // unsupported or contained in token lists.\n        (t) =>\n          !uniqueTokenListAddresses.includes(t.address) &&\n          supportedTokenAddresses.includes(t.address)\n      );\n    } catch (e) {\n      localStorage.removeItem(storageKey);\n    }\n  }\n\n  const localStorageTokenAddresses = localStorageTokens.map((t) => t.address);\n  const knownTokens = uniqueTokenListAddresses.concat(\n    localStorageTokenAddresses\n  );\n\n  // Determine tokens we still don't know about.\n  const unknownTokens = supportedTokenAddresses.filter(\n    (supportedTokenAddr) => !knownTokens.includes(supportedTokenAddr)\n  );\n\n  let scrapedTokens: TokenInfo[] = [];\n  if (unknownTokens.length) {\n    // @ts-ignore provider type mismatch w/ metadata repo\n    const scrapePromises = unknownTokens.map((t) => scrapeToken(t, provider));\n    const results = await Promise.allSettled(scrapePromises);\n    scrapedTokens = results\n      .filter((r) => r.status === \"fulfilled\")\n      .map((r) => {\n        const tokenInfo = (r as PromiseFulfilledResult<TokenInfo>).value;\n        return {\n          ...tokenInfo,\n          address: tokenInfo.address.toLowerCase(),\n        };\n      });\n  }\n\n  localStorageTokens = localStorageTokens.concat(scrapedTokens);\n  localStorage.setItem(storageKey, JSON.stringify(localStorageTokens));\n\n  return localStorageTokens;\n};\n\nexport const getActiveTokensFromLocalStorage = (\n  account: string,\n  chainId: number\n) => {\n  const savedTokens = (\n    localStorage.getItem(getActiveTokensLocalStorageKey(account, chainId)) || \"\"\n  )\n    .split(\",\")\n    .filter((address) => address.length);\n  return (savedTokens.length && savedTokens) || [];\n};\n\nexport const getSavedActiveTokensInfo = async (\n  account: string,\n  chainId: number\n) => {\n  const tokens = await getAllTokens(chainId);\n  const activeTokens = getActiveTokensFromLocalStorage(account, chainId);\n  const matchingTokens = tokens.filter((tokenInfo) =>\n    activeTokens.includes(tokenInfo.address)\n  );\n  return uniqBy(matchingTokens, (token) => token.address);\n};\n\nexport const getTransactionsLocalStorageKey: (\n  walletAddress: string,\n  chainId: number\n) => string = (walletAddress, chainId) =>\n  `airswap/transactions/${walletAddress}/${chainId}`;\n","import * as RegistryContract from \"@airswap/registry/build/contracts/Registry.sol/Registry.json\";\nimport registryDeploys from \"@airswap/registry/deploys.js\";\n\nimport { providers, utils, Contract, Event } from \"ethers\";\n\nconst RegistryInterface = new utils.Interface(\n  JSON.stringify(RegistryContract.abi)\n);\n\nasync function getStakerTokens(chainId: number, provider: providers.Provider) {\n  const registryContract = new Contract(\n    registryDeploys[chainId],\n    RegistryInterface,\n    provider\n  );\n\n  const addTokensEventFilter = registryContract.filters.AddTokens();\n  const removeTokensEventFilter = registryContract.filters.RemoveTokens();\n\n  // Fetch all AddTokens and RemoveTokens events from the registry\n  const [addEvents, removeEvents] = await Promise.all([\n    registryContract.queryFilter(addTokensEventFilter),\n    registryContract.queryFilter(removeTokensEventFilter),\n  ]);\n\n  // Order matters here, so order AddTokens and RemoveTokens chronologically\n  const sortedEvents: Event[] = [...addEvents, ...removeEvents]\n    .filter((log) => !log.removed)\n    .sort((a, b) => {\n      // Sort by oldest first. If they're not in the same block, sort based\n      // on blocknumber\n      if (a.blockNumber !== b.blockNumber) return a.blockNumber - b.blockNumber;\n      // if in the same block, sort by the index of the log in the block\n      return a.logIndex - b.logIndex;\n    });\n\n  // Hold a list of tokens for each staker.\n  const stakerTokens: Record<string, string[]> = {};\n\n  sortedEvents.forEach((log) => {\n    if (!log.args) return;\n    // @ts-ignore (args are not typed)\n    const [staker, tokens] = log.args as [string, string[]];\n    const lowerCasedTokens = tokens.map((t) => t.toLowerCase());\n    if (log.event === \"AddTokens\") {\n      // Adding tokens\n      stakerTokens[staker] = (stakerTokens[staker] || []).concat(\n        lowerCasedTokens\n      );\n    } else {\n      // Removing tokens\n      stakerTokens[staker] = (stakerTokens[staker] || []).filter(\n        (token) => !lowerCasedTokens.includes(token)\n      );\n    }\n  });\n\n  return stakerTokens;\n}\n\nexport { getStakerTokens };\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { providers } from \"ethers\";\nimport uniqBy from \"lodash.uniqby\";\n\nimport { AppDispatch, RootState } from \"../../app/store\";\nimport { getActiveTokensFromLocalStorage } from \"../metadata/metadataApi\";\nimport {\n  setWalletConnected,\n  setWalletDisconnected,\n} from \"../wallet/walletSlice\";\nimport { getStakerTokens } from \"./registryApi\";\n\nexport interface RegistryState {\n  stakerTokens: Record<string, string[]>;\n  allSupportedTokens: string[];\n  status: \"idle\" | \"fetching\" | \"failed\";\n}\n\nconst initialState: RegistryState = {\n  stakerTokens: {},\n  allSupportedTokens: [],\n  status: \"idle\",\n};\n\nexport const fetchSupportedTokens = createAsyncThunk<\n  {\n    allSupportedTokens: string[];\n    stakerTokens: Record<string, string[]>;\n    activeTokens: string[];\n  },\n  {\n    provider: providers.Provider;\n  },\n  {\n    // Optional fields for defining thunkApi field types\n    dispatch: AppDispatch;\n    state: RootState;\n  }\n>(\"registry/fetchSupportedTokens\", async ({ provider }, { getState }) => {\n  const { wallet } = getState();\n  const stakerTokens = await getStakerTokens(wallet.chainId!, provider);\n  // Combine token lists from all makers and flatten them.\n  const allSupportedTokens = uniqBy(\n    Object.values(stakerTokens).flat(),\n    (i) => i\n  );\n  const activeTokensLocalStorage = getActiveTokensFromLocalStorage(\n    wallet.address!,\n    wallet.chainId!\n  );\n  const activeTokens =\n    (activeTokensLocalStorage.length && activeTokensLocalStorage) ||\n    allSupportedTokens ||\n    [];\n  return { stakerTokens, allSupportedTokens, activeTokens };\n});\n\nexport const registrySlice = createSlice({\n  name: \"registry\",\n  initialState,\n  reducers: {\n    setStakerTokens: (\n      state,\n      action: PayloadAction<Record<string, string[]>>\n    ) => {\n      state.stakerTokens = { ...action.payload };\n    },\n    setAllSupportedTokens: (state, action: PayloadAction<string[]>) => {\n      state.allSupportedTokens = [...action.payload];\n    },\n    reset: () => {\n      return { ...initialState };\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchSupportedTokens.pending, (state) => {\n        state.status = \"fetching\";\n      })\n      .addCase(fetchSupportedTokens.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.allSupportedTokens = [...action.payload.allSupportedTokens];\n        state.stakerTokens = { ...action.payload.stakerTokens };\n      })\n      .addCase(fetchSupportedTokens.rejected, (state) => {\n        state.status = \"failed\";\n      })\n      // Reset on wallet connect or disconnect\n      .addCase(setWalletConnected, () => initialState)\n      .addCase(setWalletDisconnected, () => initialState);\n  },\n});\n\nexport const {\n  setStakerTokens,\n  setAllSupportedTokens,\n  reset,\n} = registrySlice.actions;\nexport const selectAllSupportedTokens = (state: RootState) =>\n  state.registry.allSupportedTokens;\nexport default registrySlice.reducer;\n","import { fetchTokens } from \"@airswap/metadata\";\nimport { TokenInfo } from \"@airswap/types\";\nimport {\n  createAsyncThunk,\n  createSelector,\n  createSlice,\n  PayloadAction,\n} from \"@reduxjs/toolkit\";\n\nimport { providers } from \"ethers\";\n\nimport { AppDispatch, RootState } from \"../../app/store\";\nimport { fetchSupportedTokens } from \"../registry/registrySlice\";\nimport {\n  setWalletConnected,\n  setWalletDisconnected,\n} from \"../wallet/walletSlice\";\nimport {\n  getActiveTokensFromLocalStorage,\n  getUnknownTokens,\n} from \"./metadataApi\";\n\nexport interface MetadataState {\n  tokens: {\n    all: {\n      [address: string]: TokenInfo;\n    };\n    active: string[];\n  };\n}\n\nconst initialState: MetadataState = {\n  tokens: {\n    all: {},\n    active: [],\n  },\n};\n\nexport const fetchAllTokens = createAsyncThunk<\n  TokenInfo[], // Return type\n  void, // First argument\n  {\n    // thunkApi\n    dispatch: AppDispatch;\n    state: RootState;\n  }\n>(\"metadata/fetchTokens\", async (_, thunkApi) => {\n  const { wallet } = thunkApi.getState();\n  if (!wallet.connected) return [];\n  return (await fetchTokens(wallet.chainId!)).tokens;\n});\n\nexport const fetchUnkownTokens = createAsyncThunk<\n  TokenInfo[], // Return type\n  {\n    // First argument\n    provider: providers.Provider;\n  },\n  {\n    // thunkApi\n    dispatch: AppDispatch;\n    state: RootState;\n  }\n>(\"metadata/fetchUnknownTokens\", async ({ provider }, thunkApi) => {\n  const { registry, metadata, wallet } = thunkApi.getState();\n  if (wallet.chainId === null) return [];\n  return await getUnknownTokens(\n    wallet.chainId,\n    registry.allSupportedTokens,\n    Object.values(metadata.tokens.all),\n    provider\n  );\n});\n\nexport const metadataSlice = createSlice({\n  name: \"metadata\",\n  initialState,\n  reducers: {\n    addActiveToken: (state, action: PayloadAction<string>) => {\n      const lowerCasedToken = action.payload.trim().toLowerCase();\n      if (!state.tokens.active.includes(lowerCasedToken)) {\n        state.tokens.active.push(lowerCasedToken);\n      }\n    },\n    removeActiveToken: (state, action: PayloadAction<string>) => {\n      if (state.tokens.active.includes(action.payload)) {\n        state.tokens.active = state.tokens.active.filter(\n          (tokenAddress) => tokenAddress !== action.payload\n        );\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchAllTokens.pending, (state) => {\n        // TODO: consider whether we need to put a pending state to prevent dupes\n      })\n      .addCase(fetchAllTokens.fulfilled, (state, action) => {\n        const { payload: tokenInfo } = action;\n        state.tokens.all = tokenInfo.reduce(\n          (allTokens: { [address: string]: TokenInfo }, token) => {\n            const { address } = token;\n            if (!allTokens[address]) {\n              allTokens[address] = { ...token };\n            }\n            return allTokens;\n          },\n          {}\n        );\n      })\n      .addCase(fetchAllTokens.rejected, (state) => {\n        // TODO: handle failure?\n        // perhaps rejected state can be for when errors.length === known.length ?\n      })\n      .addCase(fetchSupportedTokens.fulfilled, (state, action) => {\n        if (!state.tokens.active?.length)\n          state.tokens.active = action.payload.activeTokens || [];\n      })\n      .addCase(fetchUnkownTokens.fulfilled, (state, action) => {\n        action.payload.forEach((token) => {\n          state.tokens.all[token.address] = token;\n        });\n      })\n      .addCase(setWalletConnected, (state, action) => {\n        const { chainId, address } = action.payload;\n        state.tokens.active =\n          getActiveTokensFromLocalStorage(address, chainId) || [];\n      })\n      .addCase(setWalletDisconnected, (state) => {\n        state.tokens.active = [];\n      });\n  },\n});\n\nexport const { addActiveToken, removeActiveToken } = metadataSlice.actions;\n\nconst selectActiveTokenAddresses = (state: RootState) =>\n  state.metadata.tokens.active;\nexport const selectAllTokenInfo = (state: RootState) =>\n  Object.values(state.metadata.tokens.all);\nexport const selectActiveTokens = createSelector(\n  [selectActiveTokenAddresses, selectAllTokenInfo],\n  (activeTokenAddresses, allTokenInfo) => {\n    return Object.values(allTokenInfo).filter((tokenInfo) =>\n      activeTokenAddresses.includes(tokenInfo.address)\n    );\n  }\n);\n\nexport default metadataSlice.reducer;\n","import { findTokenByAddress } from \"@airswap/metadata\";\nimport { TokenInfo } from \"@uniswap/token-lists\";\n\nimport nativeETH from \"../constants/nativeETH\";\n\nexport default function findEthOrTokenByAddress(\n  tokenAddress: string,\n  activeTokens: TokenInfo[],\n  chainId: number\n) {\n  return tokenAddress === \"0x0000000000000000000000000000000000000000\"\n    ? nativeETH[chainId!]\n    : findTokenByAddress(tokenAddress, activeTokens);\n}\n","import styled from \"styled-components/macro\";\n\n// Notice we are overriding background-color with !important\n// this is necessary to override built-in styling of toasts\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 2.5rem auto 2.5rem;\n  grid-gap: 1rem;\n  align-items: center;\n  width: 22.5rem;\n  border-radius: 0.5rem;\n  padding: 0.625rem;\n  color: ${(props) => props.theme.colors.white};\n  background: ${(props) => props.theme.colors.darkGrey} !important;\n`;\n\ntype IconContainerProps = {\n  error?: boolean;\n};\n\n// Notice we are overriding background and border-radius with !important\n// this is necessary to override built-in styling of toasts\nexport const IconContainer = styled.div<IconContainerProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 2.5rem;\n  height: 2.5rem;\n  background: ${(props) =>\n    props.error ? \"rgba(255,0,0,0.17)\" : \"rgba(96,255,102,0.1)\"} !important;\n  border-radius: 50% !important;\n  color: white;\n  color: ${(props) => (props.error ? \"#FF0000\" : \"#60FF66\")};\n`;\n\nexport const HiXContainer = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n\nexport const TextContainer = styled.div`\n  display: block;\n`;\n","import { FC } from \"react\";\nimport { HiX } from \"react-icons/hi\";\nimport { MdError } from \"react-icons/md\";\n\nimport { InfoHeading, InfoSubHeading } from \"../Typography/Typography\";\nimport {\n  Container,\n  IconContainer,\n  HiXContainer,\n  TextContainer,\n} from \"./Toast.styles\";\n\nexport type ErrorToastProps = {\n  /**\n   * Function to trigger closing of toast\n   */\n  onClose: () => void;\n  heading: string;\n  cta: string;\n};\n\nconst ErrorToast: FC<ErrorToastProps> = ({ onClose, heading, cta }) => {\n  return (\n    <Container>\n      <IconContainer error={true}>\n        <MdError style={{ width: \"1.25rem\", height: \"1.25rem\" }} />\n      </IconContainer>\n      <TextContainer>\n        <InfoHeading>{heading}</InfoHeading>\n        <InfoSubHeading>{cta}</InfoSubHeading>\n      </TextContainer>\n      <HiXContainer>\n        <HiX\n          style={{\n            width: \"1rem\",\n            height: \"1rem\",\n            cursor: \"pointer\",\n          }}\n          onClick={onClose}\n        />\n      </HiXContainer>\n    </Container>\n  );\n};\n\nexport default ErrorToast;\n","import { useTranslation } from \"react-i18next\";\nimport { HiX } from \"react-icons/hi\";\nimport { MdBeenhere, MdError } from \"react-icons/md\";\n\nimport { TokenInfo } from \"@airswap/types\";\n\nimport { formatUnits } from \"ethers/lib/utils\";\n\nimport {\n  SubmittedLastLookOrder,\n  SubmittedRFQOrder,\n  SubmittedTransaction,\n  TransactionType,\n} from \"../../features/transactions/transactionsSlice\";\nimport { InfoHeading, InfoSubHeading } from \"../Typography/Typography\";\nimport {\n  Container,\n  HiXContainer,\n  IconContainer,\n  TextContainer,\n} from \"./Toast.styles\";\n\nexport type TransactionToastProps = {\n  /**\n   * Function to trigger closing of toast\n   */\n  onClose: () => void;\n  /**\n   * Error affects whether the icon colors show up as blue or red;\n   */\n  error: boolean;\n  /**\n   * The parent object of SubmittedOrder and SubmittedApproval\n   */\n  transaction: SubmittedTransaction;\n  /**\n   * Type of transaction the toast will display;\n   */\n  type: TransactionType;\n  /**\n   * Token Info of sender token\n   */\n  senderToken?: TokenInfo;\n  /**\n   * Token Info of signer token\n   */\n  signerToken?: TokenInfo;\n  /**\n   * Token Info of approval token\n   */\n  approvalToken?: TokenInfo;\n};\n\nconst TransactionToast = ({\n  onClose,\n  error,\n  transaction,\n  type,\n  senderToken,\n  signerToken,\n  approvalToken,\n}: TransactionToastProps) => {\n  const { t } = useTranslation([\"toast\"]);\n\n  return (\n    <Container>\n      <IconContainer error={error}>\n        {error ? (\n          <MdError style={{ width: \"1.25rem\", height: \"1.25rem\" }} />\n        ) : (\n          <MdBeenhere style={{ width: \"1.25rem\", height: \"1.25rem\" }} />\n        )}\n      </IconContainer>\n      <TextContainer>\n        <InfoHeading>\n          {type === \"Order\" || type === \"Deposit\" || type === \"Withdraw\"\n            ? error\n              ? t(\"toast:swapFail\")\n              : t(\"toast:swapComplete\")\n            : error\n            ? t(\"toast:approvalFail\")\n            : t(\"toast:approvalComplete\")}\n        </InfoHeading>\n        <InfoSubHeading>\n          {(() => {\n            if (type === \"Order\" || type === \"Deposit\" || type === \"Withdraw\") {\n              if (transaction && senderToken && signerToken) {\n                const tx =\n                  transaction.protocol === \"last-look\"\n                    ? (transaction as SubmittedLastLookOrder)\n                    : (transaction as SubmittedRFQOrder);\n                let translationKey = \"wallet:transaction\";\n                if (tx.protocol === \"last-look\") {\n                  translationKey = \"wallet:lastLookTransaction\";\n                }\n                // @ts-ignore dynamic translation key\n                return t(translationKey, {\n                  senderAmount: parseFloat(\n                    Number(\n                      formatUnits(tx.order.senderAmount, senderToken.decimals)\n                    ).toFixed(5)\n                  ),\n                  senderToken: senderToken.symbol,\n                  signerAmount: parseFloat(\n                    Number(\n                      formatUnits(tx.order.signerAmount, signerToken.decimals)\n                    ).toFixed(5)\n                  ),\n                  signerToken: signerToken.symbol,\n                });\n              }\n            }\n            return t(\"toast:approve\", { symbol: approvalToken?.symbol });\n          })()}\n        </InfoSubHeading>\n      </TextContainer>\n      <HiXContainer>\n        <HiX\n          style={{\n            width: \"1rem\",\n            height: \"1rem\",\n            cursor: \"pointer\",\n          }}\n          onClick={onClose}\n        />\n      </HiXContainer>\n    </Container>\n  );\n};\n\nexport default TransactionToast;\n","import toast from \"react-hot-toast\";\n\nimport { findTokenByAddress } from \"@airswap/metadata\";\nimport { TokenInfo } from \"@airswap/types\";\n\nimport {\n  SubmittedApproval,\n  SubmittedDepositOrder,\n  SubmittedOrder,\n  SubmittedWithdrawOrder,\n  TransactionType,\n} from \"../../features/transactions/transactionsSlice\";\nimport findEthOrTokenByAddress from \"../../helpers/findEthOrTokenByAddress\";\nimport ErrorToast from \"./ErrorToast\";\nimport TransactionToast from \"./TransactionToast\";\n\nexport const notifyTransaction = (\n  type: TransactionType,\n  transaction:\n    | SubmittedOrder\n    | SubmittedApproval\n    | SubmittedDepositOrder\n    | SubmittedWithdrawOrder,\n  tokens: TokenInfo[],\n  error: boolean,\n  chainId?: number\n) => {\n  let token: TokenInfo;\n  // TODO: make a switch case to render a different toast for each case\n  if (\n    (type === \"Order\" || type === \"Deposit\" || type === \"Withdraw\") &&\n    chainId\n  ) {\n    const tx: SubmittedOrder = transaction as SubmittedOrder;\n    /*  TODO: fix toaster for multiple tabs or apps\n        now that we have a listener, you can have multiple\n        tabs open that receives the same order event. Only one redux\n        store will have the order, and the others won't. That will\n        throw an error here if we don't check for `order` inside `tx`\n     */\n    if (tx?.order) {\n      const senderToken = findEthOrTokenByAddress(\n        tx.order.senderToken,\n        tokens,\n        chainId\n      );\n      const signerToken = findEthOrTokenByAddress(\n        tx.order.signerToken,\n        tokens,\n        chainId\n      );\n      toast(\n        (t) => (\n          <TransactionToast\n            onClose={() => toast.dismiss(t.id)}\n            type={type}\n            transaction={transaction}\n            senderToken={senderToken}\n            signerToken={signerToken}\n            error={error}\n          />\n        ),\n        {\n          duration: 3000,\n        }\n      );\n    }\n  } else {\n    const tx: SubmittedApproval = transaction as SubmittedApproval;\n    token = findTokenByAddress(tx.tokenAddress, tokens);\n    toast(\n      (t) => (\n        <TransactionToast\n          onClose={() => toast.dismiss(t.id)}\n          type={type}\n          transaction={transaction}\n          approvalToken={token}\n          error={error}\n        />\n      ),\n      {\n        duration: 3000,\n      }\n    );\n  }\n};\n\nexport const notifyError = (props: { heading: string; cta: string }) => {\n  toast(\n    (t) => (\n      <ErrorToast\n        onClose={() => toast.dismiss(t.id)}\n        heading={props.heading}\n        cta={props.cta}\n      />\n    ),\n    {\n      duration: 3000,\n    }\n  );\n};\n","import * as WETHContract from \"@airswap/balances/build/contracts/WETH9.json\";\nimport { wethAddresses } from \"@airswap/constants\";\nimport { Light, Server, Wrapper } from \"@airswap/libraries\";\nimport { LightOrder } from \"@airswap/types\";\nimport { toAtomicString } from \"@airswap/utils\";\n\nimport erc20Abi from \"erc-20-abi\";\nimport {\n  BigNumber,\n  constants,\n  Contract,\n  ethers,\n  providers,\n  Transaction,\n  utils,\n} from \"ethers\";\n\nconst REQUEST_ORDER_TIMEOUT_MS = 5000;\n\nconst erc20Interface = new ethers.utils.Interface(erc20Abi);\n\nconst WETHInterface = new utils.Interface(JSON.stringify(WETHContract.abi));\n\nasync function swapLight(\n  chainId: number,\n  provider: ethers.providers.Web3Provider,\n  order: LightOrder\n) {\n  // @ts-ignore TODO: type compatability issue with AirSwap lib\n  return await new Light(chainId, provider).swap(\n    order,\n    // @ts-ignore\n    provider.getSigner()\n  );\n}\n\nasync function swapWrapper(\n  chainId: number,\n  provider: ethers.providers.Web3Provider,\n  order: LightOrder\n) {\n  // @ts-ignore TODO: type compatability issue with AirSwap lib\n  return await new Wrapper(chainId, provider).swap(\n    order,\n    // @ts-ignore\n    provider.getSigner()\n  );\n}\n\nexport async function requestOrders(\n  servers: Server[],\n  quoteToken: string,\n  baseToken: string,\n  baseTokenAmount: string,\n  baseTokenDecimals: number,\n  senderWallet: string\n): Promise<LightOrder[]> {\n  if (!servers.length) {\n    throw new Error(\"no counterparties\");\n  }\n  const rfqOrderPromises = servers.map(async (server) => {\n    const order = await Promise.race([\n      server.getSignerSideOrder(\n        toAtomicString(baseTokenAmount, baseTokenDecimals),\n        quoteToken,\n        baseToken,\n        senderWallet\n      ),\n      // Servers should respond in a timely manner for orders to be considered\n      new Promise((resolve, reject) =>\n        setTimeout(() => {\n          reject(\"ETIMEDOUT\");\n        }, REQUEST_ORDER_TIMEOUT_MS)\n      ),\n    ]);\n    return (order as any) as LightOrder;\n  });\n  const rfqOrders = await Promise.allSettled(rfqOrderPromises);\n  return rfqOrders\n    .filter((result) => result.status === \"fulfilled\")\n    .map((result) => (result as PromiseFulfilledResult<LightOrder>).value)\n    .filter((o) => BigNumber.from(o.signerAmount).gt(\"0\"));\n}\n\nexport async function approveToken(\n  baseToken: string,\n  provider: ethers.providers.Web3Provider,\n  contractType: \"Light\" | \"Wrapper\"\n) {\n  const spender =\n    contractType === \"Light\"\n      ? Light.getAddress(provider.network.chainId)\n      : Wrapper.getAddress(provider.network.chainId);\n  const erc20Contract = new ethers.Contract(\n    baseToken,\n    erc20Interface,\n    // @ts-ignore\n    provider.getSigner()\n  );\n  const approvalTxHash = await erc20Contract.approve(\n    spender,\n    constants.MaxUint256\n  );\n  return (approvalTxHash as any) as Transaction;\n}\n\nexport async function takeOrder(\n  order: LightOrder,\n  provider: ethers.providers.Web3Provider,\n  contractType: \"Light\" | \"Wrapper\"\n) {\n  const tx =\n    contractType === \"Light\"\n      ? await swapLight(provider.network.chainId, provider, order)\n      : await swapWrapper(provider.network.chainId, provider, order);\n\n  return (tx as any) as Transaction;\n}\n\nexport function orderSortingFunction(a: LightOrder, b: LightOrder) {\n  // If tokens transferred are the same\n  if (a.signerAmount === b.signerAmount && a.senderAmount === b.senderAmount) {\n    return parseInt(b.expiry) - parseInt(a.expiry);\n  }\n  if (a.signerAmount === b.signerAmount) {\n    // Likely senderSide\n    // Sort orders by amount of senderToken sent (ascending).\n    const aAmount = BigNumber.from(a.senderAmount);\n    const bAmount = BigNumber.from(b.senderAmount);\n    if (bAmount.lt(aAmount)) return 1;\n    else return -1;\n  } else {\n    // Likely signerSide\n    // Sort orders by amount of signerToken received (descending).\n    const aAmount = BigNumber.from(a.signerAmount);\n    const bAmount = BigNumber.from(b.signerAmount);\n    if (bAmount.gt(aAmount)) return 1;\n    else return -1;\n  }\n}\n\nexport async function depositETH(\n  chainId: number,\n  senderAmount: string,\n  senderTokenDecimals: number,\n  provider: ethers.providers.Web3Provider\n) {\n  const WETHContract = new Contract(\n    wethAddresses[chainId],\n    WETHInterface,\n    provider as providers.Provider\n  );\n  const signer = WETHContract.connect(provider.getSigner() as ethers.Signer);\n  const tx = await signer.deposit({\n    value: toAtomicString(senderAmount, senderTokenDecimals),\n  });\n  return (tx as any) as Transaction;\n}\n\nexport async function withdrawETH(\n  chainId: number,\n  senderAmount: string,\n  senderTokenDecimals: number,\n  provider: ethers.providers.Web3Provider\n) {\n  const WETHContract = new Contract(\n    wethAddresses[chainId],\n    WETHInterface,\n    // @ts-ignore\n    provider\n  );\n  // @ts-ignore\n  const signer = WETHContract.connect(provider.getSigner());\n  const tx = await signer.withdraw(\n    toAtomicString(senderAmount, senderTokenDecimals)\n  );\n  return (tx as any) as Transaction;\n}\n","import { wethAddresses } from \"@airswap/constants\";\nimport { Server } from \"@airswap/libraries\";\nimport { Levels, LightOrder } from \"@airswap/types\";\nimport { toAtomicString } from \"@airswap/utils\";\nimport {\n  createAsyncThunk,\n  createSelector,\n  createSlice,\n  PayloadAction,\n} from \"@reduxjs/toolkit\";\n\nimport BigNumber from \"bignumber.js\";\nimport { Transaction, providers } from \"ethers\";\n\nimport { AppDispatch, RootState } from \"../../app/store\";\nimport { notifyTransaction } from \"../../components/Toasts/ToastController\";\nimport { RFQ_EXPIRY_BUFFER_MS } from \"../../constants/configParams\";\nimport nativeETH from \"../../constants/nativeETH\";\nimport {\n  allowancesLightActions,\n  allowancesWrapperActions,\n} from \"../balances/balancesSlice\";\nimport { selectBestPricing } from \"../pricing/pricingSlice\";\nimport { selectTradeTerms } from \"../tradeTerms/tradeTermsSlice\";\nimport {\n  declineTransaction,\n  mineTransaction,\n  revertTransaction,\n  submitTransaction,\n} from \"../transactions/transactionActions\";\nimport {\n  SubmittedApproval,\n  SubmittedDepositOrder,\n  SubmittedRFQOrder,\n  SubmittedWithdrawOrder,\n} from \"../transactions/transactionsSlice\";\nimport {\n  setWalletConnected,\n  setWalletDisconnected,\n} from \"../wallet/walletSlice\";\nimport {\n  approveToken,\n  depositETH,\n  orderSortingFunction,\n  requestOrders,\n  takeOrder,\n  withdrawETH,\n} from \"./orderApi\";\n\nexport interface OrdersState {\n  orders: LightOrder[];\n  status: \"idle\" | \"requesting\" | \"approving\" | \"taking\" | \"failed\";\n  reRequestTimerId: number | null;\n}\n\nconst initialState: OrdersState = {\n  orders: [],\n  status: \"idle\",\n  reRequestTimerId: null,\n};\n\nconst APPROVE_AMOUNT = \"90071992547409910000000000\";\n\n// replaces WETH to ETH on Wrapper orders\nconst refactorOrder = (order: LightOrder, chainId: number) => {\n  let newOrder = { ...order };\n  if (order.senderToken === wethAddresses[chainId]) {\n    newOrder.senderToken = nativeETH[chainId].address;\n  } else if (order.signerToken === wethAddresses[chainId]) {\n    newOrder.signerToken = nativeETH[chainId].address;\n  }\n  return newOrder;\n};\n\nexport const deposit = createAsyncThunk(\n  \"orders/deposit\",\n  async (\n    params: {\n      chainId: number;\n      senderAmount: string;\n      senderTokenDecimals: number;\n      provider: providers.Web3Provider;\n    },\n    { getState, dispatch }\n  ) => {\n    let tx: Transaction;\n    try {\n      tx = await depositETH(\n        params.chainId,\n        params.senderAmount,\n        params.senderTokenDecimals,\n        params.provider\n      );\n      if (tx.hash) {\n        const senderAmount = toAtomicString(\n          params.senderAmount,\n          params.senderTokenDecimals\n        );\n        // Since this is a Deposit, senderAmount === signerAmount\n        const transaction: SubmittedDepositOrder = {\n          type: \"Deposit\",\n          order: {\n            signerToken: wethAddresses[params.chainId],\n            signerAmount: senderAmount,\n            senderToken: nativeETH[params.chainId].address,\n            senderAmount: senderAmount,\n          },\n          hash: tx.hash,\n          status: \"processing\",\n          timestamp: Date.now(),\n        };\n        dispatch(submitTransaction(transaction));\n        params.provider.once(tx.hash, async () => {\n          const receipt = await params.provider.getTransactionReceipt(tx.hash!);\n          const state: RootState = getState() as RootState;\n          const tokens = Object.values(state.metadata.tokens.all);\n          if (receipt.status === 1) {\n            dispatch(\n              mineTransaction({\n                hash: receipt.transactionHash,\n              })\n            );\n            notifyTransaction(\n              \"Deposit\",\n              transaction,\n              tokens,\n              false,\n              params.chainId\n            );\n          } else {\n            dispatch(\n              revertTransaction({\n                hash: receipt.transactionHash,\n                reason: \"Transaction reverted\",\n              })\n            );\n            notifyTransaction(\n              \"Deposit\",\n              transaction,\n              tokens,\n              true,\n              params.chainId\n            );\n          }\n        });\n      }\n    } catch (e: any) {\n      console.error(e);\n      dispatch(declineTransaction(e.message));\n      throw e;\n    }\n  }\n);\n\nexport const withdraw = createAsyncThunk(\n  \"orders/withdraw\",\n  async (\n    params: {\n      chainId: number;\n      senderAmount: string;\n      senderTokenDecimals: number;\n      provider: any;\n    },\n    { getState, dispatch }\n  ) => {\n    let tx: Transaction;\n    try {\n      tx = await withdrawETH(\n        params.chainId,\n        params.senderAmount,\n        params.senderTokenDecimals,\n        params.provider\n      );\n      if (tx.hash) {\n        const transaction: SubmittedWithdrawOrder = {\n          type: \"Withdraw\",\n          order: {\n            signerToken: nativeETH[params.chainId].address,\n            signerAmount: toAtomicString(\n              params.senderAmount,\n              params.senderTokenDecimals\n            ),\n            senderToken: wethAddresses[params.chainId],\n            senderAmount: toAtomicString(\n              params.senderAmount,\n              params.senderTokenDecimals\n            ),\n          },\n          hash: tx.hash,\n          status: \"processing\",\n          timestamp: Date.now(),\n        };\n        dispatch(submitTransaction(transaction));\n        params.provider.once(tx.hash, async () => {\n          const receipt = await params.provider.getTransactionReceipt(tx.hash);\n          const state: RootState = getState() as RootState;\n          const tokens = Object.values(state.metadata.tokens.all);\n          if (receipt.status === 1) {\n            dispatch(\n              mineTransaction({\n                hash: receipt.transactionHash,\n              })\n            );\n            notifyTransaction(\n              \"Withdraw\",\n              transaction,\n              tokens,\n              false,\n              params.chainId\n            );\n          } else {\n            dispatch(revertTransaction(receipt.transactionHash));\n            notifyTransaction(\n              \"Withdraw\",\n              transaction,\n              tokens,\n              true,\n              params.chainId\n            );\n          }\n        });\n      }\n    } catch (e: any) {\n      console.error(e);\n      dispatch(declineTransaction(e.message));\n      throw e;\n    }\n  }\n);\n\nexport const request = createAsyncThunk(\n  \"orders/request\",\n  async (\n    params: {\n      servers: Server[];\n      signerToken: string;\n      senderToken: string;\n      senderAmount: string;\n      senderTokenDecimals: number;\n      senderWallet: string;\n    },\n    { dispatch }\n  ) => {\n    const orders = await requestOrders(\n      params.servers,\n      params.signerToken,\n      params.senderToken,\n      params.senderAmount,\n      params.senderTokenDecimals,\n      params.senderWallet\n    );\n    if (orders.length) {\n      const bestOrder = [...orders].sort(orderSortingFunction)[0];\n      const expiry = parseInt(bestOrder.expiry) * 1000;\n      const timeTilReRequest = expiry - Date.now() - RFQ_EXPIRY_BUFFER_MS;\n      const reRequestTimerId = window.setTimeout(\n        () => dispatch(request(params)),\n        timeTilReRequest\n      );\n      dispatch(setReRequestTimerId(reRequestTimerId));\n    }\n    return orders;\n  }\n);\n\nexport const approve = createAsyncThunk<\n  // Return type of the payload creator\n  void,\n  // Params\n  {\n    token: string;\n    library: any;\n    contractType: \"Wrapper\" | \"Light\";\n    chainId: number;\n  },\n  // Types for ThunkAPI\n  {\n    // thunkApi\n    dispatch: AppDispatch;\n    state: RootState;\n  }\n>(\"orders/approve\", async (params, { getState, dispatch }) => {\n  let tx: Transaction;\n  try {\n    tx = await approveToken(params.token, params.library, params.contractType);\n    if (tx.hash) {\n      const transaction: SubmittedApproval = {\n        type: \"Approval\",\n        hash: tx.hash,\n        status: \"processing\",\n        tokenAddress: params.token,\n        timestamp: Date.now(),\n      };\n      dispatch(submitTransaction(transaction));\n      params.library.once(tx.hash, async () => {\n        const receipt = await params.library.getTransactionReceipt(tx.hash);\n        const state: RootState = getState() as RootState;\n        const tokens = Object.values(state.metadata.tokens.all);\n        if (receipt.status === 1) {\n          dispatch(\n            mineTransaction({\n              hash: receipt.transactionHash,\n            })\n          );\n          // Optimistically update allowance (this is not really optimistic,\n          // but it preempts receiving the event)\n          if (params.contractType === \"Light\") {\n            dispatch(\n              allowancesLightActions.set({\n                tokenAddress: params.token,\n                amount: APPROVE_AMOUNT,\n              })\n            );\n          } else if (params.contractType === \"Wrapper\") {\n            dispatch(\n              allowancesWrapperActions.set({\n                tokenAddress: params.token,\n                amount: APPROVE_AMOUNT,\n              })\n            );\n          }\n\n          notifyTransaction(\n            \"Approval\",\n            transaction,\n            tokens,\n            false,\n            params.chainId\n          );\n        } else {\n          dispatch(revertTransaction(receipt.transactionHash));\n          notifyTransaction(\n            \"Approval\",\n            transaction,\n            tokens,\n            true,\n            params.chainId\n          );\n        }\n      });\n    }\n  } catch (e: any) {\n    console.error(e);\n    dispatch(declineTransaction(e.message));\n    throw e;\n  }\n});\n\nexport const take = createAsyncThunk(\n  \"orders/take\",\n  async (\n    params: {\n      order: LightOrder;\n      library: any;\n      contractType: \"Light\" | \"Wrapper\";\n    },\n    { getState, dispatch }\n  ) => {\n    let tx: Transaction;\n    try {\n      tx = await takeOrder(params.order, params.library, params.contractType);\n      // When dealing with the Wrapper, since the \"actual\" swap is ETH <-> ERC20,\n      // we should change the order tokens to WETH -> ETH\n      let newOrder =\n        params.contractType === \"Light\"\n          ? params.order\n          : refactorOrder(params.order, params.library._network.chainId);\n      if (tx.hash) {\n        const transaction: SubmittedRFQOrder = {\n          type: \"Order\",\n          order: newOrder,\n          protocol: \"request-for-quote\",\n          hash: tx.hash,\n          status: \"processing\",\n          timestamp: Date.now(),\n          nonce: params.order.nonce,\n          expiry: params.order.expiry,\n        };\n        dispatch(submitTransaction(transaction));\n      }\n    } catch (e: any) {\n      dispatch(declineTransaction(e.message));\n      throw e;\n    }\n  }\n);\n\nexport const ordersSlice = createSlice({\n  name: \"orders\",\n  initialState,\n  reducers: {\n    clear: (state) => {\n      state.orders = [];\n      state.status = \"idle\";\n      if (state.reRequestTimerId) {\n        clearTimeout(state.reRequestTimerId);\n        state.reRequestTimerId = null;\n      }\n    },\n    setReRequestTimerId: (state, action: PayloadAction<number>) => {\n      state.reRequestTimerId = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(request.pending, (state) => {\n        state.status = \"requesting\";\n      })\n      .addCase(request.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.orders = action.payload!;\n      })\n      .addCase(request.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.orders = [];\n      })\n      .addCase(take.pending, (state) => {\n        state.status = \"taking\";\n      })\n      .addCase(take.fulfilled, (state, action) => {\n        state.status = \"idle\";\n      })\n      .addCase(take.rejected, (state, action) => {\n        state.status = \"failed\";\n      })\n      .addCase(approve.pending, (state) => {\n        state.status = \"approving\";\n      })\n      .addCase(approve.fulfilled, (state) => {\n        state.status = \"idle\";\n      })\n      .addCase(approve.rejected, (state) => {\n        state.status = \"failed\";\n      })\n      .addCase(setWalletConnected, (state) => {\n        state.status = \"idle\";\n        state.orders = [];\n      })\n      .addCase(setWalletDisconnected, (state) => {\n        state.status = \"idle\";\n        state.orders = [];\n      });\n  },\n});\n\nexport const { clear, setReRequestTimerId } = ordersSlice.actions;\n/**\n * Sorts orders and returns the best order based on tokens received or sent\n * then falling back to expiry.\n */\nexport const selectBestOrder = (state: RootState) =>\n  // Note that `.sort` mutates the array, so we need to clone it first to\n  // prevent mutating state.\n  [...state.orders.orders].sort(orderSortingFunction)[0];\n\nexport const selectSortedOrders = (state: RootState) =>\n  [...state.orders.orders].sort(orderSortingFunction);\n\nexport const selectFirstOrder = (state: RootState) => state.orders.orders[0];\n\nexport const selectBestOption = createSelector(\n  selectTradeTerms,\n  selectBestOrder,\n  selectBestPricing,\n  (terms, bestRfqOrder, bestPricing) => {\n    if (!terms) return null;\n\n    if (terms.side === \"buy\") {\n      console.error(`Buy orders not implemented yet`);\n      return null;\n    }\n\n    let pricing = (bestPricing as unknown) as {\n      pricing: Levels;\n      locator: string;\n      quoteAmount: string;\n    } | null;\n\n    if (!bestRfqOrder && !pricing) return null;\n\n    let lastLookOrder;\n    if (pricing) {\n      lastLookOrder = {\n        quoteAmount: pricing!.quoteAmount,\n        protocol: \"last-look\",\n        pricing: pricing!,\n      };\n      if (!bestRfqOrder) return lastLookOrder;\n    }\n\n    let rfqOrder;\n    let bestRFQSignerUnits: BigNumber | undefined;\n    if (bestRfqOrder) {\n      bestRFQSignerUnits = new BigNumber(bestRfqOrder.signerAmount).div(\n        new BigNumber(10).pow(terms.quoteToken.decimals)\n      );\n      rfqOrder = {\n        quoteAmount: bestRFQSignerUnits.toString(),\n        protocol: \"request-for-quote\",\n        order: bestRfqOrder,\n      };\n      if (!lastLookOrder) return rfqOrder;\n    }\n\n    // TODO: this should factor in gas.\n    if (\n      pricing &&\n      bestRFQSignerUnits!.lte(new BigNumber(pricing.quoteAmount))\n    ) {\n      return lastLookOrder;\n    } else {\n      return rfqOrder;\n    }\n  }\n);\n\nexport const selectOrdersStatus = (state: RootState) => state.orders.status;\nexport default ordersSlice.reducer;\n","import { LightOrder } from \"@airswap/types\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nimport { RootState } from \"../../app/store\";\nimport {\n  declineTransaction,\n  mineTransaction,\n  revertTransaction,\n  submitTransaction,\n} from \"./transactionActions\";\n\nexport interface DepositOrWithdrawOrder {\n  signerToken: string;\n  signerAmount: string;\n  senderToken: string;\n  senderAmount: string;\n}\n\nexport type TransactionType = \"Approval\" | \"Order\" | \"Deposit\" | \"Withdraw\";\n\nexport type StatusType = \"processing\" | \"succeeded\" | \"reverted\";\n\nexport type ProtocolType = \"request-for-quote\" | \"last-look\";\n\nexport interface SubmittedTransaction {\n  type: TransactionType;\n  hash?: string; // LL orders doesn't have hash\n  status: StatusType;\n  nonce?: string;\n  expiry?: string;\n  timestamp: number;\n  protocol?: ProtocolType;\n}\n\nexport interface SubmittedOrder extends SubmittedTransaction {\n  order: LightOrder;\n}\n\nexport interface SubmittedRFQOrder extends SubmittedOrder {}\n\nexport interface SubmittedLastLookOrder extends SubmittedOrder {}\n\nexport interface LastLookTransaction\n  extends SubmittedTransaction,\n    SubmittedLastLookOrder {}\nexport interface RfqTransaction\n  extends SubmittedTransaction,\n    SubmittedRFQOrder {}\n\nexport interface SubmittedApproval extends SubmittedTransaction {\n  tokenAddress: string;\n}\n\nexport interface SubmittedDepositOrder extends SubmittedTransaction {\n  order: DepositOrWithdrawOrder;\n}\n\nexport interface SubmittedWithdrawOrder extends SubmittedTransaction {\n  order: DepositOrWithdrawOrder;\n}\n\nexport interface TransactionsState {\n  all: SubmittedTransaction[];\n}\n\nconst initialState: TransactionsState = {\n  all: [],\n};\n\nfunction updateTransaction(\n  state: TransactionsState,\n  nonce: string,\n  hash: string,\n  signerWallet: string,\n  status: StatusType,\n  protocol?: ProtocolType\n) {\n  if (protocol === \"last-look\") {\n    const swap = state.all.find(\n      (s) =>\n        s.nonce === nonce &&\n        (s as SubmittedLastLookOrder).order.signerWallet.toLowerCase() ===\n          signerWallet.toLowerCase()\n    );\n    if (swap) {\n      swap.timestamp = Date.now();\n      swap.status = status;\n      swap.hash = hash;\n    }\n  } else {\n    const swap = state.all.find((s) => s.hash === hash);\n    if (swap) {\n      swap.status = status;\n    }\n  }\n}\n\nexport const transactionsSlice = createSlice({\n  name: \"transactions\",\n  initialState,\n  reducers: {\n    clear: (state) => {\n      state.all = [];\n    },\n    setTransactions: (state, action) => {\n      try {\n        state.all = action.payload.all;\n      } catch (err) {\n        console.error(err);\n        state.all = [];\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(submitTransaction, (state, action) => {\n      state.all.unshift(action.payload);\n    });\n    builder.addCase(declineTransaction, (state, action) => {\n      console.error(action.payload);\n    });\n    builder.addCase(revertTransaction, (state, action) => {\n      updateTransaction(\n        state,\n        \"\",\n        action.payload.hash,\n        \"\",\n        \"reverted\",\n        undefined\n      );\n    });\n    builder.addCase(mineTransaction, (state, action) => {\n      updateTransaction(\n        state,\n        action.payload?.nonce || \"\",\n        action.payload?.hash || \"\",\n        action.payload?.signerWallet || \"\",\n        \"succeeded\",\n        action.payload?.protocol\n      );\n    });\n  },\n});\n\nexport const { clear, setTransactions } = transactionsSlice.actions;\nexport const selectTransactions = (state: RootState) => state.transactions.all;\nexport const selectPendingApprovals = (state: RootState) =>\n  state.transactions.all.filter(\n    (tx) => tx.status === \"processing\" && tx.type === \"Approval\"\n  ) as SubmittedApproval[];\nexport default transactionsSlice.reducer;\n","import { chainIds, chainNames } from \"@airswap/constants\";\nimport { LightOrder } from \"@airswap/types\";\nimport * as ValidatorContract from \"@airswap/validator/build/contracts/Validator.sol/Validator.json\";\n// @ts-ignore\nimport * as ValidatorDeploys from \"@airswap/validator/deploys.js\";\n\nimport { ethers } from \"ethers\";\nimport { BigNumber } from \"ethers\";\n\nconst ValidatorInterface = new ethers.utils.Interface(\n  JSON.stringify(ValidatorContract.abi)\n);\n\nexport class Validator {\n  public chainId: number;\n  private contract: ethers.Contract;\n\n  public constructor(\n    chainId = chainIds.RINKEBY,\n    signerOrProvider?: ethers.Signer | ethers.providers.Provider\n  ) {\n    this.chainId = chainId;\n    this.contract = new ethers.Contract(\n      ValidatorDeploys[chainId],\n      ValidatorInterface,\n      // @ts-ignore\n      signerOrProvider ||\n        ethers.getDefaultProvider(chainNames[chainId].toLowerCase())\n    );\n  }\n\n  public static getAddress(chainId = chainIds.RINKEBY): string {\n    if (chainId in ValidatorDeploys) {\n      return ValidatorDeploys[chainId];\n    }\n    throw new Error(`Light Validator deploy not found or chainId ${chainId}`);\n  }\n\n  public async checkSwap(\n    order: LightOrder,\n    senderWallet: string,\n    signer?: ethers.Signer\n  ): Promise<Array<string>> {\n    let contract = this.contract;\n    if (!this.contract.signer) {\n      if (signer === undefined) {\n        throw new Error(\"Signer must be provided\");\n      } else {\n        contract = contract.connect(signer);\n      }\n    }\n    const [count, errors] = await contract.checkSwap(\n      order.nonce,\n      order.expiry,\n      order.signerWallet,\n      order.signerToken,\n      order.signerAmount,\n      order.senderToken,\n      order.senderAmount,\n      order.v,\n      order.r,\n      order.s,\n      senderWallet\n    );\n    return this.convertToArray(count, errors);\n  }\n\n  private convertToArray(count: BigNumber, errors: Array<string>) {\n    const res: Array<string> = [];\n    for (let idx = 0; idx < count.toNumber(); idx++) {\n      res.push(ethers.utils.parseBytes32String(errors[idx]));\n    }\n    return res;\n  }\n}\n","export default function convertHexToRGBA(hexCode: string, opacity: number) {\n  let hex = hexCode.replace(\"#\", \"\");\n\n  if (hex.length === 3) {\n    hex = `${hex[0]}${hex[0]}${hex[1]}${hex[1]}${hex[2]}${hex[2]}`;\n  }\n\n  const r = parseInt(hex.substring(0, 2), 16);\n  const g = parseInt(hex.substring(2, 4), 16);\n  const b = parseInt(hex.substring(4, 6), 16);\n\n  return `rgba(${r},${g},${b},${opacity})`;\n}\n","import styled from \"styled-components/macro\";\n\nimport IconButton from \"../../components/IconButton/IconButton\";\nimport { InputOrButtonBorderStyle } from \"../../style/mixins\";\n\nconst CloseButton = styled(IconButton)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 1.5rem;\n  height: 1.5rem;\n  padding: 0;\n  background: ${(props) => props.theme.colors.black};\n\n  ${InputOrButtonBorderStyle};\n`;\n\nexport default CloseButton;\n","import { AiOutlineLoading } from \"react-icons/ai\";\n\nimport styled, { keyframes } from \"styled-components/macro\";\n\nconst LoadingSpinnerContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n\nconst spin = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst SpinningIcon = styled(AiOutlineLoading)`\n  animation: ${spin} 1s linear infinite;\n`;\n\nconst LoadingSpinner = () => {\n  return (\n    <LoadingSpinnerContainer>\n      <SpinningIcon />\n    </LoadingSpinnerContainer>\n  );\n};\n\nexport default LoadingSpinner;\n","import { css } from \"styled-components\";\nimport styled, { DefaultTheme } from \"styled-components/macro\";\n\nimport { ButtonIntent, ButtonJustifyContent } from \"./Button\";\n\nfunction getButtonBackground(\n  theme: DefaultTheme,\n  intent?: ButtonIntent\n): string {\n  switch (intent) {\n    case \"destructive\":\n      return theme.colors.red;\n    case \"positive\":\n      return theme.colors.green;\n    case \"neutral\":\n      return theme.colors.black;\n    default:\n      return theme.colors.primary;\n  }\n}\n\nfunction getButtonHoverBackground(\n  theme: DefaultTheme,\n  intent?: ButtonIntent\n): string {\n  switch (intent) {\n    case \"destructive\":\n      return theme.colors.red;\n    case \"positive\":\n      return theme.colors.green;\n    case \"neutral\":\n      return theme.colors.black;\n    default:\n      return theme.colors.primaryDark;\n  }\n}\n\nexport const Text = styled.div`\n  transition: opacity 0.3s ease-out;\n`;\n\ntype StyledButtonProps = {\n  disabled?: boolean;\n  $loading?: boolean;\n  intent?: ButtonIntent;\n  justifyContent?: ButtonJustifyContent;\n};\n\nexport const ButtonStyle = css<StyledButtonProps>`\n  display: flex;\n  align-items: center;\n  justify-content: ${(props) => props.justifyContent || \"center\"};\n  width: 100%;\n  height: 3rem;\n  padding: 0 1rem;\n  font-size: 0.9375rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  border-radius: 2px;\n  border-style: \"solid\";\n  border-width: 1px;\n  border-color: ${(props) => props.theme.colors.borderGrey};\n  /* Use blue text on a netral light mode button, otherwise white. */\n  color: ${(props) =>\n    props.intent === \"neutral\" && props.theme.name === \"light\"\n      ? props.theme.colors.primary\n      : props.theme.colors.alwaysWhite};\n  background: ${(props) => getButtonBackground(props.theme, props.intent)};\n  pointer-events: ${(props) => (props.disabled ? \"none\" : \"inherit\")};\n  cursor: ${(props) => (props.disabled ? \"none\" : \"pointer\")};\n\n  ${Text} {\n    margin-right: ${(props) => (props.$loading ? \"1rem\" : 0)};\n    opacity: ${(props) => (props.disabled ? 0.5 : 1)};\n  }\n\n  &:focus,\n  &:hover {\n    outline: 0;\n    background: ${(props) =>\n      getButtonHoverBackground(props.theme, props.intent)};\n    border-color: ${(props) =>\n      props.intent === \"neutral\"\n        ? props.theme.colors.lightGrey\n        : \"props.theme.colors.primaryDark\"};\n  }\n\n  &:active {\n    border-color: ${(props) => props.theme.colors.primary};\n  }\n`;\n\nexport const StyledButton = styled.button`\n  ${ButtonStyle}\n`;\n","import React from \"react\";\n\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner\";\nimport { StyledButton, Text } from \"./Button.styles\";\n\nexport type ButtonIntent = \"neutral\" | \"primary\" | \"positive\" | \"destructive\";\nexport type ButtonJustifyContent = \"center\" | \"flex-start\" | \"flex-end\";\n\nexport type ButtonProps = {\n  children: React.ReactNode;\n  className?: string;\n  /**\n   * Intent affects the appearance of the button\n   */\n  intent?: ButtonIntent;\n  /**\n   * Intent affects the appearance of the button\n   */\n  justifyContent?: ButtonJustifyContent;\n  /**\n   * Whether or not the button should be disabled. Clicking a disabled button\n   * has no effect.\n   */\n  disabled?: boolean;\n  /**\n   * Whether or not to show a loading spinner within the button. This also\n   * prevents further clicks on the button\n   */\n  loading?: boolean;\n} & React.ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      children,\n      className = \"\",\n      intent = \"neutral\",\n      justifyContent = \"center\",\n      disabled = false,\n      loading = false,\n      onClick,\n      ...rest\n    },\n    ref\n  ) => {\n    return (\n      <StyledButton\n        className={className}\n        $loading={loading}\n        intent={intent}\n        disabled={disabled || loading}\n        justifyContent={justifyContent}\n        onClick={(e) => {\n          !loading && onClick && onClick(e);\n        }}\n        ref={ref}\n        {...rest}\n      >\n        <Text>{children}</Text>\n        {loading && <LoadingSpinner />}\n      </StyledButton>\n    );\n  }\n);\n\nexport default Button;\n","import { motion } from \"framer-motion\";\nimport { css } from \"styled-components\";\nimport styled from \"styled-components/macro\";\n\nimport convertHexToRGBA from \"../../helpers/transformHexToRgba\";\nimport { ScrollBarStyle } from \"../../style/mixins\";\nimport { sizes } from \"../../style/sizes\";\nimport CloseButton from \"../../styled-components/CloseButton/CloseButton\";\nimport Button from \"../Button/Button\";\nimport { ButtonStyle } from \"../Button/Button.styles\";\nimport { InfoSubHeading, Title } from \"../Typography/Typography\";\n\ntype ContainerProps = {\n  isHidden: boolean;\n  hasTitle: boolean;\n};\n\ntype ScrollContainerProps = {\n  $overflow?: boolean;\n};\n\nexport const ScrollContainer = styled.div<ScrollContainerProps>`\n  flex-grow: 99;\n  width: calc(100% + (${sizes.tradeContainerPadding} / 2));\n  height: 100%;\n  max-height: calc(100% - 3.75rem);\n  padding-right: calc(${sizes.tradeContainerPadding} / 2);\n  padding-left: 0.125rem;\n  padding-bottom: 1rem;\n  overflow-x: hidden;\n  overflow-y: ${(props) => (props.$overflow ? \"scroll\" : \"hidden\")};\n\n  ${ScrollBarStyle}\n`;\n\nexport const ContentContainer = styled(motion.div)`\n  position: relative;\n  height: calc(100% - 5.625rem);\n  padding: 0 ${sizes.tradeContainerPadding};\n  background-color: ${(props) => props.theme.colors.black};\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: ${sizes.tradeContainerPadding};\n  transition: background ease-in-out 0.3s;\n`;\n\nexport const TitleSubContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledTitle = styled(Title)`\n  min-height: 1.875rem;\n  padding-right: 1rem;\n  flex-grow: 2;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  transition: opacity ease-in-out 0.3s;\n  will-change: opacity;\n\n  @media (prefers-reduced-motion: reduce) {\n    transition: none;\n  }\n`;\n\nexport const StyledInfoSubHeading = styled(InfoSubHeading)`\n  margin-top: 0.5rem;\n  transition: opacity ease-in-out 0.3s;\n  will-change: opacity;\n\n  @media (prefers-reduced-motion: reduce) {\n    transition: none;\n  }\n`;\n\nconst OverlayActionButtonStyle = css`\n  margin-top: auto;\n  justify-self: flex-end;\n  border: 1px solid ${(props) => props.theme.colors.borderGrey};\n  background-color: transparent;\n  color: ${(props) => props.theme.colors.lightGrey};\n\n  &:hover {\n    color: ${(props) => props.theme.colors.black};\n    background-color: ${(props) => props.theme.colors.white};\n  }\n`;\n\nexport const OverlayActionButton = styled(Button)`\n  ${OverlayActionButtonStyle};\n  background-color: transparent;\n  color: ${(props) => props.theme.colors.lightGrey};\n\n  &:hover {\n    color: ${(props) => props.theme.colors.black};\n    background-color: ${(props) => props.theme.colors.white};\n  }\n`;\n\nexport const OverlayActionLink = styled.a`\n  ${ButtonStyle}\n  ${OverlayActionButtonStyle};\n  background-color: ${(props) => props.theme.colors.primary};\n  color: ${(props) => props.theme.colors.white};\n\n  &:hover {\n    color: ${(props) => props.theme.colors.white};\n    background-color: ${(props) => props.theme.colors.primaryDark};\n  }\n`;\n\nexport const StyledSubTitle = styled(InfoSubHeading)`\n  transition: opacity ease-in-out 0.3s;\n  will-change: opacity;\n  white-space: nowrap;\n  overflow: hidden;\n  padding-right: 1rem;\n`;\n\nexport const Container = styled.div<ContainerProps>`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: ${(props) => (props.isHidden ? \"none\" : \"visible\")};\n  z-index: 2;\n  \n  ${CloseButton} {\n    transition: transform ${(props) =>\n      props.isHidden\n        ? \"0.25s ease-in\"\n        : \"0.75s cubic-bezier(0.12, 0.71, 0.36, 1)\"};\n    transform: translateY(${(props) => (props.isHidden ? \"-5rem\" : \"0%\")});\n\n    @media (prefers-reduced-motion: reduce) {\n      transition: none;\n    }\n  }\n  \n  ${StyledTitle} {\n    opacity: ${(props) => (props.isHidden ? 0 : 1)};\n    pointer-events: ${(props) => (props.isHidden ? \"none\" : \"visible\")};\n  }\n\n  ${StyledInfoSubHeading} {\n    opacity: ${(props) => (props.isHidden ? 0 : 1)};\n    pointer-events: ${(props) => (props.isHidden ? \"none\" : \"visible\")};\n  }\n  \n  ${TitleContainer} {\n    background: ${(props) =>\n      props.isHidden || !props.hasTitle\n        ? convertHexToRGBA(props.theme.colors.black, 0)\n        : props.theme.colors.black};\n  }\n}\n`;\n","import styled from \"styled-components/macro\";\n\nimport { sizes } from \"../../style/sizes\";\nimport Icon from \"../Icon/Icon\";\nimport { ScrollContainer } from \"../Overlay/Overlay.styles\";\nimport { SubText } from \"../Typography/Typography\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  padding: 0 ${sizes.tradeContainerPadding} ${sizes.tradeContainerPadding};\n`;\n\nexport const StyledScrollContainer = styled(ScrollContainer)`\n  max-height: calc(100% - 3.125rem);\n  overflow-y: ${(props) => (props.$overflow ? \"scroll\" : \"hidden\")};\n`;\n\nexport const StyledErrorList = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: ${(props) => props.theme.colors.black};\n`;\n\nexport const StyledError = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 3rem;\n  margin-top: 1.5rem;\n`;\n\nexport const StyledErrorIcon = styled(Icon)`\n  margin-right: 1.125rem;\n`;\n\nexport const ErrorIconContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  padding-bottom: 0.3rem;\n  position: relative;\n  width: 3.75rem;\n  height: 100%;\n  path {\n    fill: ${(props) =>\n      props.theme.name === \"light\"\n        ? props.theme.colors.primary\n        : props.theme.colors.alwaysWhite};\n  }\n`;\n\nexport const ErrorTextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: calc(100% - 3.75rem);\n`;\n\nexport const StyledSubText = styled(SubText)`\n  color: ${(props) => props.theme.colors.lightGrey};\n`;\n\nexport const LegendDivider = styled.div`\n  width: calc(100% - 4rem);\n  height: 1px;\n  background: ${(props) => props.theme.colors.borderGrey};\n  align-self: center;\n`;\n","import { useRef, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport validatorErrors from \"../../../public/locales/en/validatorErrors.json\";\nimport useWindowSize from \"../../helpers/useWindowSize\";\nimport { OverlayActionButton } from \"../Overlay/Overlay.styles\";\nimport { InfoHeading } from \"../Typography/Typography\";\nimport {\n  Container,\n  StyledErrorList,\n  StyledError,\n  ErrorTextContainer,\n  LegendDivider,\n  StyledScrollContainer,\n  StyledErrorIcon,\n  StyledSubText,\n} from \"./ErrorList.styles\";\n\nexport type Error = keyof typeof validatorErrors;\n\ntype ErrorListProps = {\n  errors: Error[];\n  handleClick: () => void;\n};\n\nexport const ErrorList = ({ errors = [], handleClick }: ErrorListProps) => {\n  const { t } = useTranslation([\"validatorErrors\", \"common\"]);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [overflow, setOverflow] = useState(false);\n  const { width, height } = useWindowSize();\n\n  const StyledErrors = () => {\n    if (!errors.length) return <></>;\n    return (\n      <>\n        {errors.map((error, idx) => {\n          const subText = error.toLowerCase() as Error;\n          return (\n            <StyledError key={idx}>\n              <StyledErrorIcon\n                name=\"information-circle-outline\"\n                iconSize={1.5}\n              />\n              <ErrorTextContainer>\n                <InfoHeading>{t(`validatorErrors:${error}`)}</InfoHeading>\n                <StyledSubText>{t(`validatorErrors:${subText}`)}</StyledSubText>\n              </ErrorTextContainer>\n            </StyledError>\n          );\n        })}\n      </>\n    );\n  };\n\n  useEffect(() => {\n    if (\n      containerRef.current &&\n      scrollContainerRef.current &&\n      buttonRef.current\n    ) {\n      const { offsetTop, scrollHeight } = scrollContainerRef.current;\n      const { scrollHeight: buttonHeight } = buttonRef.current;\n      setOverflow(\n        scrollHeight + offsetTop + buttonHeight >\n          containerRef.current.offsetHeight\n      );\n    }\n  }, [containerRef, scrollContainerRef, width, height, errors.length]);\n\n  return (\n    <Container ref={containerRef}>\n      <LegendDivider />\n      <StyledScrollContainer $overflow={overflow} ref={scrollContainerRef}>\n        <StyledErrorList>\n          <StyledErrors />\n        </StyledErrorList>\n      </StyledScrollContainer>\n      <OverlayActionButton ref={buttonRef} onClick={handleClick}>\n        {t(\"common:back\")}\n      </OverlayActionButton>\n    </Container>\n  );\n};\n","import styled from \"styled-components/macro\";\n\nimport { sizes } from \"../../../../style/sizes\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  padding-bottom: ${sizes.tradeContainerPadding};\n`;\n","import React, { FC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { ModalParagraph } from \"../../../../styled-components/Modal/Modal\";\nimport { OverlayActionButton } from \"../../../Overlay/Overlay.styles\";\nimport { Container } from \"./GasFreeModal.styles\";\n\ninterface GasFreeSwapsModalProps {\n  onCloseButtonClick: () => void;\n}\n\nconst GasFreeSwapsModal: FC<GasFreeSwapsModalProps> = ({\n  onCloseButtonClick,\n}) => {\n  const { t } = useTranslation([\"common\", \"information\"]);\n\n  return (\n    <Container>\n      <ModalParagraph>{t(\"information:gasFreeSwaps.paragraph\")}</ModalParagraph>\n      <ModalParagraph>\n        {t(\"information:gasFreeSwaps.paragraph2\")}\n      </ModalParagraph>\n      <OverlayActionButton onClick={onCloseButtonClick}>\n        {t(\"common:back\")}\n      </OverlayActionButton>\n    </Container>\n  );\n};\n\nexport default GasFreeSwapsModal;\n","import styled from \"styled-components\";\n\nconst Link = styled.a`\n  text-decoration: underline;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n\n  &:active {\n    color: ${(props) => props.theme.colors.primaryDark};\n  }\n\n  &:visited {\n    color: ${(props) => props.theme.colors.orange};\n  }\n`;\n\nexport default Link;\n","import styled from \"styled-components/macro\";\n\nimport { sizes } from \"../../../../style/sizes\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  padding-bottom: ${sizes.tradeContainerPadding};\n`;\n","import React, { FC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport Link from \"../../../../styled-components/Link/Link.styles\";\nimport { ModalParagraph } from \"../../../../styled-components/Modal/Modal\";\nimport { OverlayActionLink } from \"../../../Overlay/Overlay.styles\";\nimport { Container } from \"./ProtocolFeeDiscountModal.styles\";\n\nconst ProtocolFeeDiscountModal: FC = () => {\n  const { t } = useTranslation([\"information\"]);\n\n  return (\n    <Container>\n      <ModalParagraph>\n        {t(\"information:protocolFeeDiscount.paragraph\")}\n      </ModalParagraph>\n      <ModalParagraph>\n        {`${t(\"information:protocolFeeDiscount.paragraph2\")} `}\n        <Link target=\"_blank\" href=\"https://about.airswap.io/#protocols\">\n          {t(\"information:protocolFeeDiscount.link\")}\n        </Link>\n        .\n      </ModalParagraph>\n      <OverlayActionLink\n        target=\"_blank\"\n        href=\"https://activate.codefi.network/staking/airswap/governance\"\n      >\n        {t(\"information:protocolFeeDiscount.stakeYourAst\")}\n      </OverlayActionLink>\n    </Container>\n  );\n};\n\nexport default ProtocolFeeDiscountModal;\n","import { FC } from \"react\";\n\nimport { AnimatePresence, useReducedMotion } from \"framer-motion\";\n\nimport CloseButton from \"../../styled-components/CloseButton/CloseButton\";\nimport {\n  Container,\n  StyledTitle,\n  TitleContainer,\n  ContentContainer,\n  TitleSubContainer,\n  StyledInfoSubHeading,\n} from \"./Overlay.styles\";\n\nexport type OverlayProps = {\n  /**\n   * Function to close component\n   */\n  onClose: () => void;\n  /**\n   * Title shown on top\n   */\n  title?: string;\n  /**\n   * Subtitle shown under title\n   */\n  subTitle?: string;\n  /**\n   * Hide or show the component\n   */\n  isHidden?: boolean;\n};\n\nconst Overlay: FC<OverlayProps> = ({\n  onClose,\n  title = \"\",\n  isHidden = true,\n  subTitle = \"\",\n  children,\n}) => {\n  const shouldReduceMotion = useReducedMotion();\n\n  return (\n    <Container hasTitle={!!title} isHidden={isHidden}>\n      <TitleContainer>\n        <TitleSubContainer>\n          <StyledTitle type=\"h2\">{title}</StyledTitle>\n          {!!subTitle && (\n            <StyledInfoSubHeading>{subTitle}</StyledInfoSubHeading>\n          )}\n        </TitleSubContainer>\n        <CloseButton\n          icon=\"chevron-down\"\n          iconSize={1}\n          tabIndex={isHidden ? -1 : 0}\n          onClick={onClose}\n        />\n      </TitleContainer>\n      <AnimatePresence>\n        {!isHidden && (\n          <ContentContainer\n            key=\"content\"\n            transition={{\n              ease: \"easeOut\",\n              duration: shouldReduceMotion ? 0 : 0.3,\n            }}\n            initial={{ y: \"100%\" }}\n            animate={{ y: \"0%\" }}\n            exit={{ y: \"100%\" }}\n          >\n            {children}\n          </ContentContainer>\n        )}\n      </AnimatePresence>\n    </Container>\n  );\n};\n\nexport default Overlay;\n","import React from \"react\";\n\nimport styled from \"styled-components/macro\";\n\nimport { FormInput, FormLabel } from \"../Typography/Typography\";\n\ntype TextInputStyleProps = {\n  hideLabel?: boolean;\n  hasError?: boolean;\n  disabled?: boolean;\n};\n\ntype StyledInputProps = Pick<\n  React.HTMLProps<HTMLInputElement>,\n  \"type\" | \"disabled\"\n>;\n\nexport const StyledFormLabel = styled(FormLabel)``;\n\nexport const StyledInput = styled(FormInput)<StyledInputProps>``;\n\nexport const StyledTextInput = styled.div<TextInputStyleProps>`\n  ${StyledFormLabel} {\n    display: ${(props) => (props.hideLabel ? \"none\" : \"block\")};\n    width: 100%;\n    background: none;\n  }\n\n  ${StyledInput} {\n    position: relative;\n    border: 0;\n    width: 100%;\n    padding: 0;\n    opacity: ${(props) => (props.disabled ? 0.5 : 1)};\n    background: none;\n\n    &::placeholder {\n      color: ${(props) => props.theme.colors.lightGrey};\n    }\n\n    &:focus {\n      outline: 0;\n    }\n  }\n`;\n","import React, { FC, ReactElement } from \"react\";\n\nimport {\n  StyledFormLabel,\n  StyledInput,\n  StyledTextInput,\n} from \"./TextInput.styles\";\n\ntype HTMLInputProps = Omit<React.HTMLProps<HTMLInputElement>, \"ref\" | \"as\">;\n\nexport type TextInputProps = {\n  label: string;\n  type?: string;\n  hasError?: boolean;\n  hideLabel?: boolean;\n} & HTMLInputProps;\n\nconst TextInput: FC<TextInputProps> = ({\n  label,\n  type = \"text\",\n  className,\n  hasError,\n  hideLabel,\n  disabled,\n  ...inputProps\n}): ReactElement => {\n  return (\n    <StyledTextInput\n      hasError={hasError}\n      hideLabel={hideLabel}\n      aria-label={label}\n      disabled={disabled}\n      className={className}\n    >\n      <StyledFormLabel>{label}</StyledFormLabel>\n      <StyledInput {...inputProps} disabled={disabled} type={type} />\n    </StyledTextInput>\n  );\n};\n\nexport default TextInput;\n","import styled from \"styled-components/macro\";\n\nimport { sizes } from \"../../style/sizes\";\nimport Icon from \"../Icon/Icon\";\nimport { ScrollContainer } from \"../Overlay/Overlay.styles\";\nimport TextInput from \"../TextInput/TextInput\";\nimport { StyledInput } from \"../TextInput/TextInput.styles\";\nimport { Title } from \"../Typography/Typography\";\n\nexport const StyledScrollContainer = styled(ScrollContainer)`\n  max-height: calc(100% - 7rem);\n  overflow-y: ${(props) => (props.$overflow ? \"scroll\" : \"hidden\")};\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  height: 100%;\n  padding: 0 ${sizes.tradeContainerPadding} ${sizes.tradeContainerPadding};\n  background-color: ${(props) => props.theme.colors.black};\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-bottom: 1.875rem;\n  padding: ${sizes.tradeContainerPadding} ${sizes.tradeContainerPadding} 0;\n`;\n\nexport const StyledTitle = styled(Title)`\n  visibility: hidden;\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: 1rem;\n`;\n\nexport const SearchInput = styled(TextInput)`\n  margin-bottom: 1.25rem;\n  width: 100%;\n  background-color: ${(props) => props.theme.colors.black};\n\n  ${StyledInput} {\n    border: 1px solid ${(props) => props.theme.colors.borderGrey};\n    border-radius: 2px;\n    line-height: 2.25;\n    padding: 0.25rem 0.625rem;\n    font-size: 1rem;\n    font-weight: 400;\n    background: transparent;\n    color: ${(props) => props.theme.colors.white};\n\n    &::placeholder {\n      color: ${(props) => props.theme.colors.lightGrey};\n    }\n\n    &:hover,\n    &:focus {\n      outline: none;\n      border-color: ${(props) => props.theme.colors.lightGrey};\n    }\n\n    &:active {\n      outline: none;\n      border-color: ${(props) => props.theme.colors.primary};\n    }\n  }\n`;\n\nexport const TokenContainer = styled.div``;\n\nexport const Legend = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 0.75rem;\n  min-height: 1.5rem;\n`;\n\nexport const LegendItem = styled.div`\n  text-transform: uppercase;\n  font-weight: 700;\n  font-size: 0.625rem;\n  color: ${(props) => props.theme.colors.lightGrey};\n`;\n\nexport const LegendDivider = styled.div`\n  margin: 0 1rem;\n  width: 100%;\n  height: 1px;\n  background: ${(props) => props.theme.colors.borderGrey};\n`;\n\nexport const InactiveTitleContainer = styled.div`\n  border: 1px solid ${(props) => props.theme.colors.borderGrey};\n  border-radius: 2px;\n  background: transparent;\n  color: #9e9e9e;\n  padding: 1rem;\n  font-size: 0.75rem;\n  margin: 1rem 0;\n`;\n\nexport const InactiveTitle = styled.h3`\n  display: flex;\n  font-size: 0.75rem;\n`;\n\nexport const InformationIcon = styled(Icon)`\n  display: inline;\n  margin-left: 0.25rem;\n`;\n\nexport const NoResultsContainer = styled.div`\n  text-align: center;\n`;\n","import { TokenInfo } from \"@airswap/types\";\n\nimport { ethers } from \"ethers\";\n\n/**\n * Create a filter function to apply to a token for whether it matches a particular search query\n * @param search the search query to apply to the token\n */\nexport function createTokenFilterFunction<T extends TokenInfo>(\n  search: string\n): (tokens: T) => boolean {\n  const searchingAddress = ethers.utils.isAddress(search);\n\n  if (searchingAddress) {\n    return (t: T) => t.address.toLowerCase() === search.toLowerCase();\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0);\n\n  if (lowerSearchParts.length === 0) return () => true;\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0);\n\n    return lowerSearchParts.every(\n      (p) =>\n        p.length === 0 ||\n        sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p))\n    );\n  };\n\n  return ({ name, symbol }: T): boolean =>\n    Boolean((symbol && matchesSearch(symbol)) || (name && matchesSearch(name)));\n}\n\nexport function filterTokens<T extends TokenInfo>(\n  tokens: T[],\n  search: string\n): T[] {\n  return tokens.filter(createTokenFilterFunction(search));\n}\n","import { TokenInfo } from \"@airswap/types\";\nimport { formatUnits } from \"@ethersproject/units\";\n\nimport { BalancesState } from \"../../features/balances/balancesSlice\";\n\nexport function sortTokensByBalance(\n  tokens: TokenInfo[],\n  balances: BalancesState\n) {\n  return tokens.sort((a, b) =>\n    parseFloat(formatUnits(balances.values[a.address]!, a.decimals)) <\n    parseFloat(formatUnits(balances.values[b.address]!, b.decimals))\n      ? 1\n      : parseFloat(formatUnits(balances.values[a.address]!, a.decimals)) ===\n        parseFloat(formatUnits(balances.values[b.address]!, b.decimals))\n      ? a.symbol > b.symbol\n        ? 1\n        : -1\n      : -1\n  );\n}\n\nexport function sortTokensBySymbol(tokens: TokenInfo[]) {\n  return tokens.sort((a, b) =>\n    a.symbol.toLocaleLowerCase() < b.symbol.toLocaleLowerCase() ? -1 : 1\n  );\n}\n\nfunction getTokenBalance(token: TokenInfo, balances: BalancesState): number {\n  const balance = balances.values[token.address];\n\n  if (!balance) {\n    return 0;\n  }\n\n  return parseFloat(\n    formatUnits(balances.values[token.address]!, token.decimals)\n  );\n}\n\nexport function sortTokensBySymbolAndBalance(\n  tokens: TokenInfo[],\n  balances: BalancesState\n) {\n  return tokens.sort((a, b) => {\n    const aBalance = getTokenBalance(a, balances);\n    const bBalance = getTokenBalance(b, balances);\n\n    if (aBalance === 0 && bBalance !== 0) {\n      return 1;\n    } else if (bBalance === 0 && aBalance !== 0) {\n      return -1;\n    }\n\n    return a.symbol.toLocaleLowerCase() < b.symbol.toLocaleLowerCase() ? -1 : 1;\n  });\n}\n\nexport function sortTokenByExactMatch(\n  filteredTokens: TokenInfo[],\n  tokenQuery: string\n) {\n  if (!filteredTokens.length) return [];\n  if (!tokenQuery || tokenQuery === \"\") return filteredTokens;\n\n  // split query into word array\n  const symbolMatch = tokenQuery\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0);\n\n  // don't filter against symbol if query is multiple words\n  if (symbolMatch.length > 1) return filteredTokens;\n\n  // filter based off symbol match -> substring match -> remainder of filtered tokens\n  const exactMatches: TokenInfo[] = [];\n  const symbolSubtrings: TokenInfo[] = [];\n  const remainder: TokenInfo[] = [];\n\n  filteredTokens.forEach((token) => {\n    // add exact matches\n    if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n      return exactMatches.push(token);\n    }\n    // add matches with starting values\n    else if (\n      token.symbol?.toLowerCase().startsWith(tokenQuery.toLowerCase().trim())\n    ) {\n      return symbolSubtrings.push(token);\n    }\n    // add remaining filtered tokens\n    else {\n      return remainder.push(token);\n    }\n  });\n\n  return [...exactMatches, ...symbolSubtrings, ...remainder];\n}\n","import { TokenInfo } from \"@airswap/types\";\n\nimport styled from \"styled-components/macro\";\n\nexport type sizes = \"small\" | \"medium\" | \"large\";\n\nexport type StyledTokenLogoProps = {\n  size: sizes;\n  tokenInfo: TokenInfo | null;\n};\n\nconst remSizes: Record<sizes, string> = {\n  small: \"1.5rem\",\n  medium: \"2rem\",\n  large: \"2.5rem\",\n};\n\nconst StyledTokenLogo = styled.div<StyledTokenLogoProps>`\n  width: ${(props) => remSizes[props.size]};\n  height: ${(props) => remSizes[props.size]};\n  background-image: ${(props) =>\n    !props.tokenInfo\n      ? \"none\"\n      : !props.tokenInfo.logoURI\n      ? \"url(images/token-placeholder.svg)\"\n      : \"url(\" + props.tokenInfo.logoURI + \")\"};\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-color: ${(props) => props.theme.colors.black};\n  border-radius: 50%;\n  border-color: ${(props) => props.theme.colors.borderGrey};\n  border-style: ${(props) => (!props.tokenInfo ? \"solid\" : \"none\")};\n  /* Note this is only applied when not empty. */\n  border-width: 1px;\n`;\n\nexport default StyledTokenLogo;\n","import { FC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { TokenInfo } from \"@airswap/types\";\n\nimport { MainButton, BackButton } from \"./ActionButtons.styles\";\n\nexport enum ButtonActions {\n  connectWallet,\n  switchNetwork,\n  restart,\n  goBack,\n  approve,\n  requestQuotes,\n  takeQuote,\n  trackTransaction,\n}\n\nconst buttonTextMapping: Record<ButtonActions, string> = {\n  [ButtonActions.connectWallet]: \"wallet:connectWallet\",\n  [ButtonActions.switchNetwork]: \"wallet:switchNetwork\",\n  [ButtonActions.restart]: \"orders:newSwap\",\n  [ButtonActions.goBack]: \"common:back\",\n  [ButtonActions.approve]: \"orders:approve\",\n  [ButtonActions.requestQuotes]: \"orders:continue\",\n  [ButtonActions.takeQuote]: \"orders:take\",\n  [ButtonActions.trackTransaction]: \"orders:track\",\n};\n\n/**\n * This can either be:\n *  - Connect wallet button (Wallet not connected, OR isConnecting [loading])\n *  - Invisible (approving and swapping - TBD - could be overlay)\n *  - Back button (pair unavailable)\n *  - New swap button (to restart after order has been submitted)\n *  - \"Back\" and \"Complete Swap\" buttons (when ready to go)\n *  - \"Back\" and \"Approve\" buttons\n *  - A disabled button containing reason text (enter an amount, token info\n *    not found, or insufficient balance)\n *  - A continue button to request quotes\n */\nconst ActionButtons: FC<{\n  walletIsActive: boolean;\n  unsupportedNetwork: boolean;\n  orderComplete: boolean;\n  pairUnavailable: boolean;\n  hasQuote: boolean;\n  needsApproval: boolean;\n  hasAmount: boolean;\n  baseTokenInfo: TokenInfo | null;\n  quoteTokenInfo: TokenInfo | null;\n  hasSufficientBalance: boolean;\n  isLoading: boolean;\n  onButtonClicked: (action: ButtonActions) => void;\n}> = ({\n  walletIsActive,\n  unsupportedNetwork,\n  orderComplete,\n  pairUnavailable,\n  hasQuote,\n  needsApproval,\n  hasAmount,\n  baseTokenInfo,\n  quoteTokenInfo,\n  hasSufficientBalance,\n  isLoading,\n  onButtonClicked,\n}) => {\n  const { t } = useTranslation([\"wallet\", \"common\", \"orders\"]);\n\n  // First determine the next action.\n  let nextAction: ButtonActions;\n  // Note that wallet is not considered \"active\" if connected to wrong network\n  if (unsupportedNetwork) nextAction = ButtonActions.switchNetwork;\n  else if (!walletIsActive) nextAction = ButtonActions.connectWallet;\n  else if (pairUnavailable) nextAction = ButtonActions.goBack;\n  else if (orderComplete) nextAction = ButtonActions.restart;\n  else if (hasQuote && needsApproval) nextAction = ButtonActions.approve;\n  else if (hasQuote) nextAction = ButtonActions.takeQuote;\n  else nextAction = ButtonActions.requestQuotes;\n\n  // If a secondary action is defined, a secondary button will be displayed.\n  let secondaryAction: ButtonActions | null = null;\n  if (orderComplete) secondaryAction = ButtonActions.trackTransaction;\n\n  // If there's something to fix before progress can be made, the button will\n  // be disabled. These disabled states never have a back button.\n  let isDisabled =\n    walletIsActive &&\n    (!hasSufficientBalance || !baseTokenInfo || !quoteTokenInfo || !hasAmount);\n\n  // Some actions require an additional back button\n  const hasBackButton: boolean =\n    !isDisabled &&\n    (nextAction === ButtonActions.takeQuote ||\n      nextAction === ButtonActions.approve);\n\n  if (orderComplete) {\n    isDisabled = false;\n    nextAction = ButtonActions.restart;\n  }\n\n  // The text depends on the next action, unless the button is disabled, when\n  // it depends on the reason for being disabled instead.\n  let mainButtonText;\n  if (isDisabled) {\n    if (!hasAmount) mainButtonText = t(\"orders:enterAmount\");\n    else if (!baseTokenInfo || !quoteTokenInfo)\n      mainButtonText = t(\"orders:chooseToken\");\n    else if (!hasSufficientBalance)\n      mainButtonText = t(\"orders:insufficentBalance\", {\n        symbol: baseTokenInfo.symbol,\n      });\n  } else {\n    // @ts-ignore dynamic translation key.\n    mainButtonText = t(buttonTextMapping[nextAction]);\n  }\n\n  let secondaryButtonText: string | null = !!secondaryAction\n    ? // @ts-ignore dynamic translation key.\n      t(buttonTextMapping[secondaryAction])\n    : null;\n\n  return (\n    <>\n      {hasBackButton && (\n        <BackButton onClick={onButtonClicked.bind(null, ButtonActions.goBack)}>\n          {t(\"common:back\")}\n        </BackButton>\n      )}\n      {secondaryAction && (\n        // Note MainButton used to ensure secondary button is same size as main\n        <MainButton\n          intent=\"neutral\"\n          onClick={onButtonClicked.bind(null, secondaryAction)}\n        >\n          {secondaryButtonText}\n        </MainButton>\n      )}\n      <MainButton\n        intent={nextAction === ButtonActions.goBack ? \"neutral\" : \"primary\"}\n        loading={isLoading}\n        disabled={isDisabled}\n        onClick={onButtonClicked.bind(null, nextAction)}\n      >\n        {mainButtonText}\n      </MainButton>\n    </>\n  );\n};\n\nexport default ActionButtons;\n","import { BaseHTMLAttributes, FC } from \"react\";\n\nimport { TokenInfo } from \"@airswap/types\";\n\nimport StyledTokenLogo, { StyledTokenLogoProps } from \"./TokenLogo.styles\";\n\nexport type TokenLogoProps = {\n  tokenInfo: TokenInfo | null;\n  className?: string;\n} & StyledTokenLogoProps &\n  BaseHTMLAttributes<HTMLImageElement>;\n\nconst TokenLogo: FC<TokenLogoProps> = ({ tokenInfo, ...rest }) => {\n  return <StyledTokenLogo tokenInfo={tokenInfo} {...rest} />;\n};\n\nexport default TokenLogo;\n","import styled from \"styled-components/macro\";\n\nimport { Metadata } from \"../../../Typography/Typography\";\n\nexport const Container = styled.div`\n  border: 1px solid ${(props) => props.theme.colors.borderGrey};\n  padding: 1rem;\n  display: grid;\n  grid-auto-flow: column;\n  cursor: pointer;\n  grid-template-columns: auto minmax(auto, 1fr) 6.25rem;\n  grid-gap: 1rem;\n  align-items: center;\n\n  &:not(:last-of-type) {\n    border-bottom: 0;\n  }\n\n  & + & {\n    border-top: 1px solid ${(props) => props.theme.colors.borderGrey};\n  }\n`;\n\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const Symbol = styled.h3`\n  font-size: 1rem;\n  font-weight: bold;\n  line-height: 1rem;\n`;\n\nexport const TokenName = styled.h3`\n  font-size: 0.8rem;\n  font-weight: 500;\n  color: #9e9e9e;\n  line-height: 1rem;\n`;\n\nexport const Span = styled.span``;\n\nexport const UnsupportedTokenText = styled(Metadata)`\n  text-align: center;\n  justify-self: center;\n`;\n\nexport const ImportButton = styled.button`\n  border: 1px solid ${(props) => props.theme.colors.borderGrey};\n  font-size: 0.8rem;\n  font-weight: bold;\n  padding: 0.5rem 1.5rem;\n  justify-self: center;\n\n  &:hover:not(:disabled) {\n    background: ${(props) => props.theme.colors.white};\n    color: ${(props) => props.theme.colors.black};\n    transition: 0.25s ease-in-out;\n  }\n`;\n","import { useTranslation } from \"react-i18next\";\n\nimport { TokenInfo } from \"@airswap/types\";\n\nimport TokenLogo from \"../../../TokenLogo/TokenLogo\";\nimport {\n  Container,\n  TextContainer,\n  Symbol,\n  TokenName,\n  ImportButton,\n  UnsupportedTokenText,\n} from \"./TokenImportButton.styles\";\n\nexport type TokenImportRowProps = {\n  /**\n   * TokenInfo object\n   */\n  token: TokenInfo;\n  /**\n   * True if the token isn't currently supported by makers.\n   */\n  isUnsupported: boolean;\n  /**\n   * onClick event, either setSignerToken or setSenderToken\n   */\n  onClick: (val: string) => void;\n};\n\nconst TokenImportButton = ({\n  token,\n  onClick,\n  isUnsupported,\n}: TokenImportRowProps) => {\n  const { t } = useTranslation([\"balances\", \"common\"]);\n\n  return (\n    <Container>\n      <TokenLogo tokenInfo={token} size=\"medium\" />\n\n      <TextContainer>\n        <Symbol>{token.symbol}</Symbol>\n        <TokenName>{token.name}</TokenName>\n      </TextContainer>\n      {isUnsupported ? (\n        <UnsupportedTokenText>\n          {t(\"balances:unsupportedToken\")}\n        </UnsupportedTokenText>\n      ) : (\n        <ImportButton onClick={() => onClick(token.address)}>\n          {t(\"balances:addToTokenSet\")}\n        </ImportButton>\n      )}\n    </Container>\n  );\n};\n\nexport default TokenImportButton;\n","import { useTranslation } from \"react-i18next\";\n\nimport { TokenInfo } from \"@airswap/types\";\n\nimport {\n  InactiveTitle,\n  InactiveTitleContainer,\n  InformationIcon,\n  TokenContainer,\n} from \"../../TokenList.styles\";\nimport TokenImportButton from \"../TokenImportButton/TokenImportButton\";\n\ntype InactiveTokensListProps = {\n  inactiveTokens: TokenInfo[];\n  supportedTokenAddresses: string[];\n  onTokenClick: (tokenAddress: string) => void;\n};\n\nconst InactiveTokensList = ({\n  supportedTokenAddresses,\n  inactiveTokens,\n  onTokenClick,\n}: InactiveTokensListProps) => {\n  const { t } = useTranslation([\"orders\"]);\n\n  return (\n    <>\n      <InactiveTitleContainer>\n        <InactiveTitle>\n          {t(\"orders:expandedResults\")}\n          <InformationIcon name=\"information-circle-outline\" />\n        </InactiveTitle>\n      </InactiveTitleContainer>\n      <TokenContainer>\n        {inactiveTokens.map((token) => (\n          <TokenImportButton\n            token={token}\n            isUnsupported={\n              supportedTokenAddresses.length !== 0 &&\n              !supportedTokenAddresses.includes(token.address)\n            }\n            onClick={() => onTokenClick(token.address)}\n            key={`${token.address}`}\n          />\n        ))}\n      </TokenContainer>\n    </>\n  );\n};\n\nexport default InactiveTokensList;\n","const stringToSignificantDecimals: (\n  input: string,\n  sigDecimals?: number\n) => string = (input, sigDecimals = 6) => {\n  // Don't do anything if there's no decimal point.\n  if (input.indexOf(\".\") === -1) {\n    return input;\n  }\n\n  const [beforeDecimalPoint, afterDecimalPoint] = input.split(\".\");\n  let trimmedDecimals = \"\";\n  if (afterDecimalPoint.length <= sigDecimals) {\n    // No need to trim\n    trimmedDecimals = afterDecimalPoint;\n  } else if (beforeDecimalPoint.match(/[1-9]/)) {\n    // Number greater than zero, all decimal places significant:\n    // just trim decimals to correct length\n    trimmedDecimals = afterDecimalPoint.slice(0, 4);\n  } else {\n    // Number less than zero, some decimal places may not be significant\n    let sigDecimalsRemaining = sigDecimals;\n    let i = 0;\n    let inLeadingZeroes = true;\n    while (sigDecimalsRemaining > 0 && i < afterDecimalPoint.length - 1) {\n      const currentDigit = afterDecimalPoint[i];\n      trimmedDecimals += currentDigit;\n      if (!inLeadingZeroes || currentDigit !== \"0\") {\n        inLeadingZeroes = false;\n        sigDecimalsRemaining--;\n      }\n      i++;\n    }\n  }\n\n  return `${beforeDecimalPoint}.${trimmedDecimals}`;\n};\nexport default stringToSignificantDecimals;\n","import styled, { keyframes } from \"styled-components/macro\";\n\nimport { BorderlessButtonStyle } from \"../../../../style/mixins\";\nimport { fontMono } from \"../../../../style/themes\";\nimport Icon from \"../../../Icon/Icon\";\n\ntype ContainerProps = {\n  disabled: boolean;\n  showDeleteButton: boolean;\n};\n\nexport const TokenNameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  position: relative;\n`;\n\nexport const TokenName = styled.h3`\n  width: 100%;\n  text-align: left;\n  line-height: 1;\n  font-size: 1rem;\n  font-weight: 400;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: ${(props) => props.theme.colors.lightGrey};\n`;\n\nconst scaleInAnimation = keyframes`\n  from {\n    transform: scale(0);\n  }\n\n  to {\n    transform: scale(1);\n  }\n`;\n\nexport const DeleteIcon = styled(Icon)`\n  margin-left: auto;\n  padding: 0.25rem;\n  color: ${(props) => props.theme.colors.lightGrey};\n\n  transform: scale(0);\n  animation: ${scaleInAnimation} 0.25s ease-out forwards;\n\n  @media (prefers-reduced-motion: reduce) {\n    transform: scale(1);\n    animation: none;\n  }\n`;\n\nexport const Container = styled.button<ContainerProps>`\n  position: relative;\n  width: 100%;\n  padding: 0.5rem 0;\n  display: grid;\n  grid-auto-flow: column;\n  cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\n  grid-template-columns: ${(props) =>\n    props.showDeleteButton\n      ? \"1.25rem 4rem calc(100% - 11.5rem) 3.25rem\"\n      : \"1.25rem 4rem calc(50% - 4rem) calc(50% - 4.5rem)\"};\n  grid-gap: 1rem;\n  align-items: center;\n  opacity: ${(props) => (props.disabled ? 0.6 : 1)};\n\n  &:hover {\n    ${TokenName} {\n      color: ${(props) =>\n        props.disabled\n          ? props.theme.colors.lightGrey\n          : props.theme.colors.white};\n    }\n\n    ${DeleteIcon} {\n      color: ${(props) =>\n        props.disabled\n          ? props.theme.colors.lightGrey\n          : props.theme.colors.white};\n    }\n  }\n\n  ${BorderlessButtonStyle}\n`;\n\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const Symbol = styled.h3`\n  text-align: left;\n  font-size: 1.125rem;\n  font-weight: 700;\n  line-height: calc(1 + (1 / 3));\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const Balance = styled.div`\n  font-family: ${fontMono};\n  font-weight: 500;\n  text-align: right;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n","import { TokenInfo } from \"@airswap/types\";\n\nimport stringToSignificantDecimals from \"../../../../helpers/stringToSignificantDecimals\";\nimport TokenLogo from \"../../../TokenLogo/TokenLogo\";\nimport {\n  Container,\n  Symbol,\n  TokenName,\n  Balance,\n  DeleteIcon,\n} from \"./TokenButton.styles\";\n\nexport type TokenRowProps = {\n  /**\n   * TokenInfo object\n   */\n  token: TokenInfo;\n  /**\n   * Balance of current token\n   */\n  balance: string;\n  /**\n   * onClick event, either setSignerToken or setSenderToken\n   */\n  setToken: (val: string) => void;\n  /**\n   * Whether to disable selection of this token (e.g. if already selected)\n   */\n  disabled?: boolean;\n  /**\n   * Removes token from the active tokens list.\n   */\n  removeActiveToken: (tokenAddress: string) => void;\n  /**\n   * Show delete button\n   */\n  showDeleteButton?: boolean;\n};\n\nconst TokenButton = ({\n  token,\n  balance,\n  setToken,\n  removeActiveToken,\n  disabled = false,\n  showDeleteButton = false,\n}: TokenRowProps) => {\n  const onClickHandler = () => {\n    if (disabled) {\n      return;\n    }\n\n    if (!showDeleteButton) {\n      setToken(token.address);\n    } else {\n      removeActiveToken(token.address);\n    }\n  };\n\n  return (\n    <Container\n      onClick={onClickHandler}\n      disabled={disabled}\n      showDeleteButton={showDeleteButton}\n    >\n      <TokenLogo tokenInfo={token} size=\"small\" />\n\n      <Symbol>{token.symbol}</Symbol>\n\n      <TokenName>{token.name}</TokenName>\n\n      {showDeleteButton ? (\n        <DeleteIcon name=\"deny\" />\n      ) : (\n        <Balance>{stringToSignificantDecimals(balance)}</Balance>\n      )}\n    </Container>\n  );\n};\n\nexport default TokenButton;\n","import { useState, useMemo, useRef, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { TokenInfo } from \"@airswap/types\";\nimport { formatUnits } from \"@ethersproject/units\";\n\nimport nativeETH from \"../../constants/nativeETH\";\nimport { BalancesState } from \"../../features/balances/balancesSlice\";\nimport useWindowSize from \"../../helpers/useWindowSize\";\nimport { OverlayActionButton } from \"../Overlay/Overlay.styles\";\nimport { InfoHeading } from \"../Typography/Typography\";\nimport {\n  Container,\n  SearchInput,\n  TokenContainer,\n  Legend,\n  LegendItem,\n  LegendDivider,\n  StyledScrollContainer,\n  ContentContainer,\n  NoResultsContainer,\n} from \"./TokenList.styles\";\nimport { filterTokens } from \"./filter\";\nimport { sortTokenByExactMatch, sortTokensBySymbolAndBalance } from \"./sort\";\nimport InactiveTokensList from \"./subcomponents/InactiveTokensList/InactiveTokensList\";\nimport TokenButton from \"./subcomponents/TokenButton/TokenButton\";\n\nexport type TokenListProps = {\n  /**\n   * ID of currently connected chain\n   */\n  chainId: number;\n  /**\n   * Called when a token has been seleced.\n   */\n  onSelectToken: (val: string) => void;\n  /**\n   * Balances for current tokens in wallet\n   */\n  balances: BalancesState;\n  /**\n   * all Token addresses in metadata.\n   */\n  allTokens: TokenInfo[];\n  /**\n   * All active tokens.\n   */\n  activeTokens: TokenInfo[];\n  /**\n   * Supported tokens according to registry\n   */\n  supportedTokenAddresses: string[];\n  /**\n   * function to handle adding active tokens (dispatches addActiveToken).\n   */\n  addActiveToken: (val: string) => void;\n  /**\n   * function to handle removing active tokens (dispatches removeActiveToken).\n   */\n  removeActiveToken: (val: string) => void;\n};\n\nconst TokenList = ({\n  chainId,\n  onSelectToken,\n  balances,\n  allTokens,\n  activeTokens = [],\n  supportedTokenAddresses,\n  addActiveToken,\n  removeActiveToken,\n}: TokenListProps) => {\n  const { width, height } = useWindowSize();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [overflow, setOverflow] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n\n  const [tokenQuery, setTokenQuery] = useState<string>(\"\");\n  const { t } = useTranslation([\n    \"common\",\n    \"wallet\",\n    \"orders\",\n    \"balances\",\n    \"orders\",\n  ]);\n\n  // sort tokens based on symbol\n  const sortedTokens: TokenInfo[] = useMemo(() => {\n    return sortTokensBySymbolAndBalance(activeTokens, balances);\n  }, [activeTokens, balances]);\n\n  // filter token\n  const filteredTokens: TokenInfo[] = useMemo(() => {\n    return filterTokens(Object.values(sortedTokens), tokenQuery);\n  }, [sortedTokens, tokenQuery]);\n\n  const sortedFilteredTokens: TokenInfo[] = useMemo(() => {\n    return sortTokenByExactMatch(filteredTokens, tokenQuery);\n  }, [filteredTokens, tokenQuery]);\n\n  // sort inactive tokens based on symbol\n  const sortedInactiveTokens: TokenInfo[] = useMemo(() => {\n    return sortTokenByExactMatch(\n      allTokens.filter((el) => {\n        return !activeTokens.includes(el);\n      }),\n      tokenQuery\n    );\n  }, [allTokens, activeTokens, tokenQuery]);\n\n  // only take the top 10 tokens\n  const inactiveTokens: TokenInfo[] = useMemo(() => {\n    return filterTokens(Object.values(sortedInactiveTokens), tokenQuery!).slice(\n      0,\n      10\n    );\n  }, [sortedInactiveTokens, tokenQuery]);\n\n  useEffect(() => {\n    if (\n      containerRef.current &&\n      scrollContainerRef.current &&\n      buttonRef.current\n    ) {\n      const { offsetTop, scrollHeight } = scrollContainerRef.current;\n      const { scrollHeight: buttonHeight } = buttonRef.current;\n      setOverflow(\n        scrollHeight + offsetTop + buttonHeight >\n          containerRef.current.offsetHeight\n      );\n    }\n  }, [\n    containerRef,\n    scrollContainerRef,\n    activeTokens,\n    sortedTokens,\n    allTokens,\n    tokenQuery,\n    width,\n    height,\n  ]);\n\n  return (\n    <Container ref={containerRef}>\n      <ContentContainer>\n        <SearchInput\n          hideLabel\n          id=\"tokenQuery\"\n          type=\"text\"\n          label={t(\"orders:searchByNameOrAddress\")}\n          value={tokenQuery}\n          placeholder={t(\"orders:searchByNameOrAddress\")}\n          onChange={(e) => {\n            setTokenQuery(e.currentTarget.value);\n          }}\n        />\n\n        <StyledScrollContainer ref={scrollContainerRef} $overflow={overflow}>\n          <Legend>\n            <LegendItem>{t(\"common:token\")}</LegendItem>\n            <LegendDivider />\n            <LegendItem>{t(\"balances:balance\")}</LegendItem>\n          </Legend>\n\n          {sortedFilteredTokens && sortedFilteredTokens.length > 0 && (\n            <TokenContainer>\n              {[nativeETH[chainId], ...sortedFilteredTokens].map((token) => (\n                <TokenButton\n                  showDeleteButton={\n                    editMode && token.address !== nativeETH[chainId].address\n                  }\n                  token={token}\n                  balance={formatUnits(\n                    balances.values[token.address] || 0,\n                    token.decimals\n                  )}\n                  setToken={onSelectToken}\n                  removeActiveToken={removeActiveToken}\n                  key={token.address}\n                />\n              ))}\n            </TokenContainer>\n          )}\n          {inactiveTokens.length !== 0 &&\n            tokenQuery &&\n            sortedFilteredTokens.length < 5 && (\n              <InactiveTokensList\n                inactiveTokens={inactiveTokens}\n                supportedTokenAddresses={supportedTokenAddresses}\n                onTokenClick={(tokenAddress) => {\n                  addActiveToken(tokenAddress);\n                  setTokenQuery(\"\");\n                }}\n              />\n            )}\n          {sortedFilteredTokens.length === 0 && inactiveTokens.length === 0 && (\n            <NoResultsContainer>\n              <InfoHeading>{t(\"common:noResultsFound\")}</InfoHeading>\n            </NoResultsContainer>\n          )}\n        </StyledScrollContainer>\n        <OverlayActionButton\n          ref={buttonRef}\n          onClick={() => setEditMode(!editMode)}\n        >\n          {editMode ? t(\"common:done\") : t(\"orders:editCustomTokens\")}\n        </OverlayActionButton>\n      </ContentContainer>\n    </Container>\n  );\n};\n\nexport default TokenList;\n","import styled from \"styled-components/macro\";\n\nimport { BorderlessButtonStyle } from \"../../style/mixins\";\nimport IconButton from \"../IconButton/IconButton\";\nimport { InfoHeading, InfoSubHeading } from \"../Typography/Typography\";\nimport { StyledParagraph } from \"../Typography/Typography.styles\";\n\nexport const StyledInfoHeading = styled(InfoHeading)`\n  display: flex;\n  align-items: center;\n`;\n\nexport const FeeTextContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const FeeText = styled(StyledParagraph)`\n  color: ${(props) => props.theme.colors.lightGrey};\n`;\n\nexport const ApprovalText = styled(InfoSubHeading)`\n  font-size: 1rem;\n`;\n\nexport const InfoButton = styled(IconButton)`\n  display: inline-block;\n  padding: 0.25rem;\n  color: ${(props) => props.theme.colors.lightGrey};\n\n  &:hover,\n  &:focus {\n    color: ${(props) => props.theme.colors.white};\n  }\n`;\n\nexport const RevertPriceButton = styled(IconButton)`\n  transform: rotate(90deg);\n  position: relative;\n  margin-left: 0.25rem;\n  padding: 0.25rem;\n  font-size: 1rem;\n  color: ${(props) => props.theme.colors.lightGrey};\n\n  &:hover,\n  &:focus {\n    color: ${(props) => props.theme.colors.white};\n  }\n\n  ${BorderlessButtonStyle}\n`;\n","import { FC, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { TokenInfo } from \"@airswap/types\";\nimport { Levels } from \"@airswap/types\";\nimport { LightOrder } from \"@airswap/types\";\n\nimport { BigNumber } from \"bignumber.js\";\n\nimport stringToSignificantDecimals from \"../../helpers/stringToSignificantDecimals\";\nimport { InfoHeading, InfoSubHeading } from \"../Typography/Typography\";\nimport {\n  StyledInfoHeading,\n  RevertPriceButton,\n  FeeText,\n  InfoButton,\n  FeeTextContainer,\n  ApprovalText,\n} from \"./InfoSection.styles\";\n\nexport type InfoSectionProps = {\n  isConnected: boolean;\n  isPairUnavailable: boolean;\n  orderSubmitted: boolean;\n  isFetchingOrders: boolean;\n  isApproving: boolean;\n  isSwapping: boolean;\n  bestTradeOption:\n    | {\n        protocol: \"last-look\";\n        quoteAmount: string;\n        pricing: Levels;\n      }\n    | {\n        protocol: \"request-for-quote\";\n        quoteAmount: string;\n        order: LightOrder;\n      }\n    | null;\n  isWrapping: boolean;\n  requiresApproval: boolean;\n  quoteTokenInfo: TokenInfo | null;\n  baseTokenInfo: TokenInfo | null;\n  baseAmount: string;\n  onFeeButtonClick: () => void;\n};\n\nconst InfoSection: FC<InfoSectionProps> = ({\n  isConnected,\n  isPairUnavailable,\n  orderSubmitted,\n  isApproving,\n  isSwapping,\n  bestTradeOption,\n  isWrapping,\n  isFetchingOrders,\n  requiresApproval,\n  baseTokenInfo,\n  baseAmount,\n  quoteTokenInfo,\n  onFeeButtonClick,\n}) => {\n  const { t } = useTranslation([\"orders\", \"marketing\"]);\n  const [invertPrice, setInvertPrice] = useState<boolean>(false);\n  // Wallet not connected.\n  if (!isConnected) {\n    return (\n      <>\n        <InfoHeading>{t(\"marketing:useAtOwnRisk\")}</InfoHeading>\n        <InfoSubHeading>{t(\"marketing:alphaPreview\")}</InfoSubHeading>\n      </>\n    );\n  }\n\n  if (isFetchingOrders) {\n    return (\n      <>\n        <InfoHeading>{t(\"orders:findingBestPrice\")}</InfoHeading>\n        <InfoSubHeading>{t(\"orders:scanningPeers\")}</InfoSubHeading>\n      </>\n    );\n  }\n\n  if (isPairUnavailable) {\n    return (\n      <>\n        <InfoHeading>{t(\"orders:tokenPairUnavailable\")}</InfoHeading>\n        <InfoSubHeading>{t(\"orders:retryOrCancel\")}</InfoSubHeading>\n      </>\n    );\n  }\n\n  if (orderSubmitted) {\n    return (\n      <>\n        <InfoHeading>{t(\"orders:submitted\")}</InfoHeading>\n        <InfoSubHeading>{t(\"orders:trackTransaction\")}</InfoSubHeading>\n      </>\n    );\n  }\n\n  if (isApproving) {\n    return (\n      <>\n        <InfoHeading>\n          {t(\"orders:approvePending\", { symbol: baseTokenInfo!.symbol })}\n        </InfoHeading>\n        <InfoSubHeading>{t(\"orders:approveMessage\")}</InfoSubHeading>\n      </>\n    );\n  }\n\n  if (isSwapping) {\n    return (\n      <>\n        <InfoHeading>{t(\"orders:swapPending\")}</InfoHeading>\n        <InfoSubHeading>{t(\"orders:swapMessage\")}</InfoSubHeading>\n      </>\n    );\n  }\n\n  if (isWrapping) {\n    return (\n      <>\n        <InfoHeading>\n          1 {invertPrice ? quoteTokenInfo!.symbol : baseTokenInfo!.symbol} = 1{\" \"}\n          {invertPrice ? baseTokenInfo!.symbol : quoteTokenInfo!.symbol}\n        </InfoHeading>\n        <InfoSubHeading>{t(\"orders:wrapMessage\")}</InfoSubHeading>\n      </>\n    );\n  }\n\n  if (!!bestTradeOption) {\n    let price = new BigNumber(bestTradeOption.quoteAmount).dividedBy(\n      baseAmount\n    );\n\n    if (invertPrice) {\n      price = new BigNumber(1).dividedBy(price);\n    }\n\n    return (\n      <>\n        <>\n          <StyledInfoHeading>\n            1 {invertPrice ? quoteTokenInfo!.symbol : baseTokenInfo!.symbol} ={\" \"}\n            {stringToSignificantDecimals(price.toString())}{\" \"}\n            {invertPrice ? baseTokenInfo!.symbol : quoteTokenInfo!.symbol}\n            <RevertPriceButton\n              icon=\"swap\"\n              iconSize={1}\n              onClick={() => setInvertPrice((p) => !p)}\n            />\n          </StyledInfoHeading>\n          <FeeTextContainer>\n            <FeeText>{t(\"marketing:includesFee\")}</FeeText>\n            <InfoButton\n              onClick={onFeeButtonClick}\n              icon=\"information-circle-outline\"\n            />\n          </FeeTextContainer>\n        </>\n        {requiresApproval && (\n          <ApprovalText>\n            {t(\"orders:approvalRequired\", { symbol: baseTokenInfo!.symbol })}\n          </ApprovalText>\n        )}\n      </>\n    );\n  }\n\n  // No order & not fetching, but wallet connected.\n  return (\n    <>\n      <InfoHeading>{t(\"marketing:useAtOwnRisk\")}</InfoHeading>\n      <InfoSubHeading>{t(\"marketing:alphaPreview\")}</InfoSubHeading>\n    </>\n  );\n};\n\nexport default InfoSection;\n","import { AbstractConnector } from \"@web3-react/abstract-connector\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\n\nimport metamaskLogo from \"../assets/wallet-provider-logos/metamask.svg\";\nimport walletconnectLogo from \"../assets/wallet-provider-logos/walletconnect.svg\";\n\nexport type WalletProvider = {\n  name: string;\n  logo: string;\n  getConnector: () => AbstractConnector;\n};\n\nconst SUPPORTED_WALLET_PROVIDERS: WalletProvider[] = [\n  {\n    name: \"MetaMask\",\n    logo: metamaskLogo,\n    getConnector: () =>\n      new InjectedConnector({\n        supportedChainIds: [\n          1, // Mainet\n          4, // Rinkeby\n        ],\n      }),\n  },\n  {\n    name: \"WalletConnect\",\n    logo: walletconnectLogo,\n    getConnector: () =>\n      new WalletConnectConnector({\n        rpc: {\n          1: process.env.REACT_APP_RPC_URL_1 || \"\",\n          4: process.env.REACT_APP_RPC_URL_4 || \"\",\n        },\n      }),\n  },\n];\n\nexport default SUPPORTED_WALLET_PROVIDERS;\n\nexport { AbstractConnector };\n","export default __webpack_public_path__ + \"static/media/metamask.45038d58.svg\";","export default __webpack_public_path__ + \"static/media/walletconnect.dfa25e47.svg\";","import styled from \"styled-components/macro\";\n\nimport { sizes } from \"../../style/sizes\";\n\nexport const StyledWalletProviderList = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 ${sizes.tradeContainerPadding};\n  background: ${(props) => props.theme.colors.black};\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-bottom: 1.875rem;\n`;\n\nexport const StyledButton = styled.button`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: relative;\n  border: 1px solid ${(props) => props.theme.colors.borderGrey};\n  padding: 1rem;\n  height: 4.5rem;\n  background: ${(props) => props.theme.colors.darkGrey};\n\n  &:hover,\n  &:focus {\n    outline: 0;\n    border-color: ${(props) => props.theme.colors.lightGrey};\n  }\n\n  & + & {\n    margin-top: 0.5rem;\n  }\n`;\n\nexport const ButtonIconContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  position: relative;\n  width: 3rem;\n  height: 100%;\n`;\n\nexport const ButtonIcon = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nexport const ButtonText = styled.h4`\n  margin-left: 1rem;\n  width: 100%;\n  height: auto;\n  font-weight: 600;\n  text-align: left;\n`;\n","import SUPPORTED_WALLET_PROVIDERS, {\n  WalletProvider,\n} from \"../../constants/supportedWalletProviders\";\nimport {\n  StyledButton,\n  ButtonIconContainer,\n  StyledWalletProviderList,\n  ButtonIcon,\n  ButtonText,\n} from \"./WalletProviderList.styles\";\n\nexport type WalletProviderListProps = {\n  onProviderSelected: (provider: WalletProvider) => void;\n  onClose: () => void;\n  className?: string;\n};\n\nconst WalletProviderList = ({\n  onProviderSelected,\n  onClose,\n  className,\n}: WalletProviderListProps) => {\n  return (\n    <StyledWalletProviderList className={className}>\n      {SUPPORTED_WALLET_PROVIDERS.map((provider) => (\n        <StyledButton\n          key={provider.name}\n          onClick={() => {\n            onProviderSelected(provider);\n            onClose();\n          }}\n        >\n          <ButtonIconContainer>\n            <ButtonIcon\n              src={provider.logo}\n              alt={`${provider.name} logo`}\n              className=\"w-12 h-12\"\n            />\n          </ButtonIconContainer>\n          <ButtonText>{provider.name}</ButtonText>\n        </StyledButton>\n      ))}\n    </StyledWalletProviderList>\n  );\n};\n\nexport default WalletProviderList;\n","import { MdDoneAll } from \"react-icons/md\";\n\nimport styled from \"styled-components/macro\";\n\nimport WalletProviderList from \"../WalletProviderList/WalletProviderList\";\n\nexport const Header = styled.div`\n  display: flex;\n  margin-bottom: 2rem;\n  width: 100%;\n`;\n\nexport const InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex-grow: 2;\n  margin-bottom: 0.5rem;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  margin-top: auto;\n  justify-self: flex-end;\n  gap: 1.25rem;\n`;\n\nexport const HugeTicks = styled(MdDoneAll)`\n  font-size: 8rem;\n  margin: 1rem auto -4rem auto;\n`;\n\nexport const StyledSwapWidget = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nexport const StyledWalletProviderList = styled(WalletProviderList)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nexport default StyledSwapWidget;\n","import styled from \"styled-components/macro\";\n\nimport Button from \"../../../Button/Button\";\n\nexport const BackButton = styled(Button)`\n  flex: 1 0 0;\n`;\nexport const MainButton = styled(Button)`\n  flex: 2.33333333 0 0;\n`;\n","import { MdKeyboardArrowDown } from \"react-icons/md\";\n\nimport styled, { css, keyframes } from \"styled-components/macro\";\n\nimport { BorderlessButtonStyle } from \"../../style/mixins\";\nimport TokenLogo from \"../TokenLogo/TokenLogo\";\nimport {\n  SelectItem,\n  FormLabel,\n  FormInput,\n  Metadata,\n} from \"../Typography/Typography\";\n\nconst fadeInOut = keyframes`\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n  }\n`;\n\nconst quoteTransition = css`\n  transition: transform 0.25s cubic-bezier(0.57, 0.01, 0.3, 1);\n  will-change: transform;\n\n  @media (prefers-reduced-motion: reduce) {\n    transition: none;\n  }\n`;\n\nconst fontTransition = css`\n  transition: font-size 0.25s ease-in-out;\n  will-change: font-size;\n\n  @media (prefers-reduced-motion: reduce) {\n    transition: none;\n  }\n`;\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 2.5rem;\n`;\n\nexport const AmountAndDetailsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  min-width: 0;\n  text-align: right;\n`;\n\nexport const InputAndMaxButtonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  min-width: 0;\n  gap: 0.75rem;\n`;\n\nexport const MaxButton = styled.button`\n  position: relative;\n  bottom: 1px;\n  letter-spacing: 0.07rem;\n  align-self: center;\n  padding: 0.125rem;\n  border-radius: 0.125rem;\n  font-weight: 600;\n  font-size: 0.5rem;\n  line-height: 1;\n  text-transform: uppercase;\n  background-color: ${(props) => props.theme.colors.lightGrey};\n  color: ${(props) => props.theme.colors.black};\n  opacity: 0.6;\n\n  ${BorderlessButtonStyle}\n\n  &:hover,\n  &:focus {\n    background-color: ${(props) => props.theme.colors.white};\n    opacity: 1;\n  }\n`;\n\nexport const AmountInput = styled(FormInput)<{\n  hasSubtext: boolean;\n  disabled: boolean;\n}>`\n  ${quoteTransition};\n\n  padding-right: 0;\n  margin-top: ${(props) => (props.hasSubtext ? \"-0.75rem\" : 0)};\n  pointer-events: ${(props) => (props.disabled ? \"none\" : \"inherit\")};\n  text-align: right;\n\n  &:focus {\n    outline: 0;\n  }\n`;\n\nexport const PlaceHolderBar = styled.div`\n  width: 100%;\n  height: 1.5rem;\n  background-image: ${(props) => props.theme.colors.placeholderGradient};\n  animation: ${fadeInOut} 0.35s ease-in-out infinite alternate;\n`;\n\nexport const TokenLogoLeft = styled(TokenLogo)`\n  ${quoteTransition};\n`;\n\nexport const TokenLogoRight = styled(TokenLogo)`\n  ${quoteTransition};\n  height: 2rem;\n  width: 2rem;\n  min-width: 2rem;\n`;\n\nexport const StyledSelectButton = styled.button`\n  ${quoteTransition};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-top: -0.125rem;\n  margin-left: 0.9375rem;\n  height: 100%;\n  cursor: ${(props) => (props.disabled ? \"initial\" : \"pointer\")};\n  pointer-events: ${(props) => (props.disabled ? \"none\" : \"inherit\")};\n\n  &:focus {\n    outline: 0;\n  }\n`;\n\nexport const StyledSelectItem = styled(SelectItem)`\n  ${fontTransition};\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  line-height: 1;\n  gap: 0.375rem;\n`;\n\nexport const StyledLabel = styled(FormLabel)`\n  ${fontTransition};\n  text-align: left;\n  text-transform: uppercase;\n`;\n\nexport const TokenSelectContainer = styled.div<{\n  $isLoading: boolean;\n  $isQuote: boolean;\n}>`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n  width: 100%;\n  height: 4.5rem;\n  padding: 1rem;\n  margin-bottom: 0.5rem;\n  border: 1px solid ${(props) => props.theme.colors.borderGrey};\n  border-radius: 2px;\n  background-color: ${(props) =>\n    props.theme.name === \"dark\"\n      ? props.theme.colors.darkGrey\n      : props.theme.colors.alwaysWhite};\n  overflow: hidden;\n\n  ${PlaceHolderBar} {\n    display: ${(props) => (props.$isLoading ? \"block\" : \"none\")};\n  }\n\n  ${TokenLogoLeft} {\n    transform: ${(props) =>\n      props.$isQuote ? \"translateX(-3.6rem)\" : \"translateX(0)\"};\n  }\n  \n  ${StyledSelectButton} {\n    transform: ${(props) =>\n      props.$isQuote ? \"translateX(-3.4rem)\" : \"translateX(0)\"};\n  }\n  \n  ${AmountInput} {\n    transform: ${(props) =>\n      props.$isQuote ? \"translateX(0)\" : \"translateX(2.75rem)\"};\n  }\n  \n  ${MaxButton} {\n    transform: ${(props) =>\n      props.$isQuote ? \"translateX(0)\" : \"translateX(2.75rem)\"};\n  }\n\n  ${TokenLogoRight} {\n    transform: ${(props) =>\n      props.$isQuote ? \"translateX(0)\" : \"translateX(3rem)\"};\n  }\n  \n  ${StyledLabel} {\n    font-size: ${(props) => (props.$isQuote ? \"0.625rem\" : \"0.75rem\")};\n  }\n  \n  ${StyledSelectItem} {\n    font-size: ${(props) => (props.$isQuote ? \"0.875rem\" : \"1.125rem\")};\n  }\n}\n`;\n\nconst fadeOutWhenInvisible = css<{ $invisible: boolean }>`\n  transition: opacity ease-in-out 0.3s;\n  will-change: opacity;\n  opacity: ${(props) => (props.$invisible ? 0 : 1)};\n`;\n\nexport const StyledSelectButtonContent = styled.span``;\n\nexport const StyledDownArrow = styled(MdKeyboardArrowDown)<{\n  $invisible: boolean;\n}>`\n  ${fadeOutWhenInvisible}\n`;\n\nexport const AmountSubtext = styled(Metadata)`\n  margin-top: -0.25rem;\n`;\n\nexport const PlaceholderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 50%;\n`;\n","import styled, { createGlobalStyle } from \"styled-components/macro\";\n\nimport convertHexToRGBA from \"../../../../helpers/transformHexToRgba\";\n\ntype BorderType = {\n  position: \"left\" | \"right\";\n};\n\nconst Border = styled.div<BorderType>`\n  transition: opacity ease-out 0.3s;\n  display: block;\n  position: absolute;\n  background: ${(props) => props.theme.colors.primary};\n  background: linear-gradient(\n    90deg,\n    ${(props) => convertHexToRGBA(props.theme.colors.primary, 0)} 0%,\n    ${(props) => convertHexToRGBA(props.theme.colors.primary, 1)} 100%\n  );\n  opacity: 0;\n`;\n\nexport const BorderRight = styled(Border)`\n  top: 0;\n  right: ${(props) => (props.position === \"right\" ? 0 : \"auto\")};\n  left: ${(props) => (props.position === \"left\" ? 0 : \"auto\")};\n  width: 1px;\n  height: 100%;\n  background: ${(props) => props.theme.colors.primary};\n`;\n\nexport const BorderTop = styled(Border)`\n  transform: ${(props) =>\n    props.position === \"left\" ? \"scaleX(-100%)\" : \"none\"};\n  top: 0;\n  right: ${(props) => (props.position === \"right\" ? 0 : \"auto\")};\n  left: ${(props) => (props.position === \"left\" ? 0 : \"auto\")};\n  width: 50%;\n  height: 1px;\n`;\n\nexport const BorderBottom = styled(Border)`\n  transform: ${(props) =>\n    props.position === \"left\" ? \"scaleX(-100%)\" : \"none\"};\n  bottom: 0;\n  right: ${(props) => (props.position === \"right\" ? 0 : \"auto\")};\n  left: ${(props) => (props.position === \"left\" ? 0 : \"auto\")};\n  width: 50%;\n  height: 1px;\n  background: linear-gradient(\n    90deg,\n    ${(props) => convertHexToRGBA(props.theme.colors.primary, 0)} 0%,\n    ${(props) => convertHexToRGBA(props.theme.colors.primary, 1)} 100%\n  );\n`;\n\nexport const GlobalStyle = createGlobalStyle`\n  input, button {\n    &:focus, &:hover {\n      & ~ ${Border} {\n        opacity: 1;\n      }\n    }\n  }\n`;\n","import { FC } from \"react\";\n\nimport {\n  GlobalStyle,\n  BorderBottom,\n  BorderRight,\n  BorderTop,\n} from \"./TokenSelectFocusBorder.styles\";\n\ntype TokenSelectFocusBorderProps = {\n  position?: \"left\" | \"right\";\n};\n\nconst TokenSelectFocusBorder: FC<TokenSelectFocusBorderProps> = ({\n  position = \"right\",\n}) => {\n  return (\n    <>\n      <GlobalStyle />\n      <BorderRight position={position} />\n      <BorderTop position={position} />\n      <BorderBottom position={position} />\n    </>\n  );\n};\n\nexport default TokenSelectFocusBorder;\n","import { FC, MouseEventHandler, FormEventHandler } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { TokenInfo } from \"@airswap/types\";\n\nimport {\n  AmountInput,\n  AmountAndDetailsContainer,\n  FlexRow,\n  TokenSelectContainer,\n  StyledSelectItem,\n  StyledSelectButton,\n  PlaceHolderBar,\n  PlaceholderContainer,\n  StyledLabel,\n  StyledDownArrow,\n  StyledSelectButtonContent,\n  TokenLogoLeft,\n  TokenLogoRight,\n  MaxButton,\n  InputAndMaxButtonWrapper,\n} from \"./TokenSelect.styles\";\nimport TokenSelectFocusBorder from \"./subcomponents/TokenSelectFocusBorder/TokenSelectFocusBorder\";\n\nexport type TokenSelectProps = {\n  /**\n   * Whether or not the token selector is read only, e.g. when used to display\n   * a quote.\n   */\n  readOnly: boolean;\n  /**\n   * Whether or not to display an amount input with the token select, or to\n   * display a placeholder, e.g. when used to select received token where amount\n   * isn't known yet.\n   */\n  includeAmountInput: boolean;\n  /**\n   * Label - note that this is not shown if the field is readOnly.\n   */\n  label: string;\n  /**\n   * Metadata for currently selected token\n   */\n  selectedToken: TokenInfo | null;\n  /**\n   * Called when the user has clicked on the token dropdown to change token\n   */\n  onChangeTokenClicked: MouseEventHandler<HTMLButtonElement>;\n  /**\n   * Called when user clicks the 'use max' button. Presence of this prop is used\n   * to imply presence of use max button in DOM.\n   */\n  onMaxClicked?: MouseEventHandler<HTMLButtonElement>;\n  /**\n   * Currently selected amount. Not used if `includeAmountInput` is false.\n   */\n  amount?: string | null;\n  /**\n   * Called when the amount is changed. Input change event is passed.\n   */\n  onAmountChange?: FormEventHandler<HTMLInputElement>;\n  /**\n   * Used for showing loading state\n   */\n  isLoading?: boolean;\n  /**\n   * Show max button\n   */\n  showMaxButton?: boolean;\n  /**\n   * Used for showing quote style\n   */\n  isQuote?: boolean;\n};\n\nconst TokenSelect: FC<TokenSelectProps> = ({\n  readOnly,\n  includeAmountInput,\n  label,\n  selectedToken,\n  onChangeTokenClicked,\n  onMaxClicked,\n  amount,\n  onAmountChange,\n  isLoading = false,\n  isQuote = false,\n  showMaxButton = false,\n}) => {\n  const { t } = useTranslation([\"common\"]);\n\n  return (\n    <TokenSelectContainer $isQuote={isQuote} $isLoading={isLoading}>\n      <FlexRow>\n        <TokenLogoLeft size=\"large\" tokenInfo={selectedToken} />\n        <StyledSelectButton onClick={onChangeTokenClicked} disabled={readOnly}>\n          <StyledLabel>{label}</StyledLabel>\n          <StyledSelectItem>\n            <StyledSelectButtonContent>\n              {selectedToken ? selectedToken.symbol : t(\"common:select\")}\n            </StyledSelectButtonContent>\n            <StyledDownArrow $invisible={readOnly} />\n          </StyledSelectItem>\n        </StyledSelectButton>\n        <TokenSelectFocusBorder position=\"left\" />\n      </FlexRow>\n      {includeAmountInput ? (\n        <InputAndMaxButtonWrapper>\n          <AmountAndDetailsContainer>\n            <AmountInput\n              // @ts-ignore\n              inputMode=\"decimal\"\n              tabIndex={readOnly ? -1 : 0}\n              autoComplete=\"off\"\n              pattern=\"^[0-9]*[.,]?[0-9]*$\"\n              minLength={1}\n              maxLength={79}\n              spellCheck={false}\n              value={amount}\n              disabled={readOnly}\n              onChange={onAmountChange}\n              placeholder=\"0.00\"\n            />\n            <TokenSelectFocusBorder position=\"right\" />\n          </AmountAndDetailsContainer>\n          {onMaxClicked && showMaxButton && !readOnly && (\n            <MaxButton onClick={onMaxClicked}>{t(\"common:max\")}</MaxButton>\n          )}\n          <TokenLogoRight size=\"large\" tokenInfo={selectedToken} />\n        </InputAndMaxButtonWrapper>\n      ) : (\n        <PlaceholderContainer>\n          <PlaceHolderBar />\n        </PlaceholderContainer>\n      )}\n    </TokenSelectContainer>\n  );\n};\n\nexport default TokenSelect;\n","import { ReactElement } from \"react\";\n\nimport Icon from \"../../Icon/Icon\";\n\nexport default function getSwapInputIcon(\n  tradeNotAllowed: boolean\n): ReactElement {\n  if (tradeNotAllowed) {\n    return <Icon name=\"forbidden\" iconSize={0.9375} />;\n  }\n\n  return <Icon name=\"arrow-down\" iconSize={0.8125} />;\n}\n","import styled from \"styled-components/macro\";\n\nexport const Container = styled.div<{ $disabled: boolean }>`\n  display: flex;\n  flex-direction: column;\n  opacity: ${(props) => (props.$disabled ? 0.4 : 1)};\n  cursor: ${(props) => (props.$disabled ? \"not-allowed\" : \"inherit\")};\n  will-change: opacity;\n  transition: ease-in-out;\n  transition-duration: 300ms;\n`;\n\nexport const SwapIconContainer = styled.div`\n  position: absolute;\n  right: 14.125rem;\n  top: 9.9375rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 1.5rem;\n  height: 1.5rem;\n  border: 1px solid ${(props) => props.theme.colors.borderGrey};\n  border-radius: 50%;\n  color: ${(props) => props.theme.colors.lightGrey};\n  background-color: ${(props) => props.theme.colors.black};\n  font-size: 1.25rem;\n  z-index: 1;\n`;\n","import { FC, MouseEvent, FormEvent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { TokenInfo } from \"@airswap/types\";\n\nimport stringToSignificantDecimals from \"../../../../helpers/stringToSignificantDecimals\";\nimport TokenSelect from \"../../../TokenSelect/TokenSelect\";\nimport getSwapInputIcon from \"../../helpers/getSwapInputIcon\";\nimport { Container, SwapIconContainer } from \"./SwapInputs.styles\";\n\nconst floatRegExp = new RegExp(\"^([0-9])*[.,]?([0-9])*$\");\n\nconst SwapInputs: FC<{\n  tradeNotAllowed: boolean;\n  baseAmount: string;\n  baseTokenInfo: TokenInfo | null;\n  quoteTokenInfo: TokenInfo | null;\n  quoteAmount: string;\n  side: \"buy\" | \"sell\";\n  disabled: boolean;\n  readOnly: boolean;\n  isRequesting: boolean;\n  onMaxButtonClick: (event: MouseEvent<HTMLButtonElement>) => void;\n  onChangeTokenClick: (baseOrQuote: \"base\" | \"quote\") => void;\n  onBaseAmountChange: (newValue: string) => void;\n  showMaxButton: boolean;\n}> = ({\n  tradeNotAllowed,\n  baseAmount,\n  quoteAmount,\n  side,\n  disabled,\n  readOnly,\n  onMaxButtonClick,\n  onChangeTokenClick,\n  isRequesting,\n  baseTokenInfo,\n  quoteTokenInfo,\n  onBaseAmountChange,\n  showMaxButton = false,\n}) => {\n  let fromAmount: string, toAmount: string;\n  const isSell = side === \"sell\";\n  if (isSell) {\n    fromAmount = baseAmount;\n    toAmount = stringToSignificantDecimals(quoteAmount);\n  } else {\n    fromAmount = stringToSignificantDecimals(quoteAmount);\n    toAmount = baseAmount;\n  }\n\n  const isQuote = !!fromAmount && !!toAmount && readOnly;\n  const { t } = useTranslation([\"orders\"]);\n\n  // Note: it will only be possible for the user to change the base amount.\n  const handleTokenAmountChange = (e: FormEvent<HTMLInputElement>) => {\n    let value = e.currentTarget.value;\n    if (value === \"\" || floatRegExp.test(value)) {\n      if (value[value.length - 1] === \",\")\n        value = value.slice(0, value.length - 1) + \".\";\n      onBaseAmountChange(value);\n    }\n  };\n\n  return (\n    <Container $disabled={disabled}>\n      <TokenSelect\n        label={t(\"orders:from\")}\n        amount={fromAmount}\n        onAmountChange={(e) => handleTokenAmountChange(e)}\n        onChangeTokenClicked={() => {\n          onChangeTokenClick(isSell ? \"base\" : \"quote\");\n        }}\n        onMaxClicked={onMaxButtonClick}\n        readOnly={readOnly}\n        includeAmountInput={isSell || (!!quoteAmount && !isRequesting)}\n        selectedToken={isSell ? baseTokenInfo : quoteTokenInfo}\n        isLoading={!isSell && isRequesting}\n        isQuote={isQuote}\n        showMaxButton={showMaxButton}\n      />\n      <SwapIconContainer>{getSwapInputIcon(tradeNotAllowed)}</SwapIconContainer>\n      <TokenSelect\n        label={t(\"orders:to\")}\n        amount={toAmount}\n        onAmountChange={(e) => handleTokenAmountChange(e)}\n        onChangeTokenClicked={() => {\n          onChangeTokenClick(!isSell ? \"base\" : \"quote\");\n        }}\n        readOnly={readOnly}\n        includeAmountInput={!isSell || (!!quoteAmount && !isRequesting)}\n        selectedToken={!isSell ? baseTokenInfo : quoteTokenInfo}\n        isLoading={isSell && isRequesting}\n        isQuote={isQuote}\n      />\n    </Container>\n  );\n};\n\nexport default SwapInputs;\n","import { useState, useEffect } from \"react\";\n\nexport type TimerProps = {\n  /**\n   * Expiration time in unix timestamp (s)\n   */\n  expiryTime: number;\n  onTimerComplete?: () => void;\n};\n\nexport const Timer = ({\n  expiryTime = Date.now() / 1000 + 300,\n  onTimerComplete,\n}: TimerProps) => {\n  const [distance, setDistance] = useState<number>(\n    Math.floor(expiryTime - Date.now() / 1000)\n  );\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      const dist: number = Math.floor(expiryTime - Date.now() / 1000);\n\n      if (dist <= 0) {\n        setDistance(0);\n        clearInterval(interval);\n        onTimerComplete && onTimerComplete();\n        return;\n      }\n\n      setDistance(dist);\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [expiryTime, onTimerComplete]);\n\n  return distance !== undefined ? (\n    <span>\n      {Math.floor(distance / 60)}:\n      {Math.floor(distance % 60) < 10\n        ? `0${Math.floor(distance % 60)}`\n        : Math.floor(distance % 60)}\n    </span>\n  ) : null;\n};\n\nexport default Timer;\n","import styled, { css } from \"styled-components/macro\";\n\nimport { InputOrButtonBorderStyle } from \"../../../../style/mixins\";\nimport Icon from \"../../../Icon/Icon\";\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  min-height: 2rem;\n  margin-bottom: 2rem;\n  width: 100%;\n`;\n\nexport const PillStyle = css`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0 1rem;\n  height: 2rem;\n  min-width: 9.5rem;\n  border-radius: 1rem;\n  font-size: 0.75rem;\n  font-weight: 700;\n  text-transform: uppercase;\n`;\n\nexport const Button = styled.button`\n  ${PillStyle}\n  ${InputOrButtonBorderStyle}\n`;\n\nexport const Quote = styled.span`\n  ${PillStyle};\n  border: 1px solid ${(props) => props.theme.colors.borderGrey};\n`;\n\nexport const NewQuoteText = styled.span`\n  margin-right: 0.25rem;\n  color: ${(props) => props.theme.colors.lightGrey};\n`;\n\nexport const StyledIcon = styled(Icon)`\n  margin-right: 0.375rem;\n`;\n","import { FC, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { RFQ_EXPIRY_BUFFER_MS } from \"../../../../constants/configParams\";\nimport { ProtocolType } from \"../../../../features/transactions/transactionsSlice\";\nimport Timer from \"../../../Timer/Timer\";\nimport { Title } from \"../../../Typography/Typography\";\nimport {\n  Button,\n  Container,\n  NewQuoteText,\n  Quote,\n  StyledIcon,\n} from \"./SwapWidgetHeader.styles\";\n\ninterface SwapWidgetHeaderProps {\n  title: string;\n  isQuote: boolean;\n  onGasFreeTradeButtonClick: () => void;\n  protocol?: ProtocolType;\n  expiry?: string;\n}\n\nconst SwapWidgetHeader: FC<SwapWidgetHeaderProps> = ({\n  title,\n  isQuote,\n  onGasFreeTradeButtonClick,\n  protocol,\n  expiry,\n}) => {\n  const { t } = useTranslation([\"orders\"]);\n\n  const expiryTime = useMemo(() => {\n    return expiry ? parseInt(expiry) - RFQ_EXPIRY_BUFFER_MS / 1000 : undefined;\n  }, [expiry]);\n\n  return (\n    <Container>\n      <Title type=\"h2\">{title}</Title>\n\n      {protocol === \"last-look\" && isQuote && (\n        <Button onClick={onGasFreeTradeButtonClick}>\n          <StyledIcon name=\"star\" iconSize={0.875} />\n          {t(\"orders:gasFreeTrade\")}\n        </Button>\n      )}\n\n      {protocol === \"request-for-quote\" && isQuote && (\n        <Quote>\n          <NewQuoteText>{t(\"orders:newQuoteIn\")}</NewQuoteText>\n          {expiryTime && <Timer expiryTime={expiryTime} />}\n        </Quote>\n      )}\n    </Container>\n  );\n};\n\nexport default SwapWidgetHeader;\n","import { useState, useMemo, useEffect, useContext, FC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\n\nimport { wethAddresses } from \"@airswap/constants\";\nimport { Registry, Wrapper } from \"@airswap/libraries\";\nimport { findTokensBySymbol } from \"@airswap/metadata\";\nimport { Pricing } from \"@airswap/types\";\nimport { LightOrder } from \"@airswap/types\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { UnsupportedChainIdError, useWeb3React } from \"@web3-react/core\";\n\nimport { BigNumber } from \"bignumber.js\";\nimport { formatUnits } from \"ethers/lib/utils\";\n\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\nimport {\n  ADDITIONAL_QUOTE_BUFFER,\n  RECEIVE_QUOTE_TIMEOUT_MS,\n} from \"../../constants/configParams\";\nimport nativeETH from \"../../constants/nativeETH\";\nimport { LastLookContext } from \"../../contexts/lastLook/LastLook\";\nimport {\n  requestActiveTokenAllowancesLight,\n  requestActiveTokenAllowancesWrapper,\n  requestActiveTokenBalances,\n} from \"../../features/balances/balancesSlice\";\nimport {\n  selectBalances,\n  selectAllowances,\n} from \"../../features/balances/balancesSlice\";\nimport {\n  selectActiveTokens,\n  selectAllTokenInfo,\n  addActiveToken,\n  removeActiveToken,\n} from \"../../features/metadata/metadataSlice\";\nimport {\n  approve,\n  take,\n  selectBestOrder,\n  selectOrdersStatus,\n  clear,\n  selectBestOption,\n  request,\n  deposit,\n  withdraw,\n} from \"../../features/orders/ordersSlice\";\nimport { selectAllSupportedTokens } from \"../../features/registry/registrySlice\";\nimport {\n  clearTradeTerms,\n  clearTradeTermsQuoteAmount,\n  selectTradeTerms,\n  setTradeTerms,\n  setTradeTermsQuoteAmount,\n} from \"../../features/tradeTerms/tradeTermsSlice\";\nimport {\n  ProtocolType,\n  selectPendingApprovals,\n} from \"../../features/transactions/transactionsSlice\";\nimport { setActiveProvider } from \"../../features/wallet/walletSlice\";\nimport { Validator } from \"../../helpers/Validator\";\nimport findEthOrTokenByAddress from \"../../helpers/findEthOrTokenByAddress\";\nimport { AppRoutes } from \"../../routes\";\nimport type { Error } from \"../ErrorList/ErrorList\";\nimport { ErrorList } from \"../ErrorList/ErrorList\";\nimport GasFreeSwapsModal from \"../InformationModals/subcomponents/GasFreeSwapsModal/GasFreeSwapsModal\";\nimport ProtocolFeeDiscountModal from \"../InformationModals/subcomponents/ProtocolFeeDiscountModal/ProtocolFeeDiscountModal\";\nimport Overlay from \"../Overlay/Overlay\";\nimport { notifyError } from \"../Toasts/ToastController\";\nimport TokenList from \"../TokenList/TokenList\";\nimport InfoSection from \"./InfoSection\";\nimport StyledSwapWidget, {\n  InfoContainer,\n  ButtonContainer,\n  HugeTicks,\n  StyledWalletProviderList,\n} from \"./SwapWidget.styles\";\nimport ActionButtons, {\n  ButtonActions,\n} from \"./subcomponents/ActionButtons/ActionButtons\";\nimport SwapInputs from \"./subcomponents/SwapInputs/SwapInputs\";\nimport SwapWidgetHeader from \"./subcomponents/SwapWidgetHeader/SwapWidgetHeader\";\n\ntype TokenSelectModalTypes = \"base\" | \"quote\" | null;\ntype SwapType = \"swap\" | \"swapWithWrap\" | \"wrapOrUnwrap\";\n\nconst initialBaseAmount = \"\";\n\ntype SwapWidgetPropsType = {\n  showWalletList: boolean;\n  setShowWalletList: (x: boolean) => void;\n  onTrackTransactionClicked: () => void;\n};\n\nconst SwapWidget: FC<SwapWidgetPropsType> = ({\n  showWalletList,\n  setShowWalletList,\n  onTrackTransactionClicked,\n}) => {\n  // Redux\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n  const balances = useAppSelector(selectBalances);\n  const allowances = useAppSelector(selectAllowances);\n  const bestRfqOrder = useAppSelector(selectBestOrder);\n  const rfqOrderStatus = useAppSelector(selectOrdersStatus);\n  const bestTradeOption = useAppSelector(selectBestOption);\n  const activeTokens = useAppSelector(selectActiveTokens);\n  const allTokens = useAppSelector(selectAllTokenInfo);\n  const supportedTokens = useAppSelector(selectAllSupportedTokens);\n  const pendingApprovals = useAppSelector(selectPendingApprovals);\n  const tradeTerms = useAppSelector(selectTradeTerms);\n\n  // Contexts\n  const LastLook = useContext(LastLookContext);\n\n  // Input states\n  let { tokenFrom, tokenTo } = useRouteMatch<AppRoutes>().params;\n  const [baseAmount, setBaseAmount] = useState(initialBaseAmount);\n\n  // Modals\n  const [showOrderSubmitted, setShowOrderSubmitted] = useState<boolean>(false);\n  const [\n    showTokenSelectModalFor,\n    setShowTokenSelectModalFor,\n  ] = useState<TokenSelectModalTypes | null>(null);\n  const [showGasFeeInfo, setShowGasFeeInfo] = useState(false);\n  const [protocolFeeDiscountInfo, setProtocolFeeDiscountInfo] = useState(false);\n\n  // Loading states\n  const [isApproving, setIsApproving] = useState(false);\n  const [isSwapping, setIsSwapping] = useState(false);\n  const [isWrapping, setIsWrapping] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [isRequestingQuotes, setIsRequestingQuotes] = useState(false);\n\n  // Error states\n  const [pairUnavailable, setPairUnavailable] = useState(false);\n  const [validatorErrors, setValidatorErrors] = useState<Error[]>([]);\n\n  const { t } = useTranslation([\n    \"orders\",\n    \"common\",\n    \"wallet\",\n    \"balances\",\n    \"toast\",\n    \"validatorErrors\",\n    \"information\",\n  ]);\n\n  const {\n    chainId,\n    account,\n    library,\n    active,\n    activate,\n    error: web3Error,\n  } = useWeb3React<Web3Provider>();\n\n  let defaultBaseTokenAddress: string | null = allTokens.length\n    ? findTokensBySymbol(\"USDT\", allTokens)[0].address\n    : null;\n  let defaultQuoteTokenAddress: string | null = allTokens.length\n    ? findTokensBySymbol(\"WETH\", allTokens)[0].address\n    : null;\n\n  // Use default tokens only if neither are specified in the URL.\n  const baseToken = tokenFrom\n    ? tokenFrom\n    : tokenTo\n    ? null\n    : defaultBaseTokenAddress;\n  const quoteToken = tokenTo\n    ? tokenTo\n    : tokenFrom\n    ? null\n    : defaultQuoteTokenAddress;\n\n  const baseTokenInfo = useMemo(\n    () =>\n      baseToken\n        ? findEthOrTokenByAddress(baseToken, activeTokens, chainId!)\n        : null,\n    [baseToken, activeTokens, chainId]\n  );\n\n  const quoteTokenInfo = useMemo(\n    () =>\n      quoteToken\n        ? findEthOrTokenByAddress(quoteToken, activeTokens, chainId!)\n        : null,\n    [quoteToken, activeTokens, chainId]\n  );\n\n  const maxAmount = useMemo(() => {\n    if (\n      !baseToken ||\n      !balances ||\n      !baseTokenInfo ||\n      !balances.values[baseToken] ||\n      balances.values[baseToken] === \"0\"\n    ) {\n      return null;\n    }\n\n    return formatUnits(\n      balances.values[baseToken] || \"0\",\n      baseTokenInfo.decimals\n    );\n  }, [balances, baseToken, baseTokenInfo]);\n\n  // Reset amount when the chainId changes.\n  useEffect(() => {\n    setBaseAmount(initialBaseAmount);\n    dispatch(clearTradeTerms());\n    dispatch(clear());\n    LastLook.unsubscribeAllServers();\n  }, [chainId, dispatch, LastLook]);\n\n  let swapType: SwapType = \"swap\";\n\n  if (chainId && baseToken && quoteToken) {\n    const eth = nativeETH[chainId].address;\n    const weth = wethAddresses[chainId];\n    if ([weth, eth].includes(baseToken) && [weth, eth].includes(quoteToken)) {\n      swapType = \"wrapOrUnwrap\";\n    } else if ([quoteToken, baseToken].includes(eth)) {\n      swapType = \"swapWithWrap\";\n    }\n  }\n\n  const hasApprovalPending = (tokenId: string | undefined) => {\n    if (tokenId === undefined) return false;\n    return pendingApprovals.some((tx) => tx.tokenAddress === tokenId);\n  };\n\n  const hasSufficientAllowance = (tokenAddress: string | undefined) => {\n    if (tokenAddress === nativeETH[chainId || 1].address) return true;\n    if (!tokenAddress) return false;\n    if (\n      !allowances[swapType === \"swapWithWrap\" ? \"wrapper\" : \"light\"].values[\n        tokenAddress\n      ]\n    )\n      return false;\n    return new BigNumber(\n      allowances[swapType === \"swapWithWrap\" ? \"wrapper\" : \"light\"].values[\n        tokenAddress\n      ]!\n    )\n      .div(10 ** (baseTokenInfo?.decimals || 18))\n      .gte(baseAmount);\n  };\n\n  const handleSetToken = (type: TokenSelectModalTypes, value: string) => {\n    if (type === \"base\") {\n      value === quoteToken\n        ? history.push({ pathname: `/${value}/${baseToken}` })\n        : history.push({ pathname: `/${value}/${quoteToken}` });\n      setBaseAmount(\"\");\n    } else {\n      value === baseToken\n        ? history.push({ pathname: `/${quoteToken}/${value}` })\n        : history.push({ pathname: `/${baseToken}/${value}` });\n    }\n  };\n\n  let insufficientBalance: boolean = false;\n  if (baseAmount && baseToken && Object.keys(balances.values).length) {\n    if (parseFloat(baseAmount) === 0 || baseAmount === \".\") {\n      insufficientBalance = false;\n    } else {\n      const baseDecimals = baseTokenInfo?.decimals;\n      if (baseDecimals) {\n        insufficientBalance = new BigNumber(\n          balances.values[baseToken!] || \"0\"\n        ).lt(new BigNumber(baseAmount).multipliedBy(10 ** baseDecimals));\n      }\n    }\n  }\n\n  const handleAddActiveToken = (address: string) => {\n    if (library) {\n      dispatch(addActiveToken(address));\n      dispatch(requestActiveTokenBalances({ provider: library! }));\n      dispatch(requestActiveTokenAllowancesLight({ provider: library! }));\n      dispatch(requestActiveTokenAllowancesWrapper({ provider: library! }));\n    }\n  };\n\n  const handleRemoveActiveToken = (address: string) => {\n    if (library) {\n      if (address === baseToken) {\n        history.push({ pathname: `/-/${quoteToken || \"-\"}` });\n        setBaseAmount(initialBaseAmount);\n      } else if (address === quoteToken) {\n        history.push({ pathname: `/${baseToken || \"-\"}/-` });\n      }\n      dispatch(removeActiveToken(address));\n      dispatch(requestActiveTokenBalances({ provider: library! }));\n      dispatch(requestActiveTokenAllowancesLight({ provider: library! }));\n      dispatch(requestActiveTokenAllowancesWrapper({ provider: library! }));\n    }\n  };\n\n  const requestQuotes = async () => {\n    if (swapType === \"wrapOrUnwrap\") {\n      // This will re-render with a 1:1 price and a take button.\n      setIsWrapping(true);\n      return;\n    }\n    setIsRequestingQuotes(true);\n\n    const usesWrapper = swapType === \"swapWithWrap\";\n    const weth = wethAddresses[chainId!];\n    const eth = nativeETH[chainId!];\n    const _quoteToken = quoteToken === eth.address ? weth : quoteToken!;\n    const _baseToken = baseToken === eth.address ? weth : baseToken!;\n\n    let rfqServers, lastLookServers;\n    try {\n      try {\n        const servers = await new Registry(\n          chainId,\n          // @ts-ignore provider type mismatch\n          library\n        ).getServers(_quoteToken, _baseToken, {\n          initializeTimeout: 10 * 1000,\n        });\n\n        rfqServers = servers.filter((s) =>\n          s.supportsProtocol(\"request-for-quote\")\n        );\n\n        lastLookServers = servers.filter((s) =>\n          s.supportsProtocol(\"last-look\")\n        );\n      } catch (e) {\n        console.error(\"Error requesting orders:\", e);\n        throw new Error(\"error requesting orders\");\n      }\n\n      let rfqPromise: Promise<LightOrder[]> | null = null,\n        lastLookPromises: Promise<Pricing>[] | null = null;\n\n      if (rfqServers.length) {\n        let rfqDispatchResult = dispatch(\n          request({\n            servers: rfqServers,\n            senderToken: _baseToken,\n            senderAmount: baseAmount,\n            signerToken: _quoteToken,\n            senderTokenDecimals: baseTokenInfo!.decimals,\n            senderWallet: usesWrapper ? Wrapper.getAddress(chainId) : account!,\n          })\n        );\n        rfqPromise = rfqDispatchResult\n          .then((result) => {\n            return unwrapResult(result);\n          })\n          .then((orders) => {\n            if (!orders.length) throw new Error(\"no valid orders\");\n            return orders;\n          });\n      }\n\n      if (lastLookServers.length) {\n        if (usesWrapper) {\n          lastLookServers.forEach((s) => s.disconnect());\n        } else {\n          lastLookPromises = LastLook.subscribeAllServers(lastLookServers, {\n            baseToken: baseToken!,\n            quoteToken: quoteToken!,\n          });\n        }\n      }\n\n      let orderPromises: Promise<LightOrder[] | Pricing>[] = [];\n      if (rfqPromise) orderPromises.push(rfqPromise);\n      if (lastLookPromises) {\n        orderPromises = orderPromises.concat(lastLookPromises);\n      }\n\n      // This promise times out if _no_ orders are received before the timeout\n      // but resolves if _any_ are.\n      const timeoutOnNoOrdersPromise = Promise.race<any>([\n        Promise.any(orderPromises),\n        new Promise((_, reject) =>\n          setTimeout(() => {\n            reject(\"no valid orders\");\n          }, RECEIVE_QUOTE_TIMEOUT_MS)\n        ),\n      ]);\n\n      // This promise resolves either when all orders are received or X seconds\n      // after the first order is received.\n      const waitExtraForAllOrdersPromise = Promise.race<any>([\n        Promise.allSettled(orderPromises),\n        Promise.any(orderPromises).then(\n          () =>\n            new Promise((resolve) =>\n              setTimeout(resolve, ADDITIONAL_QUOTE_BUFFER)\n            )\n        ),\n      ]);\n\n      await Promise.all([\n        waitExtraForAllOrdersPromise,\n        timeoutOnNoOrdersPromise,\n      ]);\n    } catch (e: any) {\n      switch (e.message) {\n        case \"error requesting orders\": {\n          notifyError({\n            heading: t(\"orders:errorRequesting\"),\n            cta: t(\"orders:errorRequestingCta\"),\n          });\n          break;\n        }\n\n        default: {\n          console.error(e);\n          setPairUnavailable(true);\n        }\n      }\n    } finally {\n      setIsRequestingQuotes(false);\n    }\n  };\n\n  const takeBestOption = async () => {\n    try {\n      setIsSwapping(true);\n      // @ts-ignore\n      // TODO: figure out type issues\n      const validator = new Validator(chainId, library?.getSigner());\n      if (bestTradeOption!.protocol === \"request-for-quote\") {\n        if (swapType !== \"swapWithWrap\") {\n          const errors = (await validator.checkSwap(\n            bestTradeOption!.order!,\n            // NOTE: once new swap contract is used, this (senderAddress) needs\n            // to be the wrapper address for wrapped swaps.\n            account!\n          )) as Error[];\n          if (errors.length) {\n            setValidatorErrors(errors);\n            setIsSwapping(false);\n            return;\n          }\n        }\n        LastLook.unsubscribeAllServers();\n        const result = await dispatch(\n          take({\n            order: bestTradeOption!.order!,\n            library,\n            contractType: swapType === \"swapWithWrap\" ? \"Wrapper\" : \"Light\",\n          })\n        );\n        setIsSwapping(false);\n        await unwrapResult(result);\n        setShowOrderSubmitted(true);\n      } else {\n        // Setting quote amount prevents the UI from updating if pricing changes\n        dispatch(setTradeTermsQuoteAmount(bestTradeOption!.quoteAmount));\n        // Last look order.\n        const { order, senderWallet } = await LastLook.getSignedOrder({\n          locator: bestTradeOption!.pricing!.locator,\n          terms: { ...tradeTerms, quoteAmount: bestTradeOption!.quoteAmount },\n        });\n        const errors = (await validator.checkSwap(\n          order,\n          senderWallet\n        )) as Error[];\n        if (errors.length) {\n          setValidatorErrors(errors);\n          setIsSwapping(false);\n          return;\n        }\n        const accepted = await LastLook.sendOrderForConsideration({\n          locator: bestTradeOption!.pricing!.locator,\n          order: order,\n        });\n        setIsSwapping(false);\n        if (accepted) {\n          setShowOrderSubmitted(true);\n          LastLook.unsubscribeAllServers();\n        } else {\n          // TODO: do something about the order here so that doesn't show as processing\n          notifyError({\n            heading: t(\"orders:swapRejected\"),\n            cta: t(\"orders:swapRejectedCallToAction\"),\n          });\n        }\n      }\n    } catch (e: any) {\n      if (bestTradeOption!.protocol !== \"request-for-quote\") {\n        setIsSwapping(false);\n        dispatch(clearTradeTermsQuoteAmount());\n      }\n\n      if (e.code && e.code === 4001) {\n        // 4001 is metamask user declining transaction sig\n      } else {\n        notifyError({\n          heading: t(\"orders:swapFailed\"),\n          cta: t(\"orders:swapFailedCallToAction\"),\n        });\n      }\n    }\n  };\n\n  const doWrap = async () => {\n    const method = baseTokenInfo === nativeETH[chainId!] ? deposit : withdraw;\n    setIsSwapping(true);\n    try {\n      const result = await dispatch(\n        method({\n          chainId: chainId!,\n          senderAmount: baseAmount,\n          senderTokenDecimals: baseTokenInfo!.decimals,\n          provider: library!,\n        })\n      );\n      await unwrapResult(result);\n      setIsSwapping(false);\n      setIsWrapping(false);\n      setShowOrderSubmitted(true);\n    } catch (e) {\n      // user cancelled metamask dialog\n      setIsSwapping(false);\n      setIsWrapping(false);\n    }\n  };\n\n  const handleButtonClick = async (action: ButtonActions) => {\n    switch (action) {\n      case ButtonActions.goBack:\n        setIsWrapping(false);\n        setPairUnavailable(false);\n        dispatch(clearTradeTerms());\n        dispatch(clear());\n        LastLook.unsubscribeAllServers();\n        break;\n\n      case ButtonActions.restart:\n        setShowOrderSubmitted(false);\n        dispatch(clearTradeTerms());\n        dispatch(clear());\n        LastLook.unsubscribeAllServers();\n        setBaseAmount(initialBaseAmount);\n        break;\n\n      case ButtonActions.connectWallet:\n        setShowWalletList(true);\n        break;\n\n      case ButtonActions.switchNetwork:\n        try {\n          (window as any).ethereum.request!({\n            method: \"wallet_switchEthereumChain\",\n            params: [\n              {\n                chainId: \"0x1\",\n              },\n            ],\n          });\n        } catch (e) {\n          // unable to switch network, but doesn't matter too much as button\n          // looks like a call to action in this case anyway.\n        }\n        break;\n\n      case ButtonActions.requestQuotes:\n        dispatch(\n          setTradeTerms({\n            baseToken: {\n              address: baseToken!,\n              decimals: baseTokenInfo!.decimals,\n            },\n            baseAmount: baseAmount,\n            quoteToken: {\n              address: quoteToken!,\n              decimals: quoteTokenInfo!.decimals,\n            },\n            quoteAmount: null,\n            side: \"sell\",\n          })\n        );\n        await requestQuotes();\n\n        break;\n\n      case ButtonActions.approve:\n        setIsApproving(true);\n        await dispatch(\n          approve({\n            token: baseToken!,\n            library,\n            contractType: swapType === \"swapWithWrap\" ? \"Wrapper\" : \"Light\",\n            chainId: chainId!,\n          })\n        );\n        setIsApproving(false);\n        break;\n\n      case ButtonActions.takeQuote:\n        if ([\"swap\", \"swapWithWrap\"].includes(swapType)) {\n          await takeBestOption();\n        } else if (swapType === \"wrapOrUnwrap\") {\n          await doWrap();\n        }\n        break;\n\n      case ButtonActions.trackTransaction:\n        onTrackTransactionClicked();\n        break;\n\n      default:\n      // Do nothing.\n    }\n  };\n\n  return (\n    <>\n      <StyledSwapWidget>\n        <SwapWidgetHeader\n          title={isApproving ? t(\"orders:approve\") : t(\"common:swap\")}\n          isQuote={!isRequestingQuotes && !showOrderSubmitted}\n          onGasFreeTradeButtonClick={() => setShowGasFeeInfo(true)}\n          protocol={bestTradeOption?.protocol as ProtocolType}\n          expiry={bestTradeOption?.order?.expiry}\n        />\n        {showOrderSubmitted ? (\n          <HugeTicks />\n        ) : isApproving || isSwapping ? (\n          <></>\n        ) : (\n          <SwapInputs\n            baseAmount={baseAmount}\n            onBaseAmountChange={setBaseAmount}\n            baseTokenInfo={baseTokenInfo}\n            quoteTokenInfo={quoteTokenInfo}\n            onChangeTokenClick={setShowTokenSelectModalFor}\n            onMaxButtonClick={() => setBaseAmount(maxAmount || \"0\")}\n            side=\"sell\"\n            tradeNotAllowed={pairUnavailable}\n            isRequesting={isRequestingQuotes}\n            // Note that using the quoteAmount from tradeTerms will stop this\n            // updating when the user clicks the take button.\n            quoteAmount={\n              swapType === \"wrapOrUnwrap\"\n                ? baseAmount\n                : tradeTerms.quoteAmount || bestTradeOption?.quoteAmount || \"\"\n            }\n            disabled={!active}\n            readOnly={\n              !!bestTradeOption ||\n              isWrapping ||\n              isRequestingQuotes ||\n              pairUnavailable ||\n              !active\n            }\n            showMaxButton={!!maxAmount && baseAmount !== maxAmount}\n          />\n        )}\n        <InfoContainer>\n          <InfoSection\n            orderSubmitted={showOrderSubmitted}\n            isConnected={active}\n            isPairUnavailable={pairUnavailable}\n            isFetchingOrders={isRequestingQuotes}\n            isApproving={isApproving}\n            isSwapping={isSwapping}\n            // @ts-ignore\n            bestTradeOption={bestTradeOption}\n            requiresApproval={\n              bestRfqOrder && !hasSufficientAllowance(baseToken!)\n            }\n            baseTokenInfo={baseTokenInfo}\n            baseAmount={baseAmount}\n            quoteTokenInfo={quoteTokenInfo}\n            isWrapping={isWrapping}\n            onFeeButtonClick={() => setProtocolFeeDiscountInfo(true)}\n          />\n        </InfoContainer>\n        <ButtonContainer>\n          {!isApproving && !isSwapping && (\n            <ActionButtons\n              walletIsActive={active}\n              unsupportedNetwork={\n                !!web3Error && web3Error instanceof UnsupportedChainIdError\n              }\n              orderComplete={showOrderSubmitted}\n              baseTokenInfo={baseTokenInfo}\n              quoteTokenInfo={quoteTokenInfo}\n              hasAmount={\n                !!baseAmount.length && baseAmount !== \"0\" && baseAmount !== \".\"\n              }\n              hasQuote={\n                !isRequestingQuotes && (!!bestTradeOption || isWrapping)\n              }\n              hasSufficientBalance={!insufficientBalance}\n              needsApproval={!!baseToken && !hasSufficientAllowance(baseToken)}\n              pairUnavailable={pairUnavailable}\n              onButtonClicked={handleButtonClick}\n              isLoading={\n                isConnecting ||\n                isRequestingQuotes ||\n                [\"approving\", \"taking\"].includes(rfqOrderStatus) ||\n                (!!baseToken && hasApprovalPending(baseToken))\n              }\n            />\n          )}\n        </ButtonContainer>\n      </StyledSwapWidget>\n\n      <Overlay\n        onClose={() => setShowTokenSelectModalFor(null)}\n        isHidden={!showTokenSelectModalFor}\n      >\n        <TokenList\n          onSelectToken={(newTokenAddress) => {\n            // e.g. handleSetToken(\"base\", \"0x123\")\n            handleSetToken(showTokenSelectModalFor, newTokenAddress);\n            // Close the modal\n            setShowTokenSelectModalFor(null);\n          }}\n          balances={balances}\n          allTokens={allTokens}\n          activeTokens={activeTokens}\n          supportedTokenAddresses={supportedTokens}\n          addActiveToken={handleAddActiveToken}\n          removeActiveToken={handleRemoveActiveToken}\n          chainId={chainId || 1}\n        />\n      </Overlay>\n\n      <Overlay\n        title={t(\"wallet:selectWallet\")}\n        onClose={() => setShowWalletList(false)}\n        isHidden={!showWalletList}\n      >\n        <StyledWalletProviderList\n          onClose={() => setShowWalletList(false)}\n          onProviderSelected={(provider) => {\n            dispatch(setActiveProvider(provider.name));\n            setIsConnecting(true);\n            activate(provider.getConnector()).finally(() =>\n              setIsConnecting(false)\n            );\n            setShowWalletList(false);\n          }}\n        />\n      </Overlay>\n      <Overlay\n        title={t(\"validatorErrors:unableSwap\")}\n        subTitle={t(\"validatorErrors:swapFail\")}\n        onClose={async () => {\n          await handleButtonClick(ButtonActions.restart);\n          setValidatorErrors([]);\n        }}\n        isHidden={!validatorErrors.length}\n      >\n        <ErrorList\n          errors={validatorErrors}\n          handleClick={async () => {\n            await handleButtonClick(ButtonActions.restart);\n            setValidatorErrors([]);\n          }}\n        />\n      </Overlay>\n      <Overlay\n        title={t(\"information:gasFreeSwaps.title\")}\n        onClose={() => setShowGasFeeInfo(false)}\n        isHidden={!showGasFeeInfo}\n      >\n        <GasFreeSwapsModal\n          onCloseButtonClick={() => setShowGasFeeInfo(false)}\n        />\n      </Overlay>\n      <Overlay\n        title={t(\"information:protocolFeeDiscount.title\")}\n        onClose={() => setProtocolFeeDiscountInfo(false)}\n        isHidden={!protocolFeeDiscountInfo}\n      >\n        <ProtocolFeeDiscountModal />\n      </Overlay>\n    </>\n  );\n};\n\nexport default SwapWidget;\n","import { Toaster as T } from \"react-hot-toast\";\n\nimport styled from \"styled-components/macro\";\n\nconst ToasterWrapper = styled.div`\n  div[role=\"status\"] {\n    margin: 0;\n  }\n  div {\n    max-width: 100%;\n    border-radius: 0.5rem;\n    background: transparent;\n  }\n`;\n\ntype ToasterPropType = {\n  open: boolean;\n};\n\nconst Toaster = ({ open }: ToasterPropType) => (\n  <ToasterWrapper>\n    <T\n      position=\"top-right\"\n      containerStyle={{\n        right: open ? \"25rem\" : \"1rem\",\n        transform: `${(open: boolean) =>\n          open ? \"translateX(0)\" : \"translateX(24rem)\"}`,\n        transition: \"transform 0.3s ease-in-out\",\n      }}\n      toastOptions={{\n        style: {\n          padding: 0,\n          margin: 0,\n          borderRadius: 0,\n        },\n      }}\n    ></T>\n  </ToasterWrapper>\n);\n\nexport default Toaster;\n","import styled from \"styled-components/macro\";\n\nimport breakPoints from \"../../style/breakpoints\";\nimport Icon from \"../Icon/Icon\";\n\nexport const ToolbarContainer = styled.div`\n  display: none;\n  flex-direction: column;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 7rem;\n  height: 100%;\n  min-height: 31rem;\n  // min-height: 37rem; // for 5 buttons, enable this when stats button is added in toolbar\n  padding: 0 1rem 0;\n  border-right: 1px solid ${(props) => props.theme.colors.borderGrey};\n  overflow: hidden;\n  background: ${(props) => props.theme.colors.black};\n  z-index: 1;\n\n  @media ${breakPoints.tabletPortraitUp} {\n    display: flex;\n  }\n`;\n\nexport const IconAirswap = styled(Icon)`\n  margin-top: 2rem;\n  align-self: center;\n  margin-bottom: auto;\n`;\n\nexport const ToolbarButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex-grow: 2;\n  margin: 2rem 0 4.5rem;\n`;\n","import styled, { css } from \"styled-components/macro\";\n\nimport { InputOrButtonBorderStyle } from \"../../../../style/mixins\";\n\nconst ButtonStyle = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border-radius: 0.25rem;\n  width: 5rem;\n  height: 5rem;\n\n  & + a,\n  & + button {\n    margin-top: 1rem;\n  }\n\n  ${InputOrButtonBorderStyle}\n`;\n\nexport const ToolbarButtonContainer = styled.button`\n  ${ButtonStyle}\n`;\n\nexport const ToolBarAnchorContainer = styled.a`\n  ${ButtonStyle}\n`;\n\nexport const Text = styled.div`\n  margin-top: 0.25rem;\n  font-weight: 600;\n  font-size: 0.75rem;\n  text-transform: uppercase;\n`;\n","import React, { FC } from \"react\";\n\nimport Icon from \"../../../Icon/Icon\";\nimport {\n  Text,\n  ToolBarAnchorContainer,\n  ToolbarButtonContainer,\n} from \"./ToolbarButton.styles\";\n\ntype ToolbarButtonProps = {\n  text: string;\n  iconName: string;\n  href?: string;\n  onClick?: () => void;\n};\n\nconst ToolbarButton: FC<ToolbarButtonProps> = ({\n  text,\n  iconName,\n  href,\n  onClick,\n}) => {\n  const renderInner = () => {\n    return (\n      <>\n        <Icon name={iconName} iconSize={1.5} />\n        <Text>{text}</Text>\n      </>\n    );\n  };\n\n  if (href) {\n    return (\n      <ToolBarAnchorContainer href={href} target=\"_blank\">\n        {renderInner()}\n      </ToolBarAnchorContainer>\n    );\n  }\n\n  return (\n    <ToolbarButtonContainer onClick={onClick}>\n      {renderInner()}\n    </ToolbarButtonContainer>\n  );\n};\n\nexport default ToolbarButton;\n","import React, { FC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { InformationType } from \"../InformationModals/InformationModals\";\nimport {\n  IconAirswap,\n  ToolbarButtonsContainer,\n  ToolbarContainer,\n} from \"./Toolbar.styles\";\nimport ToolbarButton from \"./subcomponents/ToolbarButton/ToolbarButton\";\n\nexport type ToolbarProps = {\n  onButtonClick?: (type: InformationType) => void;\n};\n\nconst Toolbar: FC<ToolbarProps> = ({ onButtonClick }) => {\n  const { t } = useTranslation([\"common\"]);\n\n  // TODO: Add content for \"about\" in modals\n\n  const onToolbarButtonClick = (type: InformationType) => {\n    if (onButtonClick) {\n      onButtonClick(type);\n    }\n  };\n\n  return (\n    <ToolbarContainer>\n      <IconAirswap iconSize={2.5} name=\"airswap\" />\n      <ToolbarButtonsContainer>\n        {/*<ToolbarButton iconName=\"bars\" text={t(\"common:stats\")} />*/}\n        <ToolbarButton\n          iconName=\"vote\"\n          text={t(\"common:vote\")}\n          href=\"https://activate.codefi.network/staking/airswap/governance\"\n        />\n        <ToolbarButton\n          iconName=\"code\"\n          text={t(\"common:build\")}\n          href=\"https://github.com/airswap\"\n        />\n        <ToolbarButton\n          iconName=\"about\"\n          text={t(\"common:about\")}\n          href=\"https://about.airswap.io/\"\n        />\n        <ToolbarButton\n          iconName=\"contact-support\"\n          text={t(\"common:join\")}\n          onClick={() => onToolbarButtonClick(\"join\")}\n        />\n      </ToolbarButtonsContainer>\n    </ToolbarContainer>\n  );\n};\n\nexport default Toolbar;\n","import styled from \"styled-components/macro\";\n\nimport { sizes } from \"../../style/sizes\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  border-radius: 0.25rem;\n  height: 30rem;\n  width: 30rem;\n  padding: ${sizes.tradeContainerPadding};\n  background: ${(props) => props.theme.colors.black};\n  overflow: hidden;\n  box-shadow: ${(props) => props.theme.shadows.widgetGlow};\n`;\n\nexport const StyledTradeContainer = styled.div`\n  position: relative;\n  display: flex;\n  box-sizing: border-box;\n  margin: 0 auto;\n`;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { Container, StyledTradeContainer } from \"./WidgetFrame.styles\";\n\nconst WidgetFrame: FC = ({ children }): ReactElement => {\n  return (\n    <StyledTradeContainer>\n      <Container>{children}</Container>\n    </StyledTradeContainer>\n  );\n};\n\nexport default WidgetFrame;\n","import styled from \"styled-components/macro\";\n\nimport { BorderedPill } from \"../../style/mixins\";\n\nexport const StyledEthBalance = styled.div`\n  ${BorderedPill}\n`;\n","import { formatUnits } from \"ethers/lib/utils\";\n\nimport { InfoHeading } from \"../Typography/Typography\";\nimport { StyledEthBalance } from \"./EthButton.styles\";\n\ntype EthButtonPropType = {\n  balance: string;\n};\n\nconst EthBalance = ({ balance = \"0\" }: EthButtonPropType) => {\n  return (\n    <StyledEthBalance>\n      <InfoHeading>{formatUnits(balance).substring(0, 5)} ETH</InfoHeading>\n    </StyledEthBalance>\n  );\n};\n\nexport default EthBalance;\n","export const SUPPORTED_LOCALES = [\n  // order as they appear in the language dropdown\n  \"en\",\n  \"nb\",\n];\n\nexport type SupportedLocale = typeof SUPPORTED_LOCALES[number];\n\nexport const DEFAULT_LOCALE: SupportedLocale = \"en\";\n\nexport const LOCALE_LABEL: { [locale in SupportedLocale]: string } = {\n  en: \"English\",\n  nb: \"Norsk Bokmål\",\n};\n","import styled from \"styled-components\";\n\nimport {\n  BorderlessButtonStyle,\n  InputOrButtonBorderStyle,\n  ScrollBarStyle,\n} from \"../../style/mixins\";\n\nexport const Container = styled.div`\n  position: absolute;\n  display: grid;\n  grid-template-rows: 5rem;\n  width: 16rem;\n  height: 17.25rem;\n  top: 5.5rem;\n  right: 0rem;\n  color: ${(props) => props.theme.colors.darkSubText};\n  background-color: ${(props) => props.theme.colors.darkGrey};\n  border: ${(props) => props.theme.colors.borderGrey} 1px solid;\n  border-radius: 0.5rem;\n  padding: 1rem;\n  z-index: 1000;\n`;\n\nexport const ThemeContainer = styled.div`\n  margin: 0.5rem 0 0 0;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  height: 2.5rem;\n`;\n\ntype ButtonStyleProps = {\n  active: boolean;\n};\n\nexport const ThemeButton = styled.button<ButtonStyleProps>`\n  border: ${(props) => props.theme.colors.borderGrey} 1px solid;\n  font-weight: ${(props) => (props.active ? \"600\" : \"400\")};\n  color: ${(props) =>\n    props.active ? props.theme.colors.white : props.theme.colors.darkSubText};\n  background-color: ${(props) =>\n    props.active ? props.theme.colors.borderGrey : \"transparent\"};\n  line-height: 1.5rem;\n  font-size: 0.875rem;\n\n  ${InputOrButtonBorderStyle}\n`;\n\ntype LocaleContainerType = {\n  $overflow: boolean;\n};\n\nexport const LocaleContainer = styled.div<LocaleContainerType>`\n  width: 100%;\n  height: 100%;\n  padding: 0.5rem 0 1rem;\n  overflow-y: ${(props) => (props.$overflow ? \"scroll\" : \"hidden\")};\n  flex-grow: 99;\n\n  ${ScrollBarStyle}\n\n  &::-webkit-scrollbar {\n    background: ${(props) => props.theme.colors.black};\n  }\n`;\n\nexport const LocaleButton = styled.button<ButtonStyleProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  width: 100%;\n  padding: 0.5rem 0 0.5rem 1rem;\n  border-radius: 1px;\n  font-weight: ${(props) => (props.active ? \"600\" : \"400\")};\n  font-size: 0.875rem;\n  color: ${(props) =>\n    props.active ? props.theme.colors.white : props.theme.colors.darkSubText};\n  background-color: ${(props) =>\n    props.active ? props.theme.colors.borderGrey : \"transparent\"};\n\n  ${BorderlessButtonStyle}\n\n  &:hover,\n  &:focus {\n    color: ${(props) => props.theme.colors.white};\n  }\n`;\n","import styled from \"styled-components\";\n\nimport { StyledTitle } from \"../../../Overlay/Overlay.styles\";\n\nexport const Container = styled.div`\n  color: ${(props) => props.theme.colors.darkSubText};\n  display: grid;\n  grid-template-rows: 1.5rem;\n  overflow: hidden;\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`;\n\nexport const Title = styled(StyledTitle)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  font-size: 0.75rem;\n  &:after {\n    margin: 0 0 0 0.5rem;\n    background: ${(props) => props.theme.colors.borderGrey};\n    height: 1px;\n    flex: 1;\n    content: \"\";\n  }\n\n  &:before {\n    background: none;\n  }\n`;\n\nexport const Line = styled.span`\n  background: transparent;\n`;\n","import {\n  Container,\n  TitleContainer,\n  Line,\n  Title,\n} from \"./PopoverSection.styles\";\n\ntype PopoverSectionType = {\n  title: string;\n  children: React.ReactChild;\n};\n\nconst PopoverSection = ({ title, children }: PopoverSectionType) => {\n  return (\n    <Container>\n      <TitleContainer>\n        <Title type=\"h4\">\n          <Line>{title}</Line>\n        </Title>\n      </TitleContainer>\n      {children}\n    </Container>\n  );\n};\n\nexport default PopoverSection;\n","import { useState, useEffect, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { ThemeType } from \"styled-components\";\n\nimport { useAppDispatch } from \"../../app/hooks\";\nimport {\n  SUPPORTED_LOCALES,\n  LOCALE_LABEL,\n  DEFAULT_LOCALE,\n} from \"../../constants/locales\";\nimport getInitialThemeValue from \"../../features/userSettings/helpers/getInitialThemeValue\";\nimport { setTheme } from \"../../features/userSettings/userSettingsSlice\";\nimport useWindowSize from \"../../helpers/useWindowSize\";\nimport {\n  Container,\n  ThemeContainer,\n  ThemeButton,\n  LocaleContainer,\n  LocaleButton,\n} from \"./SettingsPopover.styles\";\nimport PopoverSection from \"./subcomponents/PopoverSection/PopoverSection\";\n\nconst SettingsPopover = () => {\n  const { width, height } = useWindowSize();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [selectedButton, setSelectedButton] = useState<ThemeType | \"system\">(\n    getInitialThemeValue()\n  );\n  const [overflow, setOverflow] = useState<boolean>(false);\n\n  // selects i18nextLang first, window language, falls back to default locale (en)\n  // TODO: keep track of different langauage locale (e.g. en-US, en-AU)?\n  const [selectedLocale, setSelectedLocale] = useState<string>(\n    localStorage.getItem(\"i18nextLng\")?.substring(0, 2) ||\n      window.navigator.language.substring(0, 2) ||\n      DEFAULT_LOCALE\n  );\n  const dispatch = useAppDispatch();\n  const { t, i18n } = useTranslation([\"common\"]);\n\n  const handleThemeButtonClick = (newTheme: ThemeType | \"system\") => {\n    setSelectedButton(newTheme);\n    dispatch(setTheme(newTheme));\n  };\n\n  useEffect(() => {\n    if (containerRef.current && scrollContainerRef.current) {\n      const { offsetTop, scrollHeight } = scrollContainerRef.current;\n      setOverflow(scrollHeight + offsetTop > containerRef.current.offsetHeight);\n    }\n  }, [containerRef, scrollContainerRef, width, height]);\n\n  return (\n    <Container ref={containerRef}>\n      <PopoverSection title={t(\"common:theme\")}>\n        <ThemeContainer>\n          <ThemeButton\n            active={selectedButton === \"system\"}\n            onClick={() => handleThemeButtonClick(\"system\")}\n          >\n            {t(\"common:system\")}\n          </ThemeButton>\n          <ThemeButton\n            active={selectedButton === \"light\"}\n            onClick={() => handleThemeButtonClick(\"light\")}\n          >\n            {t(\"common:light\")}\n          </ThemeButton>\n          <ThemeButton\n            active={selectedButton === \"dark\"}\n            onClick={() => handleThemeButtonClick(\"dark\")}\n          >\n            {t(\"common:dark\")}\n          </ThemeButton>\n        </ThemeContainer>\n      </PopoverSection>\n      <PopoverSection title={t(\"common:language\")}>\n        <LocaleContainer ref={scrollContainerRef} $overflow={overflow}>\n          {SUPPORTED_LOCALES.map((locale) => {\n            return (\n              <LocaleButton\n                key={locale}\n                active={selectedLocale === locale}\n                onClick={() => {\n                  setSelectedLocale(locale);\n                  i18n.changeLanguage(locale);\n                }}\n              >\n                {LOCALE_LABEL[locale]}\n              </LocaleButton>\n            );\n          })}\n        </LocaleContainer>\n      </PopoverSection>\n    </Container>\n  );\n};\n\nexport default SettingsPopover;\n","import styled from \"styled-components\";\n\nimport { BorderedPill, InputOrButtonBorderStyle } from \"../../style/mixins\";\n\nexport const Container = styled.div`\n  position: relative;\n`;\n\nexport const SettingsButtonContainer = styled.button`\n  ${BorderedPill}\n  ${InputOrButtonBorderStyle}\n  \n  width: 3rem;\n  height: 3rem;\n  padding: 0;\n`;\n","import { useCallback, useEffect, useRef } from \"react\";\n\nimport Icon from \"../Icon/Icon\";\nimport SettingsPopover from \"../SettingsPopover/SettingsPopover\";\nimport { Container, SettingsButtonContainer } from \"./SettingsButton.style\";\n\ntype SettingsButtonType = {\n  settingsOpen: boolean;\n  setSettingsOpen: (x: boolean) => void;\n};\n\nconst SettingsButton = ({\n  settingsOpen,\n  setSettingsOpen,\n}: SettingsButtonType) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const handleClick = useCallback(\n    (e) => {\n      if (containerRef.current && containerRef.current.contains(e.target)) {\n        return;\n      }\n      setSettingsOpen(false);\n    },\n    [setSettingsOpen]\n  );\n\n  const handleEscKey = useCallback(\n    (e) => {\n      if (e.keyCode === 27) {\n        setSettingsOpen(false);\n      }\n    },\n    [setSettingsOpen]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClick);\n    document.addEventListener(\"keydown\", handleEscKey, false);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClick);\n      document.removeEventListener(\"keydown\", handleEscKey, false);\n    };\n  }, [handleClick, handleEscKey]);\n\n  return (\n    <Container ref={containerRef}>\n      <SettingsButtonContainer onClick={() => setSettingsOpen(!settingsOpen)}>\n        <Icon iconSize={1.5} name=\"settings\" />\n      </SettingsButtonContainer>\n      {settingsOpen && <SettingsPopover />}\n    </Container>\n  );\n};\n\nexport default SettingsButton;\n","import { useState, useLayoutEffect } from \"react\";\n\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport truncateEthAddress from \"truncate-eth-address\";\n\n// This is an in-memory cache that will be lost when we refresh the page, as\n// ENS records may change, but we probably only need to check once between\n// refreshes. Format: { [chainId]: { [address]: name | null }}\nconst ensCachedResponses: Record<number, Record<string, string | null>> = {};\n\nconst useAddressOrEnsName = (\n  address: string | null,\n  truncate: boolean = true\n) => {\n  const { library, chainId } = useWeb3React<Web3Provider>();\n\n  const fallback = truncate\n    ? address\n      ? truncateEthAddress(address)\n      : null\n    : address;\n  const [result, setResult] = useState<string | null>(fallback);\n\n  useLayoutEffect(() => {\n    if (!address || !chainId || !library) {\n      setResult(fallback);\n      return;\n    }\n\n    const cached = ensCachedResponses[chainId]?.[address];\n    if (cached !== undefined) {\n      setResult(cached || fallback);\n    } else {\n      library.lookupAddress(address).then((name) => {\n        ensCachedResponses[chainId] = {\n          ...ensCachedResponses[chainId],\n          [address]: name,\n        };\n        setResult(name || fallback);\n      });\n    }\n  }, [library, address, chainId, fallback]);\n\n  return result;\n};\n\nexport default useAddressOrEnsName;\n","import Blockies from \"react-blockies\";\n\nimport styled from \"styled-components\";\n\nexport const Button = styled.div`\n  border: 0;\n  margin: 0;\n  padding: 1rem;\n  cursor: pointer;\n  background: none;\n`;\n\nexport const BlockiesContainer = styled.div`\n  position: relative;\n  margin-right: 1.25rem;\n\n  &::after {\n    display: block;\n    content: \"\";\n    position: absolute;\n    background-color: ${(props) => props.theme.colors.green};\n    border-radius: 50%;\n    z-index: 5;\n    width: 0.5rem;\n    height: 0.5rem;\n    top: 1rem;\n    left: 1rem;\n  }\n`;\n\nexport const StyledBlockies = styled(Blockies)`\n  border-radius: 50%;\n  overflow: hidden;\n`;\n\nexport const ConnectionStatusCircle = styled.div<{ $connected: boolean }>`\n  margin-right: 0.5rem;\n  width: 0.75rem;\n  height: 0.75rem;\n  background-color: ${(props) =>\n    props.$connected ? props.theme.colors.green : props.theme.colors.red};\n  border-radius: 50%;\n`;\n","import styled from \"styled-components\";\n\nimport { BorderlessButtonStyle } from \"../../../../style/mixins\";\n\nexport const Link = styled.a`\n  padding: 0.25rem;\n  color: ${(props) => props.theme.colors.lightGrey};\n\n  &:hover {\n    color: ${(props) => props.theme.colors.white};\n  }\n\n  ${BorderlessButtonStyle}\n`;\n","import { getEtherscanURL } from \"@airswap/utils\";\n\nimport Icon from \"../../../Icon/Icon\";\nimport { Link } from \"./TransactionLink.style\";\n\ntype TransactionLinkProps = {\n  chainId: number;\n  hash: string;\n  className?: string;\n};\n\nconst TransactionLink = ({\n  chainId,\n  hash,\n  className = \"\",\n}: TransactionLinkProps) => {\n  return (\n    <Link\n      className={className}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={`${getEtherscanURL(chainId, hash)}`}\n    >\n      <Icon iconSize={1} name=\"transaction-link\" />\n    </Link>\n  );\n};\n\nexport default TransactionLink;\n","import styled from \"styled-components\";\n\nimport { ScrollBarStyle } from \"../../style/mixins\";\nimport Button from \"../Button/Button\";\nimport { InfoSubHeading } from \"../Typography/Typography\";\nimport { InfoHeading } from \"../Typography/Typography\";\nimport TransactionLink from \"./subcomponents/TransactionLink/TransactionLink\";\n\ntype BackgroundOverlayProps = {\n  open: boolean;\n};\n\nexport const BackgroundOverlay = styled.div<BackgroundOverlayProps>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  transform: scale(${(props) => (props.open ? \"1\" : \"0\")});\n  z-index: 1000;\n\n  @media (prefers-reduced-motion: reduce) {\n    transition: none;\n  }\n`;\n\ntype ContainerProps = {\n  open: boolean;\n};\n\nexport const Container = styled.div<ContainerProps>`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  width: 24rem;\n  height: 100vh;\n  padding: 0 1.5rem;\n  background-color: ${(props) => props.theme.colors.black};\n  border-left: 1px solid ${(props) => props.theme.colors.borderGrey};\n  top: 0;\n  right: 0;\n  transform: ${({ open }) => (open ? \"translateX(0)\" : \"translateX(24rem)\")};\n  transition: transform 0.3s ease-in-out;\n  z-index: 1001;\n\n  @media (prefers-reduced-motion: reduce) {\n    transition: none;\n  }\n`;\n\nexport const WalletHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  height: 3rem;\n  margin: 1.5rem 0;\n`;\n\nexport const BlockiesContainer = styled.div`\n  position: relative;\n  margin-right: 2.5rem;\n\n  &::after {\n    display: block;\n    content: \"\";\n    position: absolute;\n    background-color: ${(props) => props.theme.colors.green};\n    border-radius: 50%;\n    z-index: 5;\n    width: 0.75rem;\n    height: 0.75rem;\n    top: 1.75rem;\n    left: 1.75rem;\n  }\n`;\n\nexport const WalletAddress = styled(InfoHeading)`\n  font-size: 1rem;\n`;\n\nexport const WalletLinkContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 1.125rem 1rem 1.125rem 1.5rem;\n  height: 3rem;\n  border: 1px solid ${(props) => props.theme.colors.borderGrey};\n  border-radius: 2500px;\n`;\n\nexport const StyledTransactionLink = styled(TransactionLink)`\n  justify-self: flex-end;\n  margin-left: auto;\n\n  &:hover {\n    color: ${(props) => props.theme.colors.alwaysWhite};\n  }\n`;\n\nexport const Legend = styled(InfoSubHeading)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  font-size: 0.75rem;\n  font-weight: 700;\n  line-height: 1rem;\n  color: ${(props) => props.theme.colors.lightGrey};\n  &:after {\n    margin: 0 0 0 0.5rem;\n    background: ${(props) => props.theme.colors.borderGrey};\n    height: 1px;\n    flex: 1;\n    content: \"\";\n  }\n\n  &:before {\n    background: none;\n  }\n`;\n\nexport const LegendLine = styled.span`\n  background: transparent;\n`;\n\ntype TransactionsContainerProps = {\n  $overflow: boolean;\n};\n\nexport const TransactionsContainer = styled.div<TransactionsContainerProps>`\n  overflow-y: ${(props) => (props.$overflow ? \"scroll\" : \"hidden\")};\n\n  flex-grow: 99;\n  height: 100%;\n  padding-bottom: 1rem;\n\n  ${ScrollBarStyle}\n`;\n\nexport const TransactionContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  flex-grow: 2;\n  padding: 1.5rem 0;\n  width: 100%;\n`;\n\nexport const NoTransactions = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  height: 4.5rem;\n  margin: 0.25rem 0;\n  color: ${(props) => props.theme.colors.lightGrey};\n`;\n\nexport const DiconnectButtonContainer = styled.div`\n  padding: 1.5rem 0 1rem 0;\n`;\n\nexport const DisconnectButton = styled(Button)`\n  margin-top: auto;\n  justify-self: flex-end;\n`;\n\nexport const IconContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 2.5rem;\n  height: 2.5rem;\n  background-color: rgb(110, 118, 134, 0.1);\n  color: ${(props) => props.theme.colors.lightGrey};\n  border-radius: 50%;\n`;\n","import styled from \"styled-components\";\n\nimport { BorderlessButtonStyle } from \"../../../../style/mixins\";\n\nexport const Link = styled.a`\n  margin-left: 0.5rem;\n  padding: 0.5rem;\n  color: ${(props) => props.theme.colors.lightGrey};\n\n  &:hover {\n    color: ${(props) => props.theme.colors.white};\n  }\n\n  ${BorderlessButtonStyle}\n`;\n","import Icon from \"../../../Icon/Icon\";\nimport { Link } from \"./WalletLink.styles\";\n\ntype WalletLinkProps = {\n  chainId: number;\n  address: string;\n};\n\nconst addressMapping: Record<number, string> = {\n  1: \"\",\n  4: \"rinkeby.\",\n};\n\nconst WalletLink = ({ chainId, address }: WalletLinkProps) => {\n  return (\n    <Link\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={`https://${addressMapping[chainId]}etherscan.io/address/${address}`}\n    >\n      <Icon iconSize={1} name=\"wallet-link\" />\n    </Link>\n  );\n};\n\nexport default WalletLink;\n","import { TFunction } from \"react-i18next\";\n\nconst MS_PER_MINUTE = 60000;\nconst MS_PER_HOUR = 3600000;\nconst MS_PER_DAY = 86400000;\nconst MS_PER_MONTH = 2592000000;\nconst MS_PER_YEAR = 31536000000;\n\nexport default function getTimeBetweenTwoDates(\n  date: Date,\n  t: TFunction<(\"common\" | \"wallet\")[]>\n): string {\n  const currentDate = new Date();\n\n  // if date is past the current date;\n  if (currentDate < date) return t(\"common:undefined\");\n\n  // convert to seconds\n  const timeDiff = currentDate.getTime() - date.getTime();\n\n  // use increasing denominations based on how recent the comparison between dates are\n  // e.g. x mins (< 1 hour), x hours (< 1 day), x days(< 1 month), x months(< 1 year), x years(> 1 year)\n  if (timeDiff < MS_PER_HOUR) {\n    // if time difference is less than 1 hour\n    const minutes = Math.floor((timeDiff % MS_PER_HOUR) / MS_PER_MINUTE);\n    return minutes > 1\n      ? t(\"wallet:minuteAgo_other\", { count: minutes })\n      : t(\"wallet:minuteAgo_one\", { count: minutes });\n  } else if (timeDiff < MS_PER_DAY) {\n    // if time difference is less than 1 day\n    const hours = Math.floor(timeDiff / MS_PER_HOUR);\n    return hours > 1\n      ? t(\"wallet:hourAgo_other\", { count: hours })\n      : t(\"wallet:hourAgo_one\", { count: hours });\n  } else if (timeDiff < MS_PER_MONTH) {\n    // if time difference is less than 1 month\n    const days = Math.floor(timeDiff / MS_PER_DAY);\n    return days > 1\n      ? t(\"wallet:dayAgo_other\", { count: days })\n      : t(\"wallet:dayAgo_one\", { count: days });\n  } else if (timeDiff < MS_PER_YEAR) {\n    // if time difference is less than 1 year\n    const months = Math.floor(timeDiff / MS_PER_MONTH);\n    return months > 1\n      ? t(\"wallet:monthAgo_other\", { count: months })\n      : t(\"wallet:monthAgo_one\", { count: months });\n  } else {\n    const years = Math.floor(timeDiff / MS_PER_YEAR);\n    return years > 1\n      ? t(\"wallet:yearAgo_other\", { count: years })\n      : t(\"wallet:yearAgo_one\", { count: years });\n  }\n}\n","import styled from \"styled-components\";\n\nimport Icon from \"../../../Icon/Icon\";\n\nexport const IconContainer = styled.div`\n  width: 1.75rem;\n`;\n\nexport const SucceedIcon = styled(Icon)`\n  transform: translate(-0.25rem, -0.25rem);\n`;\n\nexport const ProcessingIcon = styled(Icon)`\n  transform: translate(-0.125rem, 0.0625rem);\n`;\n\nexport const FailedIcon = styled(Icon)`\n  transform: translate(-0.125rem, 0);\n`;\n","import {\n  FailedIcon,\n  IconContainer,\n  ProcessingIcon,\n  SucceedIcon,\n} from \"./WalletTransactionStatus.styles\";\n\ntype WalletTransactionStatusProps = {\n  status: \"succeeded\" | \"processing\" | \"reverted\";\n  className?: string;\n};\n\nconst WalletTransactionStatus = ({\n  status,\n  className = \"\",\n}: WalletTransactionStatusProps) => {\n  return (\n    <IconContainer>\n      {status === \"succeeded\" ? (\n        <SucceedIcon\n          className={className}\n          iconSize={1.875}\n          name=\"transaction-completed\"\n        />\n      ) : status === \"processing\" ? (\n        <ProcessingIcon\n          className={className}\n          iconSize={1.5}\n          name=\"transaction-pending\"\n        />\n      ) : (\n        <FailedIcon\n          className={className}\n          iconSize={1.5}\n          name=\"transaction-failed\"\n        />\n      )}\n    </IconContainer>\n  );\n};\n\nexport default WalletTransactionStatus;\n","import styled from \"styled-components\";\n\nimport TransactionLink from \"../TransactionLink/TransactionLink\";\nimport WalletTransactionStatus from \"../WalletTransactionStatus/WalletTransactionStatus\";\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 1.125rem 1.5rem;\n  border: 1px solid ${(props) => props.theme.colors.borderGrey};\n  border-radius: 0.1875rem;\n\n  & + & {\n    margin-top: 0.5rem;\n  }\n\n  &:hover {\n    border-color: ${(props) => props.theme.colors.lightGrey};\n  }\n`;\n\nexport const StyledWalletTransactionStatus = styled(WalletTransactionStatus)``;\n\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n`;\n\nexport const SpanTitle = styled.span`\n  font-size: 0.875rem;\n  font-weight: 700;\n  line-height: 1.25rem;\n`;\n\nexport const SpanSubtitle = styled.span`\n  line-height: 1.25rem;\n  font-size: 1rem;\n  font-weight: 400;\n  color: ${(props) => props.theme.colors.lightGrey};\n`;\n\nexport const StyledTransactionLink = styled(TransactionLink)`\n  align-items: center;\n  &:hover {\n    color: ${(props) => props.theme.colors.alwaysWhite};\n  }\n`;\n","import { useTranslation } from \"react-i18next\";\n\nimport { findTokenByAddress } from \"@airswap/metadata\";\nimport { TokenInfo } from \"@airswap/types\";\nimport { formatUnits } from \"@ethersproject/units\";\n\nimport {\n  SubmittedApproval,\n  SubmittedOrder,\n  SubmittedTransaction,\n} from \"../../../../features/transactions/transactionsSlice\";\nimport findEthOrTokenByAddress from \"../../../../helpers/findEthOrTokenByAddress\";\nimport getTimeBetweenTwoDates from \"../../../../helpers/getTimeBetweenTwoDates\";\nimport {\n  Container,\n  SpanSubtitle,\n  SpanTitle,\n  StyledTransactionLink,\n  TextContainer,\n} from \"./WalletTransaction.styles\";\n\ntype WalletTransactionProps = {\n  /**\n   * The parent object of SubmittedOrder and SubmittedApproval\n   */\n  transaction: SubmittedTransaction;\n  /**\n   * All token metadata\n   */\n  tokens: TokenInfo[];\n  /**\n   * chainId of current Ethereum net\n   */\n  chainId: number;\n};\n\nconst WalletTransaction = ({\n  transaction,\n  tokens,\n  chainId,\n}: WalletTransactionProps) => {\n  const { t } = useTranslation([\"common\", \"wallet\"]);\n\n  if (transaction.type === \"Approval\") {\n    const tx: SubmittedApproval = transaction as SubmittedApproval;\n    const approvalToken = findTokenByAddress(tx.tokenAddress, tokens);\n    return (\n      <Container>\n        <TextContainer>\n          <>\n            <SpanTitle>\n              {t(\"wallet:approve\", { symbol: approvalToken?.symbol })}\n            </SpanTitle>\n            <SpanSubtitle>\n              {tx.status === \"succeeded\"\n                ? t(\"common:success\")\n                : tx.status === \"processing\"\n                ? t(\"common:processing\")\n                : t(\"common:failed\")}{\" \"}\n              · {getTimeBetweenTwoDates(new Date(tx.timestamp), t)}\n            </SpanSubtitle>\n          </>\n        </TextContainer>\n        {tx.hash && <StyledTransactionLink chainId={chainId} hash={tx.hash} />}\n      </Container>\n    );\n  } else {\n    const tx: SubmittedOrder = transaction as SubmittedOrder;\n    const senderToken = findEthOrTokenByAddress(\n      tx.order.senderToken,\n      tokens,\n      chainId\n    );\n    const signerToken = findEthOrTokenByAddress(\n      tx.order.signerToken,\n      tokens,\n      chainId\n    );\n    return (\n      <Container>\n        <TextContainer>\n          {tx && senderToken && signerToken && (\n            <>\n              <SpanTitle>\n                {t(\n                  tx.protocol === \"last-look\"\n                    ? \"wallet:lastLookTransaction\"\n                    : \"wallet:transaction\",\n                  {\n                    senderAmount: parseFloat(\n                      Number(\n                        formatUnits(tx.order.senderAmount, senderToken.decimals)\n                      ).toFixed(5)\n                    ),\n                    senderToken: senderToken.symbol,\n                    signerAmount: parseFloat(\n                      Number(\n                        formatUnits(tx.order.signerAmount, signerToken.decimals)\n                      ).toFixed(5)\n                    ),\n                    signerToken: signerToken.symbol,\n                  }\n                )}\n              </SpanTitle>\n              <SpanSubtitle>\n                {tx.status === \"succeeded\"\n                  ? t(\"common:success\")\n                  : tx.status === \"processing\"\n                  ? t(\"common:processing\")\n                  : t(\"common:failed\")}{\" \"}\n                · {getTimeBetweenTwoDates(new Date(tx.timestamp), t)}\n              </SpanSubtitle>\n            </>\n          )}\n        </TextContainer>\n        {tx.hash ? (\n          <StyledTransactionLink chainId={chainId} hash={tx.hash} />\n        ) : (\n          <span></span>\n        )}\n      </Container>\n    );\n  }\n};\n\nexport { WalletTransaction };\n","import { useCallback, useEffect, useRef, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { TokenInfo } from \"@airswap/types\";\n\nimport { SubmittedTransaction } from \"../../features/transactions/transactionsSlice\";\nimport useWindowSize from \"../../helpers/useWindowSize\";\nimport useAddressOrEnsName from \"../../hooks/useAddressOrEnsName\";\nimport Icon from \"../Icon/Icon\";\nimport { StyledBlockies } from \"../WalletButton/subcomponents/WalletAddress/WalletAddress.styles\";\nimport {\n  Container,\n  BackgroundOverlay,\n  WalletHeader,\n  BlockiesContainer,\n  WalletAddress,\n  WalletLinkContainer,\n  Legend,\n  LegendLine,\n  TransactionContainer,\n  TransactionsContainer,\n  DiconnectButtonContainer,\n  DisconnectButton,\n  NoTransactions,\n  IconContainer,\n} from \"./TransactionsTab.styles\";\nimport WalletLink from \"./subcomponents/WalletLink/WalletLink\";\nimport { WalletTransaction } from \"./subcomponents/WalletTransaction/WalletTransaction\";\n\ntype TransactionsTabType = {\n  address: string;\n  chainId: number;\n  open: boolean;\n  setTransactionsTabOpen: (x: boolean) => void;\n  /**\n   * Callback function for when disconnect button is clicked\n   */\n  onDisconnectWalletClicked: () => void;\n  transactions: SubmittedTransaction[];\n  tokens: TokenInfo[];\n};\n\nconst TransactionsTab = ({\n  address = \"\",\n  chainId,\n  open,\n  setTransactionsTabOpen,\n  onDisconnectWalletClicked,\n  transactions = [],\n  tokens = [],\n}: TransactionsTabType) => {\n  const { width, height } = useWindowSize();\n\n  const [overflow, setOverflow] = useState<boolean>(false);\n\n  const containerRef = useRef<HTMLDivElement>(null);\n  const transactionsScrollRef = useRef<HTMLDivElement>(null);\n  const { t } = useTranslation([\"wallet\"]);\n\n  const addressOrName = useAddressOrEnsName(address);\n\n  const handleClick = useCallback(\n    (e) => {\n      if (containerRef.current && containerRef.current.contains(e.target)) {\n        return;\n      }\n      setTransactionsTabOpen(false);\n    },\n    [setTransactionsTabOpen]\n  );\n\n  const handleEscKey = useCallback(\n    (e) => {\n      if (e.keyCode === 27) {\n        setTransactionsTabOpen(false);\n      }\n    },\n    [setTransactionsTabOpen]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClick);\n    document.addEventListener(\"keydown\", handleEscKey, false);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClick);\n      document.removeEventListener(\"keydown\", handleEscKey, false);\n    };\n  }, [handleClick, handleEscKey]);\n\n  useEffect(() => {\n    if (containerRef.current && transactionsScrollRef.current) {\n      const { offsetTop, scrollHeight } = transactionsScrollRef.current;\n      // subtracting 78 to account for the disconnect button on the bottom\n      setOverflow(\n        scrollHeight + offsetTop > containerRef.current.offsetHeight - 86\n      );\n    }\n  }, [containerRef, transactionsScrollRef, width, height]);\n\n  const pendingTransactions = useMemo(() => {\n    return transactions.filter(\n      (transaction) => transaction.status === \"processing\"\n    );\n  }, [transactions]);\n\n  const completedTransactions = useMemo(() => {\n    return transactions.filter(\n      (transaction) => transaction.status !== \"processing\"\n    );\n  }, [transactions]);\n\n  return (\n    <>\n      <BackgroundOverlay open={open} />\n      <Container open={open} ref={containerRef}>\n        <WalletHeader>\n          <BlockiesContainer>\n            <StyledBlockies\n              size={8}\n              scale={5}\n              seed={address}\n              bgColor=\"black\"\n              color=\"#2b72ff\"\n            />\n          </BlockiesContainer>\n          <WalletLinkContainer>\n            <WalletAddress>{addressOrName}</WalletAddress>\n            <WalletLink chainId={chainId!} address={address!} />\n          </WalletLinkContainer>\n        </WalletHeader>\n\n        <TransactionsContainer ref={transactionsScrollRef} $overflow={overflow}>\n          <Legend>\n            <LegendLine>{t(\"wallet:activeTransactions\")}</LegendLine>\n          </Legend>\n          <TransactionContainer>\n            {pendingTransactions.length ? (\n              pendingTransactions.map((transaction) => (\n                <WalletTransaction\n                  transaction={transaction}\n                  tokens={tokens}\n                  chainId={chainId!}\n                  key={`${transaction.hash}-${transaction.nonce}`}\n                />\n              ))\n            ) : (\n              <NoTransactions>\n                <IconContainer>\n                  <Icon name=\"transaction\" />\n                </IconContainer>\n                {t(\"wallet:noActiveTransactions\")}\n              </NoTransactions>\n            )}\n          </TransactionContainer>\n          {completedTransactions && (\n            <Legend>\n              <LegendLine>{t(\"wallet:completedTransactions\")}</LegendLine>\n            </Legend>\n          )}\n          <TransactionContainer>\n            {completedTransactions.length > 0 ? (\n              completedTransactions\n                .slice(0, 10)\n                .map((transaction) => (\n                  <WalletTransaction\n                    transaction={transaction}\n                    tokens={tokens}\n                    chainId={chainId!}\n                    key={transaction.hash}\n                  />\n                ))\n            ) : (\n              <NoTransactions>\n                <IconContainer>\n                  <Icon name=\"transaction\" />\n                </IconContainer>\n                {t(\"wallet:noCompletedTransactions\")}\n              </NoTransactions>\n            )}\n          </TransactionContainer>\n        </TransactionsContainer>\n        <DiconnectButtonContainer>\n          <DisconnectButton\n            aria-label={t(\"wallet:disconnectWallet\")}\n            onClick={onDisconnectWalletClicked}\n          >\n            {t(\"wallet:disconnectWallet\")}\n          </DisconnectButton>\n        </DiconnectButtonContainer>\n      </Container>\n    </>\n  );\n};\n\nexport default TransactionsTab;\n","import styled from \"styled-components\";\n\nimport { BorderedPill, InputOrButtonBorderStyle } from \"../../style/mixins\";\n\nconst BorderedButton = styled.button`\n  ${BorderedPill}\n  ${InputOrButtonBorderStyle}\n`;\n\nexport default BorderedButton;\n","import { useTranslation } from \"react-i18next\";\n\nimport useAddressOrEnsName from \"../../../../hooks/useAddressOrEnsName\";\nimport BorderedButton from \"../../../../styled-components/BorderedButton/BorderedButton\";\nimport { InfoHeading } from \"../../../Typography/Typography\";\nimport { ConnectionStatusCircle, Button } from \"./WalletAddress.styles\";\n\ntype WalletAddressPropsType = {\n  address: string | null;\n  isButton?: boolean;\n  isUnsupportedNetwork?: boolean;\n  showBlockies?: boolean;\n  transactionsTabOpen: boolean;\n  setTransactionsTabOpen: (x: boolean) => void;\n  setShowWalletList: (x: boolean) => void;\n};\n\nconst WalletAddress = ({\n  address,\n  isUnsupportedNetwork = false,\n  isButton = false,\n  transactionsTabOpen,\n  setTransactionsTabOpen,\n  setShowWalletList,\n}: WalletAddressPropsType) => {\n  const { t } = useTranslation(\"wallet\");\n  const addressOrName = useAddressOrEnsName(address);\n\n  const renderContent = () => (\n    <BorderedButton>\n      <ConnectionStatusCircle $connected={!!address} />\n\n      <InfoHeading>\n        {isUnsupportedNetwork\n          ? t(\"unsupportedNetwork\")\n          : addressOrName\n          ? addressOrName\n          : t(\"notConnected\")}\n      </InfoHeading>\n    </BorderedButton>\n  );\n\n  return (\n    <Button\n      onClick={() => {\n        !!address\n          ? setTransactionsTabOpen(!transactionsTabOpen)\n          : setShowWalletList(true);\n      }}\n    >\n      {renderContent()}\n    </Button>\n  );\n};\n\nexport default WalletAddress;\n","import WalletAddress from \"./subcomponents/WalletAddress/WalletAddress\";\n\nexport type WalletButtonProps = {\n  /**\n   * Address of currenlty connected wallet, if any\n   */\n  address?: string | null;\n  transactionsTabOpen: boolean;\n  setTransactionsTabOpen: (x: boolean) => void;\n  isUnsupportedNetwork?: boolean;\n  setShowWalletList: (x: boolean) => void;\n};\n\nexport const WalletButton = ({\n  address,\n  transactionsTabOpen,\n  setTransactionsTabOpen,\n  isUnsupportedNetwork = false,\n  setShowWalletList,\n}: WalletButtonProps) => {\n  return (\n    <WalletAddress\n      isUnsupportedNetwork={isUnsupportedNetwork}\n      address={address || null}\n      transactionsTabOpen={transactionsTabOpen}\n      setTransactionsTabOpen={setTransactionsTabOpen}\n      setShowWalletList={setShowWalletList}\n    />\n  );\n};\n\nexport default WalletButton;\n","import styled from \"styled-components\";\n\nconst PopoverContainer = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 1rem 2rem;\n  top: 0;\n  right: 0;\n`;\n\nexport default PopoverContainer;\n","import { Web3Provider } from \"@ethersproject/providers\";\nimport { Action, Dispatch } from \"@reduxjs/toolkit\";\n\nimport { mineTransaction, revertTransaction } from \"./transactionActions\";\nimport { SubmittedTransaction } from \"./transactionsSlice\";\n\n/**\n * if pending, call getTransaction to see if it was a success/failure/pending\n * update accordingly. if pending: wait() and poll at a sensible interval.\n * this is only good for request-for-quote orders\n * @param transactionInState\n * @param walletHasChanged\n * @param dispatch\n * @param library\n */\nasync function handleTransaction(\n  transactionInState: SubmittedTransaction,\n  walletHasChanged: boolean,\n  dispatch: Dispatch<Action>,\n  library: Web3Provider\n) {\n  if (transactionInState.status === \"processing\" && transactionInState.hash) {\n    let receipt = await library.getTransactionReceipt(transactionInState.hash);\n    if (receipt !== null) {\n      if (walletHasChanged) return;\n      const status = receipt.status;\n      if (status === 1)\n        dispatch(mineTransaction({ hash: transactionInState.hash }));\n      // success\n      else if (status === 0)\n        dispatch(\n          revertTransaction({\n            hash: transactionInState.hash,\n            reason: \"Reverted\",\n          })\n        ); // reverted\n      return;\n      // Orders will automatically be picked up by swapEventSubscriber\n    } else if (transactionInState.type !== \"Order\") {\n      // Receipt was null, so the transaction is incomplete\n      // Try to get a reference to the transaction in the mem pool - this\n      // can sometimes also return null (e.g. gas price too low or tx only\n      // recently sent) depending on backend.\n      const transaction = await library.getTransaction(transactionInState.hash);\n      if (transaction) {\n        try {\n          await transaction.wait(1);\n          if (!walletHasChanged)\n            dispatch(mineTransaction({ hash: transactionInState.hash })); // success\n        } catch (err) {\n          console.error(err);\n          if (!walletHasChanged)\n            dispatch(\n              revertTransaction({\n                hash: transactionInState.hash,\n                reason: \"Reverted\",\n              })\n            );\n        }\n        return;\n      } else {\n        // if transaction === null, we poll at intervals\n        // assume failed after 30 mins\n        const assumedFailureTime = Date.now() + 30 * 60 * 1000;\n        while (receipt === null && Date.now() <= assumedFailureTime) {\n          // wait 30 seconds\n          await new Promise((res) => setTimeout(res, 30000));\n          receipt = await library!.getTransactionReceipt(\n            transactionInState.hash\n          );\n        }\n        if (!receipt || receipt.status === 0) {\n          if (!walletHasChanged)\n            dispatch(\n              revertTransaction({\n                hash: transactionInState.hash,\n                reason: \"Reverted\",\n              })\n            );\n        } else {\n          if (!walletHasChanged)\n            dispatch(mineTransaction({ hash: transactionInState.hash })); // success\n        }\n      }\n    }\n  }\n}\nexport default handleTransaction;\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\n\nimport {\n  balancesReducer,\n  allowancesReducer,\n} from \"../features/balances/balancesSlice\";\nimport metadataReducer from \"../features/metadata/metadataSlice\";\nimport { subscribeToSavedTokenChangesForLocalStoragePersisting } from \"../features/metadata/metadataSubscriber\";\nimport ordersReducer from \"../features/orders/ordersSlice\";\nimport pricingReducer from \"../features/pricing/pricingSlice\";\nimport registryReducer from \"../features/registry/registrySlice\";\nimport tradeTermsReducer from \"../features/tradeTerms/tradeTermsSlice\";\nimport transactionsReducer from \"../features/transactions/transactionsSlice\";\nimport userSettingsReducer from \"../features/userSettings/userSettingsSlice\";\nimport walletReducer from \"../features/wallet/walletSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    allowances: allowancesReducer,\n    transactions: transactionsReducer,\n    balances: balancesReducer,\n    metadata: metadataReducer,\n    tradeTerms: tradeTermsReducer,\n    orders: ordersReducer,\n    pricing: pricingReducer,\n    wallet: walletReducer,\n    registry: registryReducer,\n    userSettings: userSettingsReducer,\n  },\n});\n\nsubscribeToSavedTokenChangesForLocalStoragePersisting();\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import { store } from \"../../app/store\";\nimport {\n  SubmittedTransaction,\n  TransactionsState,\n} from \"../transactions/transactionsSlice\";\nimport {\n  getActiveTokensLocalStorageKey,\n  getTransactionsLocalStorageKey,\n} from \"./metadataApi\";\n\nexport const subscribeToSavedTokenChangesForLocalStoragePersisting = () => {\n  const activeTokensCache: {\n    [address: string]: {\n      [chainId: number]: string[];\n    };\n  } = {};\n  const transactionCache: {\n    [address: string]: {\n      [chainId: number]: SubmittedTransaction[];\n    };\n  } = {};\n\n  let currentChainId: number;\n  let currentTransaction: TransactionsState;\n\n  store.subscribe(() => {\n    const { wallet, metadata, transactions } = store.getState();\n    if (!wallet.connected) return;\n\n    let previousChainId = currentChainId;\n    currentChainId = wallet.chainId!;\n\n    let previousTransaction = currentTransaction;\n    currentTransaction = transactions;\n\n    if (\n      previousTransaction !== currentTransaction ||\n      previousChainId !== currentChainId\n    ) {\n      // handles change in transactions and persists all transactions to localStorage\n      // Store only the top 3 transactions\n      const txs: TransactionsState = JSON.parse(\n        localStorage.getItem(\n          getTransactionsLocalStorageKey(wallet.address!, wallet.chainId!)\n        )!\n      ) || { all: [] };\n\n      const mostRecentTransactions = transactions.all;\n\n      if (transactionCache[wallet.address!] === undefined) {\n        transactionCache[wallet.address!] = {};\n        transactionCache[wallet.address!][wallet.chainId!] = txs.all.slice(\n          0,\n          10\n        );\n      }\n      if (\n        previousChainId === currentChainId &&\n        transactions.all.length &&\n        transactionCache[wallet.address!][wallet.chainId!] !== transactions.all\n      ) {\n        transactionCache[wallet.address!][\n          wallet.chainId!\n        ] = mostRecentTransactions;\n        localStorage.setItem(\n          getTransactionsLocalStorageKey(wallet.address!, wallet.chainId!),\n          JSON.stringify({\n            all: mostRecentTransactions,\n          })\n        );\n      }\n    }\n\n    if (!activeTokensCache[wallet.address!]) {\n      activeTokensCache[wallet.address!] = {};\n    }\n    const cachedTokensForActiveWallet =\n      activeTokensCache[wallet.address!][wallet.chainId!];\n    if (\n      metadata.tokens.active.length &&\n      cachedTokensForActiveWallet !== metadata.tokens.active\n    ) {\n      // active tokens have changed, persist to local storage.\n      activeTokensCache[wallet.address!][wallet.chainId!] =\n        metadata.tokens.active;\n      localStorage.setItem(\n        getActiveTokensLocalStorageKey(wallet.address!, wallet.chainId!),\n        metadata.tokens.active.join(\",\")\n      );\n    }\n  });\n};\n","import { Action, Dispatch } from \"@reduxjs/toolkit\";\n\nimport BigNumber from \"bignumber.js\";\nimport { Contract } from \"ethers\";\n\nimport { store } from \"../../app/store\";\nimport { notifyTransaction } from \"../../components/Toasts/ToastController\";\nimport { mineTransaction } from \"./transactionActions\";\nimport {\n  LastLookTransaction,\n  ProtocolType,\n  SubmittedOrder,\n  SubmittedTransaction,\n  TransactionsState,\n} from \"./transactionsSlice\";\n\nconst handleReceipt = ({\n  nonce,\n  transactionHash,\n  signerWallet,\n  transaction,\n  protocol,\n  chainId,\n  dispatch,\n}: {\n  nonce: string;\n  transactionHash: string;\n  signerWallet: string;\n  transaction: SubmittedTransaction;\n  protocol?: ProtocolType;\n  chainId: number;\n  dispatch: Dispatch<Action>;\n}) => {\n  const tokens = Object.values(store.getState().metadata.tokens.all);\n\n  dispatch(\n    mineTransaction({\n      signerWallet: signerWallet,\n      nonce: nonce,\n      hash: transactionHash,\n      protocol,\n    })\n  );\n\n  notifyTransaction(\n    \"Order\",\n    //@ts-ignore\n    transaction,\n    tokens,\n    false,\n    chainId\n  );\n};\n\ntype SwapHex = {\n  _hex?: BigNumber;\n  _isBigNumber: boolean;\n};\ntype SwapEvent = {\n  transactionHash: string;\n  address: string;\n  removed: boolean;\n  eventSignature: string;\n  topics: string[];\n};\n\nexport type SwapRow = string | SwapHex | SwapEvent;\n\nfunction isSwapHex(data: SwapRow): data is SwapHex {\n  return (data as SwapHex)._isBigNumber !== undefined;\n}\n\nfunction isSwapEvent(data: SwapRow): data is SwapEvent {\n  return (data as SwapEvent).transactionHash !== undefined;\n}\nfunction isSwapAddress(data: SwapRow): data is string {\n  return typeof data === \"string\";\n}\n\nexport const mapSwapEvent = (\n  data: SwapRow[],\n  chainId: number,\n  account: string,\n  transactions: TransactionsState\n) => {\n  let protocol: ProtocolType | undefined;\n  const nonce = isSwapHex(data[0]) ? data[0].toString() : \"UNKNOWN\";\n  let signerWallet = isSwapAddress(data[2]) ? data[2] : \"\";\n  const transactionHash = isSwapEvent(data[9]) ? data[9].transactionHash : \"\";\n\n  // First search for the transaction in our pending state by hash.\n  // This will match either direct RFQ orders (senderWallet === account) or\n  // RFQ orders going through the wrapper (senderWallet === wrapper).\n  let transaction: SubmittedTransaction | null =\n    transactions.all.find((t: any) => t.hash === transactionHash) || null;\n\n  // If we haven't got a transaction with this hash in our history, then it's\n  // either a last look order (if we're the signer) OR it's someone else's\n  // swap. (Someone else includes \"us\" in another browser).\n  if (!transaction && signerWallet.toLowerCase() === account.toLowerCase()) {\n    transaction = transactions.all.find(\n      (t: SubmittedTransaction | SubmittedOrder) =>\n        t.nonce === nonce &&\n        (t as SubmittedOrder).order?.signerWallet.toLowerCase() ===\n          signerWallet.toLowerCase()\n    ) as LastLookTransaction;\n  }\n\n  if (transaction) protocol = transaction.protocol;\n\n  return {\n    signerWallet,\n    nonce,\n    transactionHash,\n    protocol,\n    transaction,\n  };\n};\n\nexport default function subscribeToSwapEvents(params: {\n  lightContract: Contract;\n  chainId: number;\n  account: string;\n  library: any;\n  dispatch: Dispatch;\n}) {\n  const { lightContract, account, dispatch, chainId } = params;\n  lightContract.on(\"Swap\", async (...data) => {\n    const transactions = store.getState().transactions;\n    const {\n      nonce,\n      signerWallet,\n      transactionHash,\n      protocol,\n      transaction,\n    } = mapSwapEvent(data, chainId, account, transactions);\n\n    // If we don't have a 'transaction', we don't already know about this swap\n    // and therefore don't need to update the UI.\n    if (!transaction) return;\n\n    return handleReceipt({\n      nonce,\n      signerWallet,\n      transactionHash,\n      protocol,\n      chainId,\n      transaction,\n      dispatch,\n    });\n  });\n}\n","import SUPPORTED_WALLET_PROVIDERS, {\n  WalletProvider,\n} from \"../../constants/supportedWalletProviders\";\n\nconst LAST_ACCOUNT_LOCAL_STORAGE_KEY = `airswap/lastConnectedAccount`;\n\nconst saveLastAccount = (address: string, provider: WalletProvider) => {\n  localStorage.setItem(\n    LAST_ACCOUNT_LOCAL_STORAGE_KEY,\n    `${provider.name}/${address}`\n  );\n};\n\nconst clearLastAccount = () => {\n  localStorage.setItem(LAST_ACCOUNT_LOCAL_STORAGE_KEY, \"\");\n};\n\nconst loadLastAccount = () => {\n  try {\n    const storedString = localStorage.getItem(LAST_ACCOUNT_LOCAL_STORAGE_KEY);\n    if (!storedString) throw new Error(\"No connected accounts saved\");\n    const [providerName, address] = storedString.split(\"/\");\n    const provider = SUPPORTED_WALLET_PROVIDERS.find(\n      (p) => p.name === providerName\n    );\n    if (!provider) throw new Error(`Could not find provider: ${providerName}`);\n    return {\n      provider,\n      address,\n    };\n  } catch (e) {\n    return null;\n  }\n};\n\nexport { loadLastAccount, saveLastAccount, clearLastAccount };\n","import styled from \"styled-components/macro\";\n\nimport { Wallet } from \"../../features/wallet/Wallet\";\nimport breakPoints from \"../../style/breakpoints\";\nimport { sizes } from \"../../style/sizes\";\nimport { StyledPageProps } from \"./Page\";\n\ntype StyledWalletProps = {\n  isOpen?: boolean;\n};\n\nexport const StyledWallet = styled(Wallet)<StyledWalletProps>`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  position: absolute;\n  top: 2rem;\n  right: 2rem;\n  transition: transform 0.3s ease-in-out;\n  z-index: 1001;\n\n  @media (prefers-reduced-motion: reduce) {\n    transition: none;\n  }\n`;\n\nexport const StyledPage = styled.div<StyledPageProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  min-width: 18rem;\n  min-height: ${(props) =>\n    props.adjustForBookmarkWarning ? \"calc(100vh - 40px)\" : \"100vh\"};\n  padding: 2rem 0 0;\n\n  @media (min-height: 50rem) {\n    align-items: center;\n    height: ${(props) =>\n      props.adjustForBookmarkWarning ? \"calc(100vh - 40px)\" : \"100vh\"};\n    min-height: 50rem;\n  }\n\n  @media ${breakPoints.tabletPortraitUp} {\n    padding-left: ${sizes.toolBarWidth};\n  }\n\n  @media ${breakPoints.tabletLandscapeUp} {\n    padding-left: 0;\n  }\n`;\n","import { FC, useEffect, useState } from \"react\";\nimport { useBeforeunload } from \"react-beforeunload\";\n\nimport { Light, Wrapper } from \"@airswap/libraries\";\nimport * as LightContract from \"@airswap/light/build/contracts/Light.sol/Light.json\";\n//@ts-ignore\nimport * as lightDeploys from \"@airswap/light/deploys.js\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { UnsupportedChainIdError, useWeb3React } from \"@web3-react/core\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\n\nimport { Contract } from \"ethers\";\n\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\nimport EthBalance from \"../../components/EthButton/EthBalance\";\nimport SettingsButton from \"../../components/SettingsButton/SettingsButton\";\nimport TransactionsTab from \"../../components/TransactionsTab/TransactionsTab\";\nimport WalletButton from \"../../components/WalletButton/WalletButton\";\nimport nativeETH from \"../../constants/nativeETH\";\nimport {\n  AbstractConnector,\n  WalletProvider,\n} from \"../../constants/supportedWalletProviders\";\nimport SUPPORTED_WALLET_PROVIDERS from \"../../constants/supportedWalletProviders\";\nimport PopoverContainer from \"../../styled-components/PopoverContainer/PopoverContainer\";\nimport { subscribeToTransfersAndApprovals } from \"../balances/balancesApi\";\nimport {\n  decrementBalanceBy,\n  incrementBalanceBy,\n  requestActiveTokenAllowancesLight,\n  requestActiveTokenAllowancesWrapper,\n  requestActiveTokenBalances,\n  selectBalances,\n  setAllowanceLight,\n  setAllowanceWrapper,\n} from \"../balances/balancesSlice\";\nimport { getTransactionsLocalStorageKey } from \"../metadata/metadataApi\";\nimport {\n  fetchAllTokens,\n  fetchUnkownTokens,\n  selectActiveTokens,\n  selectAllTokenInfo,\n} from \"../metadata/metadataSlice\";\nimport { fetchSupportedTokens } from \"../registry/registrySlice\";\nimport handleTransaction from \"../transactions/handleTransaction\";\nimport subscribeToSwapEvents from \"../transactions/swapEventSubscriber\";\nimport {\n  selectTransactions,\n  setTransactions,\n  TransactionsState,\n} from \"../transactions/transactionsSlice\";\nimport {\n  clearLastAccount,\n  loadLastAccount,\n  saveLastAccount,\n} from \"./walletApi\";\nimport {\n  selectWallet,\n  setWalletConnected,\n  setWalletDisconnected,\n} from \"./walletSlice\";\n\ntype WalletPropsType = {\n  setShowWalletList: (x: boolean) => void;\n  transactionsTabOpen: boolean;\n  setTransactionsTabOpen: (x: boolean) => void;\n};\n\nexport const Wallet: FC<WalletPropsType> = ({\n  setShowWalletList,\n  transactionsTabOpen,\n  setTransactionsTabOpen,\n}) => {\n  const {\n    chainId,\n    account,\n    activate,\n    deactivate,\n    active,\n    library,\n    error,\n  } = useWeb3React<Web3Provider>();\n\n  // Redux\n  const dispatch = useAppDispatch();\n  const activeTokens = useAppSelector(selectActiveTokens);\n  const balances = useAppSelector(selectBalances);\n  const { providerName } = useAppSelector(selectWallet);\n  const transactions = useAppSelector(selectTransactions);\n  const allTokens = useAppSelector(selectAllTokenInfo);\n\n  // Local component state\n  const [, setIsActivating] = useState<boolean>(false);\n  const [settingsOpen, setSettingsOpen] = useState<boolean>(false);\n\n  const [connector, setConnector] = useState<AbstractConnector>();\n  const [provider, setProvider] = useState<WalletProvider>();\n  const [activated, setActivated] = useState(false);\n  const [lightContract, setLightContract] = useState<Contract>();\n\n  useBeforeunload(() => {\n    if (lightContract) {\n      lightContract.removeAllListeners(\"Swap\");\n    }\n  });\n\n  useEffect(() => {\n    if (library && chainId && account && lightContract) {\n      subscribeToSwapEvents({\n        account: account!,\n        lightContract,\n        //@ts-ignore\n        library,\n        chainId,\n        dispatch,\n      });\n      return () => {\n        if (lightContract) {\n          lightContract.removeAllListeners(\"Swap\");\n        }\n      };\n    }\n  }, [dispatch, library, chainId, account, lightContract]);\n  useEffect(() => {\n    if (chainId && account && library) {\n      const lightContract = new Contract(\n        lightDeploys[chainId],\n        LightContract.abi,\n        //@ts-ignore\n        library\n      );\n      setLightContract(lightContract);\n    }\n  }, [library, chainId, account]);\n\n  // Auto-activate if user has connected before on (first render)\n  useEffect(() => {\n    const lastConnectedAccount = loadLastAccount();\n    if (lastConnectedAccount?.address) {\n      setIsActivating(true);\n      const connector = lastConnectedAccount.provider.getConnector();\n      setConnector(connector);\n      setProvider(lastConnectedAccount.provider);\n      activate(connector)\n        .then(() => {\n          setActivated(true);\n        })\n        .finally(() => {\n          setIsActivating(false);\n        });\n    }\n  }, [activate, activated]);\n\n  // Side effects for connecting a wallet from SwapWidget\n\n  useEffect(() => {\n    if (providerName) {\n      const provider = SUPPORTED_WALLET_PROVIDERS.find(\n        (provider) => provider.name === providerName\n      );\n      setProvider(provider);\n      setConnector(provider!.getConnector());\n    }\n  }, [providerName]);\n\n  // Trigger request for balances and allowances once account is connected\n  useEffect(() => {\n    if (active && account && chainId && library && connector && provider) {\n      // Dispatch a general action to indicate wallet has changed\n      dispatch(\n        setWalletConnected({\n          chainId,\n          address: account,\n        })\n      );\n      saveLastAccount(account, provider);\n      dispatch(\n        requestActiveTokenAllowancesLight({\n          provider: library,\n        })\n      );\n      dispatch(\n        requestActiveTokenAllowancesWrapper({\n          provider: library,\n        })\n      );\n\n      Promise.all([\n        dispatch(fetchAllTokens()),\n        dispatch(\n          fetchSupportedTokens({\n            provider: library,\n          } as any)\n        ),\n      ]).then(() => {\n        dispatch(\n          requestActiveTokenBalances({\n            provider: library,\n          })\n        );\n        dispatch(\n          fetchUnkownTokens({\n            provider: library,\n          } as any)\n        );\n      });\n    } else {\n      dispatch(setWalletDisconnected());\n    }\n  }, [active, account, chainId, dispatch, library, connector, provider]);\n\n  // Subscribe to changes in balance\n\n  useEffect(() => {\n    if (\n      !library ||\n      !account ||\n      !connector ||\n      chainId === undefined ||\n      !activeTokens.length ||\n      balances.lastFetch === null ||\n      balances.status !== \"idle\"\n    )\n      return;\n\n    let teardownTransferListener: () => void;\n    if (activeTokens.length) {\n      teardownTransferListener = subscribeToTransfersAndApprovals({\n        activeTokenAddresses: activeTokens.map((t) => t.address),\n        provider: library,\n        walletAddress: account,\n        spenderAddress: Light.getAddress(),\n        onBalanceChange: (tokenAddress, amount, direction) => {\n          const actionCreator =\n            direction === \"in\" ? incrementBalanceBy : decrementBalanceBy;\n          dispatch(\n            actionCreator({\n              tokenAddress,\n              amount: amount.toString(),\n            })\n          );\n        },\n        onApproval: (tokenAddress, spenderAddress, amount) => {\n          const actionCreator =\n            spenderAddress === Wrapper.getAddress().toLowerCase()\n              ? setAllowanceWrapper\n              : setAllowanceLight;\n          dispatch(\n            actionCreator({\n              tokenAddress,\n              amount: amount.toString(),\n            })\n          );\n        },\n      });\n    }\n\n    return () => {\n      if (teardownTransferListener) {\n        teardownTransferListener();\n      }\n    };\n  }, [\n    activeTokens,\n    account,\n    library,\n    connector,\n    dispatch,\n    chainId,\n    balances.lastFetch,\n    balances.status,\n  ]);\n\n  useEffect(() => {\n    // Create a flag we can set to handle wallet changing between async operations\n    let walletHasChanged = false;\n\n    // get transaction state from local storage and update the transactions\n    if (chainId && account && library) {\n      const transactionsLocalStorage: TransactionsState = JSON.parse(\n        localStorage.getItem(\n          getTransactionsLocalStorageKey(account!, chainId!)\n        )!\n      ) || { all: [] };\n      dispatch(setTransactions(transactionsLocalStorage));\n\n      // check from all responses if one is pending... if pending, call getTransaction\n      // to see if it was a success/failure/pending. update accordingly. if pending: wait()\n      // and poll at a sensible interval.\n      transactionsLocalStorage.all.forEach(async (tx) => {\n        await handleTransaction(tx, walletHasChanged, dispatch, library);\n      });\n    }\n    return () => {\n      // Library & dispatch won't change, so when we tear down it's because\n      // the wallet has changed. The useEffect will run after this and set up\n      // everything for the new wallet.\n      walletHasChanged = true;\n    };\n  }, [chainId, dispatch, library, account]);\n\n  return (\n    <>\n      <PopoverContainer>\n        {balances && chainId && (\n          <EthBalance balance={balances.values[nativeETH[chainId!].address]!} />\n        )}\n        <WalletButton\n          address={account}\n          isUnsupportedNetwork={\n            error && error instanceof UnsupportedChainIdError\n          }\n          transactionsTabOpen={transactionsTabOpen}\n          setTransactionsTabOpen={() => setTransactionsTabOpen(true)}\n          setShowWalletList={setShowWalletList}\n        />\n        <SettingsButton\n          settingsOpen={settingsOpen}\n          setSettingsOpen={setSettingsOpen}\n        />\n      </PopoverContainer>\n      <TransactionsTab\n        address={account!}\n        chainId={chainId!}\n        open={transactionsTabOpen}\n        setTransactionsTabOpen={setTransactionsTabOpen}\n        onDisconnectWalletClicked={() => {\n          clearLastAccount();\n          deactivate();\n          if (connector instanceof WalletConnectConnector) {\n            connector.close();\n          }\n          setTransactionsTabOpen(false);\n        }}\n        transactions={transactions}\n        tokens={allTokens}\n      />\n    </>\n  );\n};\n","import React, { FC, ReactElement, useState } from \"react\";\n\nimport { useAppSelector } from \"../../app/hooks\";\nimport { selectUserSettings } from \"../../features/userSettings/userSettingsSlice\";\nimport useWindowSize from \"../../helpers/useWindowSize\";\nimport InformationModals, {\n  InformationType,\n} from \"../InformationModals/InformationModals\";\nimport SocialButtons from \"../SocialButtons/SocialButtons\";\nimport SwapWidget from \"../SwapWidget/SwapWidget\";\nimport Toaster from \"../Toasts/Toaster\";\nimport Toolbar from \"../Toolbar/Toolbar\";\nimport WidgetFrame from \"../WidgetFrame/WidgetFrame\";\nimport { StyledPage, StyledWallet } from \"./Page.styles\";\n\nexport type StyledPageProps = {\n  /**\n   * if set, take off the space needed for the bookmarkwarning from the min-height and height of StyledPage\n   */\n  adjustForBookmarkWarning: boolean;\n};\n\nconst Page: FC = (): ReactElement => {\n  const [\n    activeModalPage,\n    setActiveModalPage,\n  ] = useState<InformationType | null>(null);\n  const [transactionsTabOpen, setTransactionsTabOpen] = useState<boolean>(\n    false\n  );\n  const [showWalletList, setShowWalletList] = useState<boolean>(false);\n\n  const { showBookmarkWarning } = useAppSelector(selectUserSettings);\n  const { width } = useWindowSize();\n  /* using 480 from breakpoint size defined at src/style/breakpoints.ts */\n  const adjustForBookmarkWarning = width! > 480 && showBookmarkWarning;\n\n  const onToolbarButtonClick = (type: InformationType) => {\n    setActiveModalPage(type);\n  };\n\n  const onCloseModalClick = () => {\n    setActiveModalPage(null);\n  };\n\n  return (\n    <StyledPage adjustForBookmarkWarning={adjustForBookmarkWarning}>\n      <Toaster open={transactionsTabOpen} />\n      <Toolbar onButtonClick={onToolbarButtonClick} />\n      <StyledWallet\n        transactionsTabOpen={transactionsTabOpen}\n        setTransactionsTabOpen={setTransactionsTabOpen}\n        setShowWalletList={setShowWalletList}\n      />\n      <WidgetFrame>\n        <SwapWidget\n          showWalletList={showWalletList}\n          setShowWalletList={setShowWalletList}\n          onTrackTransactionClicked={() => setTransactionsTabOpen(true)}\n        />\n      </WidgetFrame>\n      <SocialButtons />\n      <InformationModals\n        onCloseModalClick={onCloseModalClick}\n        activeModal={activeModalPage}\n      />\n    </StyledPage>\n  );\n};\n\nexport default Page;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { useAppSelector } from \"../../app/hooks\";\nimport { selectUserSettings } from \"../../features/userSettings/userSettingsSlice\";\nimport useWindowSize from \"../../helpers/useWindowSize\";\nimport { StyledPage } from \"../Page/Page.styles\";\nimport WidgetFrame from \"../WidgetFrame/WidgetFrame\";\n\nconst PageLoader: FC = (): ReactElement => {\n  const { showBookmarkWarning } = useAppSelector(selectUserSettings);\n  const { width } = useWindowSize();\n  /* using 480 from breakpoint size defined at src/style/breakpoints.ts */\n  const adjustForBookmarkWarning = width! > 800 && showBookmarkWarning;\n\n  return (\n    <StyledPage adjustForBookmarkWarning={adjustForBookmarkWarning}>\n      <WidgetFrame />\n    </StyledPage>\n  );\n};\n\nexport default PageLoader;\n","import { initReactI18next } from \"react-i18next\";\n\nimport i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport HttpBackend from \"i18next-http-backend\";\n\ni18n\n  // load translation using http -> see /public/locales\n  .use(HttpBackend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: \"en\",\n    ns: \"common\",\n    load: \"languageOnly\",\n    debug: process.env.NODE_ENV !== \"production\",\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    react: {\n      useSuspense: true,\n    },\n    backend: {\n      loadPath: process.env.PUBLIC_URL + \"/locales/{{lng}}/{{ns}}.json\",\n    },\n  });\n\nexport default i18n;\n","import \"@fontsource/dm-mono/500.css\";\n\nimport { createGlobalStyle } from \"styled-components/macro\";\n\nimport reset from \"./reset\";\nimport { fontLoos, fontMono } from \"./themes\";\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n  \n  body {\n    margin: 0;\n    padding: 0;\n    overflow-x: hidden;\n    font-family: ${fontLoos};\n    color: ${(props) =>\n      props.theme.name === \"dark\"\n        ? props.theme.colors.white\n        : props.theme.colors.primary};\n    background: ${(props) => props.theme.colors.black};\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n      monospace;\n  }\n  \n  input[inputmode=\"decimal\"] {\n    font-family: ${fontMono};\n  }\n\n  p {\n    font-size: ${(props) => props.theme.typography.paragraph.fontSize};\n    font-weight: ${(props) => props.theme.typography.paragraph.fontWeight};\n    line-height: ${(props) => props.theme.typography.paragraph.lineHeight};\n  }\n`;\n\nexport default GlobalStyle;\n","const reset = `\n  /* ! tailwindcss v2.1.4 | MIT License | https://tailwindcss.com */\n\n  /*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */\n\n  /*\n  Document\n  ========\n  */\n\n  /**\n  Use a better box model (opinionated).\n  */\n\n  *,\n  ::before,\n  ::after {\n    box-sizing: border-box;\n  }\n\n  /**\n  Use a more readable tab size (opinionated).\n  */\n\n  html {\n    -moz-tab-size: 4;\n    tab-size: 4;\n  }\n\n  /**\n  1. Correct the line height in all browsers.\n  2. Prevent adjustments of font size after orientation changes in iOS.\n  */\n\n  html {\n    line-height: 1.15; /* 1 */\n    -webkit-text-size-adjust: 100%; /* 2 */\n  }\n\n  /*\n  Grouping content\n  ================\n  */\n\n  /**\n  1. Add the correct height in Firefox.\n  2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n  */\n\n  hr {\n    height: 0; /* 1 */\n    color: inherit; /* 2 */\n  }\n\n  /*\n  Text-level semantics\n  ====================\n  */\n\n  /**\n  Add the correct text decoration in Chrome, Edge, and Safari.\n  */\n\n  abbr[title] {\n    text-decoration: underline dotted;\n  }\n\n  /**\n  Add the correct font weight in Edge and Safari.\n  */\n\n  b,\n  strong {\n    font-weight: bolder;\n  }\n\n  /**\n  1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n  2. Correct the odd 'em' font sizing in all browsers.\n  */\n\n  code,\n  kbd,\n  samp,\n  pre {\n    font-family: ui-monospace,\n    SFMono-Regular,\n    Consolas,\n    'Liberation Mono',\n    Menlo,\n    monospace; /* 1 */\n    font-size: 1em; /* 2 */\n  }\n\n  /**\n  Add the correct font size in all browsers.\n  */\n\n  small {\n    font-size: 80%;\n  }\n\n  /**\n  Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.\n  */\n\n  sub,\n  sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n\n  sub {\n    bottom: -0.25em;\n  }\n\n  sup {\n    top: -0.5em;\n  }\n\n  /*\n  Tabular data\n  ============\n  */\n\n  /**\n  1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n  2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n  */\n\n  table {\n    text-indent: 0; /* 1 */\n    border-color: inherit; /* 2 */\n  }\n\n  /*\n  Forms\n  =====\n  */\n\n  /**\n  1. Change the font styles in all browsers.\n  2. Remove the margin in Firefox and Safari.\n  */\n\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    font-family: inherit; /* 1 */\n    font-size: 100%; /* 1 */\n    line-height: 1.15; /* 1 */\n    margin: 0; /* 2 */\n  }\n\n  /**\n  Remove the inheritance of text transform in Edge and Firefox.\n  1. Remove the inheritance of text transform in Firefox.\n  */\n\n  button,\n  select { /* 1 */\n    text-transform: none;\n  }\n\n  /**\n  Correct the inability to style clickable types in iOS and Safari.\n  */\n\n  button,\n  [type='button'],\n  [type='reset'],\n  [type='submit'] {\n    -webkit-appearance: button;\n  }\n\n  /**\n  Remove the inner border and padding in Firefox.\n  */\n\n  ::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n  }\n\n  /**\n  Restore the focus styles unset by the previous rule.\n  */\n\n  :-moz-focusring {\n    outline: 1px dotted ButtonText;\n  }\n\n  /**\n  Remove the additional ':invalid' styles in Firefox.\n  See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737\n  */\n\n  :-moz-ui-invalid {\n    box-shadow: none;\n  }\n\n  /**\n  Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.\n  */\n\n  legend {\n    padding: 0;\n  }\n\n  /**\n  Add the correct vertical alignment in Chrome and Firefox.\n  */\n\n  progress {\n    vertical-align: baseline;\n  }\n\n  /**\n  Correct the cursor style of increment and decrement buttons in Safari.\n  */\n\n  ::-webkit-inner-spin-button,\n  ::-webkit-outer-spin-button {\n    height: auto;\n  }\n\n  /**\n  1. Correct the odd appearance in Chrome and Safari.\n  2. Correct the outline style in Safari.\n  */\n\n  [type='search'] {\n    -webkit-appearance: textfield; /* 1 */\n    outline-offset: -2px; /* 2 */\n  }\n\n  /**\n  Remove the inner padding in Chrome and Safari on macOS.\n  */\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  /**\n  1. Correct the inability to style clickable types in iOS and Safari.\n  2. Change font properties to 'inherit' in Safari.\n  */\n\n  ::-webkit-file-upload-button {\n    -webkit-appearance: button; /* 1 */\n    font: inherit; /* 2 */\n  }\n\n  /*\n  Interactive\n  ===========\n  */\n\n  /*\n  Add the correct display in Chrome and Safari.\n  */\n\n  summary {\n    display: list-item;\n  }\n\n  /**\n   * Manually forked from SUIT CSS Base: https://github.com/suitcss/base\n   * A thin layer on top of normalize.css that provides a starting point more\n   * suitable for web applications.\n   */\n\n  /**\n   * Removes the default spacing and border for appropriate elements.\n   */\n\n  blockquote,\n  dl,\n  dd,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  hr,\n  figure,\n  p,\n  pre {\n    margin: 0;\n  }\n\n  button {\n    background-color: transparent;\n    background-image: none;\n  }\n\n  /**\n   * Work around a Firefox/IE bug where the transparent \\`button\\` background\n   * results in a loss of the default \\`button\\` focus styles.\n   */\n\n  button:focus {\n    outline: 1px dotted;\n    outline: 5px auto -webkit-focus-ring-color;\n  }\n\n  fieldset {\n    margin: 0;\n    padding: 0;\n  }\n\n  ol,\n  ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  /**\n   * Tailwind custom reset styles\n   */\n\n  /**\n   * 1. Use the user's configured \\`sans\\` font-family (with Tailwind's default\n   *    sans-serif font stack as a fallback) as a sane default.\n   * 2. Use Tailwind's default \"normal\" line-height so the user isn't forced\n   *    to override it to ensure consistency even when using the default theme.\n   */\n\n  html {\n    font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; /* 1 */\n    line-height: 1.5; /* 2 */\n  }\n\n  /**\n   * Inherit font-family and line-height from \\`html\\` so users can set them as\n   * a class directly on the \\`html\\` element.\n   */\n\n  body {\n    font-family: inherit;\n    line-height: inherit;\n  }\n\n  /**\n   * 1. Prevent padding and border from affecting element width.\n   *\n   *    We used to set this in the html element and inherit from\n   *    the parent element for everything else. This caused issues\n   *    in shadow-dom-enhanced elements like <details> where the content\n   *    is wrapped by a div with box-sizing set to \\`content-box\\`.\n   *\n   *    https://github.com/mozdevs/cssremedy/issues/4\n   *\n   *\n   * 2. Allow adding a border to an element by just adding a border-width.\n   *\n   *    By default, the way the browser specifies that an element should have no\n   *    border is by setting it's border-style to \\`none\\` in the user-agent\n   *    stylesheet.\n   *\n   *    In order to easily add borders to elements by just setting the \\`border-width\\`\n   *    property, we change the default border-style for all elements to \\`solid\\`, and\n   *    use border-width to hide them instead. This way our \\`border\\` utilities only\n   *    need to set the \\`border-width\\` property instead of the entire \\`border\\`\n   *    shorthand, making our border utilities much more straightforward to compose.\n   *\n   *    https://github.com/tailwindcss/tailwindcss/pull/116\n   */\n\n  *,\n  ::before,\n  ::after {\n    box-sizing: border-box; /* 1 */\n    border-width: 0; /* 2 */\n    border-style: solid; /* 2 */\n    border-color: #e5e7eb; /* 2 */\n  }\n\n  /*\n   * Ensure horizontal rules are visible by default\n   */\n\n  hr {\n    border-top-width: 1px;\n  }\n\n  /**\n   * Undo the \\`border-style: none\\` reset that Normalize applies to images so that\n   * our \\`border-{width}\\` utilities have the expected effect.\n   *\n   * The Normalize reset is unnecessary for us since we default the border-width\n   * to 0 on all elements.\n   *\n   * https://github.com/tailwindcss/tailwindcss/issues/362\n   */\n\n  img {\n    border-style: solid;\n  }\n\n  textarea {\n    resize: vertical;\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    opacity: 1;\n    color: #9ca3af;\n  }\n\n  button,\n  [role=\"button\"] {\n    cursor: pointer;\n  }\n\n  table {\n    border-collapse: collapse;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-size: inherit;\n    font-weight: inherit;\n  }\n\n  /**\n   * Reset links to optimize for opt-in styling instead of\n   * opt-out.\n   */\n\n  a {\n    color: inherit;\n    text-decoration: inherit;\n  }\n\n  /**\n   * Reset form element properties that are easy to forget to\n   * style explicitly so you don't inadvertently introduce\n   * styles that deviate from your design system. These styles\n   * supplement a partial reset that is already applied by\n   * normalize.css.\n   */\n\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    padding: 0;\n    line-height: inherit;\n    color: inherit;\n  }\n\n  /**\n   * Use the configured 'mono' font family for elements that\n   * are expected to be rendered with a monospace font, falling\n   * back to the system monospace stack if there is no configured\n   * 'mono' font family.\n   */\n\n  pre,\n  code,\n  kbd,\n  samp {\n    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n  }\n\n  /**\n   * Make replaced elements \\`display: block\\` by default as that's\n   * the behavior you want almost all of the time. Inspired by\n   * CSS Remedy, with \\`svg\\` added as well.\n   *\n   * https://github.com/mozdevs/cssremedy/issues/14\n   */\n\n  img,\n  svg,\n  video,\n  canvas,\n  audio,\n  iframe,\n  embed,\n  object {\n    display: block;\n    vertical-align: middle;\n    width: inherit;\n  }\n`;\n\nexport default reset;\n","import { Suspense } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\n\nimport BigNumber from \"bignumber.js\";\nimport { ThemeProvider } from \"styled-components/macro\";\nimport { ModalProvider } from \"styled-react-modal\";\n\nimport { useAppDispatch, useAppSelector } from \"./app/hooks\";\nimport BookmarkWarning from \"./components/BookmarkWarning/BookmarkWarning\";\nimport Page from \"./components/Page/Page\";\nimport PageLoader from \"./components/PageLoader/PageLoader\";\nimport LastLookProvider from \"./contexts/lastLook/LastLook\";\nimport {\n  disableBookmarkWarning,\n  selectUserSettings,\n} from \"./features/userSettings/userSettingsSlice\";\nimport useWindowSize from \"./helpers/useWindowSize\";\nimport \"./i18n/i18n\";\nimport GlobalStyle from \"./style/GlobalStyle\";\nimport { darkTheme, lightTheme } from \"./style/themes\";\n\nfunction getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 12000;\n  return library;\n}\n//1e+9 is the highest possible number\nBigNumber.config({ EXPONENTIAL_AT: 1e9 });\n\nconst App = (): JSX.Element => {\n  const { theme, showBookmarkWarning } = useAppSelector(selectUserSettings);\n  const { width } = useWindowSize();\n  const dispatch = useAppDispatch();\n  return (\n    <ThemeProvider theme={theme === \"dark\" ? darkTheme : lightTheme}>\n      <Web3ReactProvider getLibrary={getLibrary}>\n        <LastLookProvider>\n          <ModalProvider>\n            {/* Suspense needed here for loading i18n resources */}\n            <Suspense fallback={<PageLoader />}>\n              <BookmarkWarning\n                hidden={width! < 480 || !showBookmarkWarning}\n                onClick={() => dispatch(disableBookmarkWarning())}\n              />\n              <Router>\n                <Route path=\"/:tokenFrom?/:tokenTo?\">\n                  <Page />\n                </Route>\n              </Router>\n            </Suspense>\n          </ModalProvider>\n        </LastLookProvider>\n      </Web3ReactProvider>\n      <GlobalStyle />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}