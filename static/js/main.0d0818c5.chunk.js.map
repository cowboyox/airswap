{"version":3,"sources":["app/hooks.ts","features/metadata/metadataApi.ts","components/Typography/Typography.styles.tsx","components/Typography/Typography.tsx","helpers/transformHexToRgba.ts","style/sizes.ts","components/Icon/Icon.styles.tsx","components/Icon/icons/IconDarkModeSwitch.tsx","components/Icon/Icon.tsx","components/Icon/icons/IconArrowRight.tsx","components/Icon/icons/IconArrowLeft.tsx","components/IconButton/IconButton.styles.tsx","components/IconButton/IconButton.tsx","components/TextInput/TextInput.styles.tsx","components/TextInput/TextInput.tsx","components/TokenSelection/TokenSelection.styles.tsx","components/TokenSelection/filter.ts","components/TokenSelection/sort.ts","components/TokenSelection/subcomponents/TokenImportButton/TokenImportButton.styles.tsx","features/balances/balancesApi.ts","components/TokenSelection/subcomponents/TokenImportButton/TokenImportButton.tsx","components/TokenSelection/subcomponents/InactiveTokensList/InactiveTokensList.tsx","helpers/stringToSignificantDecimals.ts","components/TokenSelection/subcomponents/TokenDeleteButton/TokenDeleteButton.styles.tsx","components/TokenSelection/subcomponents/TokenDeleteButton/TokenDeleteButton.tsx","components/TokenSelection/subcomponents/TokenButton/TokenButton.styles.tsx","components/TokenSelection/subcomponents/TokenButton/TokenButton.tsx","components/TokenSelection/TokenSelection.tsx","helpers/useWindowSize.ts","features/wallet/walletSlice.ts","features/balances/balancesSlice.ts","features/metadata/metadataSlice.ts","features/transactions/transactionActions.ts","features/orders/orderAPI.ts","features/orders/ordersSlice.ts","features/registry/registryAPI.ts","features/registry/registrySlice.ts","features/transactions/transactionsSlice.ts","components/TokenLogo/TokenLogo.styles.tsx","components/TokenLogo/TokenLogo.tsx","components/TokenSelect/TokenSelect.styles.tsx","components/TokenSelect/TokenSelect.tsx","constants/supportedWalletProviders.ts","assets/wallet-provider-logos/metamask.svg","assets/wallet-provider-logos/walletconnect.svg","components/LoadingSpinner/LoadingSpinner.tsx","components/Button/Button.styles.tsx","components/Button/Button.tsx","components/WalletProviderList/WalletProviderList.tsx","components/Timer/Timer.tsx","components/SwapWidget/InfoSection.styles.tsx","components/SwapWidget/InfoSection.tsx","components/SwapWidget/SwapWidget.styles.tsx","components/SwapWidget/SwapWidget.tsx","features/orders/Orders.tsx","features/userSettings/userSettingsSlice.ts","features/userSettings/helpers/getInitialThemeValue.ts","components/Content/Content.style.tsx","components/Content/Introduction.tsx","components/Content/Organization.tsx","components/Content/Products.tsx","components/WalletButton/subcomponents/WalletAddress/WalletAddress.styles.tsx","components/WalletButton/subcomponents/WalletAddress/WalletAddress.tsx","components/WalletButton/WalletButton.styles.tsx","helpers/getTimeBetweenTwoDates.ts","components/WalletButton/subcomponents/TransactionLink/TransactionLink.style.tsx","components/WalletButton/subcomponents/TransactionLink/TransactionLink.tsx","components/WalletButton/subcomponents/WalletTransactionStatus/WalletTransactionStatus.styles.tsx","components/WalletButton/subcomponents/WalletTransactionStatus/WalletTransactionStatus.tsx","components/WalletButton/subcomponents/WalletTransaction/WalletTransaction.styles.tsx","components/WalletButton/subcomponents/WalletTransaction/WalletTransaction.tsx","components/WalletButton/WalletButton.tsx","features/wallet/walletAPI.tsx","style/breakpoints.ts","components/DarkModeSwitch/DarkModeSwitch.styles.tsx","components/DarkModeSwitch/DarkModeSwitch.tsx","components/SideBar/SideBar.styles.tsx","features/wallet/Wallet.tsx","components/SideBar/SideBar.tsx","components/TradeContainer/TradeContainer.styles.tsx","components/TradeContainer/TradeContainer.tsx","components/SiteLogo/SiteLogo.styles.tsx","components/SiteLogo/SiteLogo.tsx","components/Page/Page.styles.tsx","components/Page/Page.tsx","i18n/i18n.ts","style/GlobalStyle.ts","style/themes.ts","App.tsx","app/store.ts","features/metadata/metadataSubscriber.ts","serviceWorker.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","defaultActiveTokens","chainIds","MAINNET","RINKEBY","getActiveTokensLocalStorageKey","account","chainId","getActiveTokensFromLocalStorage","savedTokens","localStorage","getItem","split","filter","address","length","getTransactionsLocalStorageKey","walletAddress","elementMap","title1","title2","title3","title4","subtitle","paragraph","infoHeading","infoSubHeading","formLabel","formInput","selectItem","link","nav","small","makeTypographyComponent","key","additionalCSS","tag","styled","props","theme","typography","fontSize","fontWeight","lineHeight","StyledH1","css","name","colors","white","alwaysBlack","StyledH2","primary","StyledH3","StyledH4","StyledParagraph","grey","StyledInfoHeading","StyledInfoSubHeading","lightGrey","StyledFormLabel","StyledFormInput","placeholderGrey","StyledSelectItem","StyledMetadata","titles","h1","h2","h3","h4","Title","className","children","type","StyledTitle","convertHexToRGBA","hexCode","opacity","hex","replace","r","parseInt","substring","g","b","sizes","StyledIcon","div","iconSize","color","IconDarkModeSwitch","fill","viewBox","d","strokeWidth","strokeLinecap","strokeLinejoin","icons","transform-origin","transform","MdKeyboardArrowDown","IoMdInformationCircleOutline","HiX","BiCheck","MdAccessTime","MdOpenInNew","Icon","IconComponent","StyledIconButton","button","hasText","IconButton","text","icon","onClick","FormLabel","StyledInput","FormInput","StyledTextInput","hideLabel","disabled","TextInput","label","hasError","inputProps","aria-label","ScrollContainer","black","Container","$overflow","TitleContainer","CloseButton","borderGrey","SearchInput","TokenContainer","Legend","LegendItem","LegendDivider","InactiveTitleContainer","InactiveTitle","InformationIcon","filterTokens","tokens","search","ethers","utils","isAddress","t","toLowerCase","lowerSearchParts","s","matchesSearch","sParts","every","p","some","sp","startsWith","endsWith","symbol","Boolean","createTokenFilterFunction","getTokenBalance","token","balances","values","parseFloat","formatUnits","decimals","subscribeToTransfersAndApprovals","ImageContainer","Image","img","TextContainer","Symbol","TokenName","UnsupportedTokenText","span","Metadata","ImportButton","TokenImportButton","isUnsupported","useTranslation","src","logoURI","alt","InactiveTokensList","tokenQuery","allTokens","supportedTokenAddresses","activeTokens","onTokenClick","sortedInactiveTokens","useMemo","el","includes","sort","a","toLocaleLowerCase","inactiveTokens","Object","slice","map","stringToSignificantDecimals","input","sigDecimals","indexOf","beforeDecimalPoint","afterDecimalPoint","trimmedDecimals","match","sigDecimalsRemaining","i","inLeadingZeroes","currentDigit","Text","TokenDeleteButton","TokenNameContainer","Balance","TokenButton","balance","setToken","removeActiveToken","defaultToken","e","stopPropagation","TokenSelection","onClose","signerToken","senderToken","setSignerToken","setSenderToken","tokenSelectType","addActiveToken","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","containerRef","useRef","scrollContainerRef","overflow","setOverflow","setTokenQuery","handleClick","sortedTokens","aBalance","bBalance","sortTokensBySymbolAndBalance","filteredTokens","current","offsetTop","scrollHeight","offsetHeight","ref","id","value","placeholder","onChange","currentTarget","tokenAddress","initialState","connected","providerName","walletSlice","createSlice","reducers","setWalletConnected","state","action","payload","setWalletDisconnected","setActiveProvider","selectWallet","wallet","actions","balancesInterface","Interface","JSON","stringify","BalanceChecker","abi","erc20Interface","erc20Abi","getContract","provider","Contract","balancesDeploys","fetchBalancesOrAllowances","method","tokenAddresses","contract","args","Light","getAddress","apply","amounts","amount","toString","fetchBalances","bind","fetchAllowances","activeTokenAddresses","onBalanceChange","spenderAddress","onApproval","filters","out","topics","hexZeroPad","in","tearDowns","keys","forEach","direction","typedDirection","listener","event","lowerCasedAddress","parsedEvent","parseLog","isApproval","on","push","off","fn","status","lastFetch","inFlightFetchTokens","getSetInFlightRequestTokensAction","createAction","getThunk","methods","allowances","createAsyncThunk","params","getState","dispatch","activeTokensAddresses","metadata","active","console","error","message","condition","sliceState","getSlice","asyncThunk","incrementBy","currentAmount","BigNumber","from","add","decrementBy","newAmount","sub","lt","set","extraReducers","builder","addCase","pending","fulfilled","Date","now","tokenBalances","result","rejected","selectBalances","selectAllowances","requestActiveTokenBalances","requestActiveTokenAllowances","balancesSlice","allowancesSlice","incrementBalanceBy","decrementBalanceBy","setAllowance","balancesReducer","reducer","allowancesReducer","fetchAllTokens","unused","thunkApi","fetchTokens","metadataSlice","all","lowerCasedToken","trim","tokenInfo","reduce","selectAllTokenInfo","selectActiveTokens","createSelector","allTokenInfo","submitTransaction","declineTransaction","mineTransaction","revertTransaction","requestOrder","senderAmount","senderTokenDecimals","senderWallet","Registry","getServers","servers","Error","orderPromises","server","getSignerSideOrder","toAtomicString","order","Promise","allSettled","orders","successfulOrders","approveToken","spender","network","ERC20","approve","getSigner","approvalTxHash","takeOrder","swap","tx","orderSortingFunction","signerAmount","expiry","aAmount","gt","request","library","hash","transaction","timestamp","once","getTransactionReceipt","receipt","transactionHash","take","ordersSlice","clear","selectBestOrder","selectOrdersStatus","RegistryInterface","RegistryContract","getStakerTokens","registryContract","registryDeploys","addTokensEventFilter","AddTokens","removeTokensEventFilter","RemoveTokens","queryFilter","addEvents","removeEvents","sortedEvents","log","removed","blockNumber","logIndex","stakerTokens","staker","lowerCasedTokens","concat","allSupportedTokens","fetchSupportedTokens","uniqBy","flat","registrySlice","setStakerTokens","setAllSupportedTokens","reset","selectAllSupportedTokens","registry","updateTransaction","setTransactions","err","unshift","selectTransactions","transactions","remSizes","medium","large","StyledTokenLogo","size","TokenLogo","rest","FlexRow","AmountAndDetailsContainer","TokenSelectContainer","darkGrey","alwaysWhite","fadeOutWhenInvisible","invisible","StyledLabel","StyledSelectButtonContent","emphasize","StyledDownArrow","StyledSelectButton","SelectItem","AmountInput","hasSubtext","AmountSubtext","PlaceholderContainer","PlaceholderTop","placeholderGradient","PlaceholderBottom","TokenSelect","readOnly","includeAmountInput","selectedToken","onChangeTokenClicked","onAmountChange","amountDetails","inputMode","autoComplete","pattern","minLength","maxLength","spellCheck","SUPPORTED_WALLET_PROVIDERS","logo","getConnector","InjectedConnector","supportedChainIds","WalletConnectConnector","rpc","1","4","LoadingSpinner","classNames","StyledButton","justifyContent","intent","red","green","getButtonBackground","loading","Button","WalletProviderList","onProviderSelected","Timer","expiryTime","onTimerComplete","Math","floor","distance","setDistance","interval","setInterval","dist","clearInterval","StyledInvertPriceButton","StyledInvertPriceIcon","IoMdSwap","TimerContainer","NewQuoteText","TimerText","InfoSection","isConnected","isPairUnavailable","orderSubmitted","isApproving","isSwapping","isFetchingOrders","requiresApproval","senderTokenInfo","signerTokenInfo","timerExpiry","invertPrice","setInvertPrice","price","dividedBy","Header","BackButton","SubmitButton","InfoContainer","ButtonContainer","SwapIconContainer","HugeTicks","MdDoneAll","Placeholder","StyledSwapWidget","floatRegExp","RegExp","SwapWidget","setSenderAmount","showWalletList","setShowWalletList","showTokenSelection","setShowTokenSelection","setIsApproving","setIsSwapping","isConnecting","setIsConnecting","pairUnavailable","setPairUnavailable","showOrderSubmitted","setShowOrderSubmitted","setTokenSelectType","ordersStatus","supportedTokens","useWeb3React","activate","trackEvent","useMatomo","findTokenByAddress","getTokenDecimals","getTokenApprovalStatus","tokenId","approvalTx","hasSufficientAllowance","handleTokenAmountChange","test","DisplayedButtons","context","isNaN","unwrapResult","code","decimalsFound","insufficientBalance","category","signerDecimals","toDecimalString","parsedSenderAmount","senderDecimals","parseUnits","fee","isOpen","onRequestClose","overlayClassName","finally","Orders","THEME_LOCAL_STORAGE_KEY","userSettingsSlice","toggleTheme","selectUserSettings","userSettings","Link","Introduction","href","Organization","Products","StyledWalletAddress","BlockiesContainer","StyledBlockies","Blockies","GreenCircle","WalletAddress","isButton","showBlockies","renderContent","scale","seed","bgColor","truncateEthAddress","OpenWallet","OpenWalletTopContainer","InfoHeading","NoTransactions","ExitButton","TransactionContainer","flex","DisconnectButton","MS_PER_HOUR","MS_PER_DAY","MS_PER_MONTH","MS_PER_YEAR","getTimeBetweenTwoDates","date","currentDate","timeDiff","getTime","minutes","hours","days","months","years","TransactionLink","target","rel","getEtherscanURL","IconContainer","SucceedIcon","ProcessingIcon","FailedIcon","WalletTransactionStatus","StyledWalletTransactionStatus","SpanTitle","SpanSubtitle","StyledTransactionLink","WalletTransaction","approvalToken","Number","toFixed","time","WalletButton","onDisconnectWalletClicked","onConnectWalletClicked","walletOpen","setWalletOpen","LAST_ACCOUNT_LOCAL_STORAGE_KEY","breakPoints","tinyScreenOnly","phoneOnly","tabletPortraitUp","tabletLandscapeUp","desktopUp","bigDesktopUp","StyledDarkModeSwitch","DarkModeSwitch","StyledWallet","deactivate","trackPageView","showConnectorList","setShowConnectorList","isActivating","setIsActivating","connector","setConnector","setProvider","documentTitle","lastConnectedAccount","storedString","find","loadLastAccount","setItem","saveLastAccount","teardownTransferListener","walletHasChanged","transactionsLocalStorage","parse","reason","getTransaction","wait","assumedFailureTime","res","setTimeout","close","ToggleButton","Navigation","StyledLink","ContentContainer","motion","content","Information","introduction","products","organization","SideBar","setIsOpen","useRouteMatch","allLocations","section","loc","to","AnimatePresence","exitBeforeEnter","initial","x","animate","exit","transition","ease","style","display","StyledTradeContainer","process","TradeContainer","StyledSiteLogo","svg","SiteLogo","fillRule","clipRule","StyledPage","Page","sideBarOpen","setSideBarOpen","history","useHistory","i18n","use","HttpBackend","LanguageDetector","initReactI18next","init","fallbackLng","ns","load","debug","interpolation","escapeValue","react","useSuspense","backend","loadPath","GlobalStyle","createGlobalStyle","darkTheme","primaryDark","orange","lightTheme","getLibrary","Web3Provider","pollingInterval","App","fallback","path","store","configureStore","transactionsReducer","metadataReducer","ordersReducer","walletReducer","registryReducer","userSettingsReducer","currentChainId","currentTransaction","activeTokensCache","transactionCache","subscribe","previousChainId","txs","mostRecentTransactions","cachedTokensForActiveWallet","join","subscribeToSavedTokenChangesForLocalStoragePersisting","location","hostname","instance","createInstance","urlBase","siteId","srcUrl","heartBeat","seconds","linkTracking","configurations","disableCookies","setSecureCookie","setRequestMethod","Modal","setAppElement","ReactDOM","render","StrictMode","MatomoProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0d0818c5.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\n\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { chainIds } from \"@airswap/constants\";\nimport { fetchTokens } from \"@airswap/metadata\";\nimport { TokenInfo } from \"@uniswap/token-lists\";\n\nimport uniqBy from \"lodash.uniqby\";\n\nexport const defaultActiveTokens: {\n  [chainId: number]: string[];\n} = {\n  [chainIds.MAINNET]: [\n    \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\", // WETH\n    \"0xdac17f958d2ee523a2206206994597c13d831ec7\", // USDT\n    \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\", // USDC\n    \"0x6b175474e89094c44da98b954eedeac495271d0f\", // DAI\n    \"0x27054b13b1b798b345b591a4d22e6562d47ea75a\", // AST\n  ],\n  [chainIds.RINKEBY]: [\n    \"0x5592ec0cfb4dbc12d3ab100b257153436a1f0fea\", // DAI\n    \"0xc778417e063141139fce010982780140aa0cd5ab\", // WETH\n  ],\n};\n\nconst tokensCache: {\n  [chainId: number]: Promise<TokenInfo[]>;\n} = {};\n\nexport const getActiveTokensLocalStorageKey: (\n  account: string,\n  chainId: number\n) => string = (account, chainId) =>\n  `airswap/activeTokens/${account}/${chainId}`;\n\nexport const getAllTokens = async (chainId: number) => {\n  let tokens;\n  if (!tokensCache[chainId]) {\n    tokensCache[chainId] = fetchTokens(chainId);\n  }\n  // TODO: handle failure.\n  tokens = await tokensCache[chainId];\n  return tokens;\n};\n\nexport const getActiveTokensFromLocalStorage = (\n  account: string,\n  chainId: number\n) => {\n  const savedTokens = (\n    localStorage.getItem(getActiveTokensLocalStorageKey(account, chainId)) || \"\"\n  )\n    .split(\",\")\n    .filter((address) => address.length);\n  return (\n    (savedTokens.length && savedTokens) || defaultActiveTokens[chainId] || []\n  );\n};\n\nexport const getSavedActiveTokensInfo = async (\n  account: string,\n  chainId: number\n) => {\n  const tokens = await getAllTokens(chainId);\n  const activeTokens = getActiveTokensFromLocalStorage(account, chainId);\n  const matchingTokens = tokens.filter((tokenInfo) =>\n    activeTokens.includes(tokenInfo.address)\n  );\n  return uniqBy(matchingTokens, (token) => token.address);\n};\n\nexport const getTransactionsLocalStorageKey: (\n  walletAddress: string,\n  chainId: number\n) => string = (walletAddress, chainId) =>\n  `airswap/transactions/${walletAddress}/${chainId}`;\n","import styled, {\n  DefaultTheme,\n  ThemedStyledFunction,\n  css,\n} from \"styled-components/macro\";\n\nconst elementMap: Record<\n  keyof DefaultTheme[\"typography\"],\n  keyof JSX.IntrinsicElements\n> = {\n  title1: \"h1\",\n  title2: \"h2\",\n  title3: \"h3\",\n  title4: \"h4\",\n  subtitle: \"h5\",\n  paragraph: \"p\",\n  infoHeading: \"h4\",\n  infoSubHeading: \"h4\",\n  formLabel: \"label\",\n  formInput: \"input\",\n  selectItem: \"div\",\n  link: \"a\",\n  nav: \"div\",\n  small: \"aside\",\n};\n\n/**\n * Creates a styled typography component for the key in `theme.typography`.\n * Element tag is defined above, and additional CSS can be added for properties\n * that are not common to all typography components.\n * @param key The key from `theme.typography` for typography params\n * @param additionalCSS Any additional CSS not included in `theme.typography.key`\n *                      to add, e.g. text-transform. Use `css` utility from\n *                      styled components to add it.\n * @returns A styled component with the correct typography styles appleid.\n */\nconst makeTypographyComponent = (\n  key: keyof DefaultTheme[\"typography\"],\n  additionalCSS?: any\n) => {\n  const tag = elementMap[key];\n  const Component = (styled[tag] as ThemedStyledFunction<\n    typeof tag,\n    DefaultTheme,\n    {},\n    never\n  >)`\n    font-size: ${(props) => props.theme.typography[key].fontSize};\n    font-weight: ${(props) => props.theme.typography[key].fontWeight};\n    line-height: ${(props) => props.theme.typography[key].lineHeight};\n    ${additionalCSS ? additionalCSS : \"\"}\n  `;\n  return Component;\n};\n\nexport const StyledH1 = makeTypographyComponent(\n  \"title1\",\n  css`\n    color: ${(props) =>\n      props.theme.name === \"dark\"\n        ? props.theme.colors.white\n        : props.theme.colors.alwaysBlack};\n  `\n);\nexport const StyledH2 = makeTypographyComponent(\n  \"title2\",\n  css`\n    color: ${(props) =>\n      props.theme.name === \"dark\"\n        ? props.theme.colors.white\n        : props.theme.colors.primary};\n  `\n);\nexport const StyledH3 = makeTypographyComponent(\"title3\");\nexport const StyledH4 = makeTypographyComponent(\"title4\");\nexport const StyledSubtitle = makeTypographyComponent(\n  \"subtitle\",\n  css`\n    text-transform: uppercase;\n  `\n);\nexport const StyledParagraph = makeTypographyComponent(\n  \"paragraph\",\n  css`\n    color: ${(props) =>\n      props.theme.name === \"dark\"\n        ? props.theme.colors.white\n        : props.theme.colors.grey};\n  `\n);\nexport const StyledLink = makeTypographyComponent(\n  \"link\",\n  css`\n    text-transform: uppercase;\n    text-decoration: underline;\n  `\n);\nexport const StyledNavigation = makeTypographyComponent(\"nav\");\nexport const StyledInfoHeading = makeTypographyComponent(\"infoHeading\");\nexport const StyledInfoSubHeading = makeTypographyComponent(\n  \"infoSubHeading\",\n  css`\n    color: ${(props) => props.theme.colors.lightGrey};\n  `\n);\nexport const StyledFormLabel = makeTypographyComponent(\n  \"formLabel\",\n  css`\n    color: ${(props) => props.theme.colors.lightGrey};\n  `\n);\nexport const StyledFormInput = makeTypographyComponent(\n  \"formInput\",\n  css`\n    color: ${(props) =>\n      props.theme.name === \"dark\"\n        ? props.theme.colors.white\n        : props.theme.colors.primary};\n    background-color: transparent;\n    border: none;\n    &::placeholder {\n      color: ${(props) => props.theme.colors.placeholderGrey};\n    }\n  `\n);\nexport const StyledSelectItem = makeTypographyComponent(\"selectItem\");\nexport const StyledMetadata = makeTypographyComponent(\n  \"small\",\n  css`\n    color: ${(props) => props.theme.colors.lightGrey};\n  `\n);\n","import React, { FC, ReactElement } from \"react\";\n\nimport { StyledH1, StyledH2, StyledH3, StyledH4 } from \"./Typography.styles\";\n\ntype TitleType = \"h1\" | \"h2\" | \"h3\" | \"h4\";\n\nexport type TitleProps = {\n  children: React.ReactNode;\n  className?: string;\n  type: TitleType;\n};\n\nconst titles: Record<TitleType, FC<{ className?: string }>> = {\n  h1: StyledH1,\n  h2: StyledH2,\n  h3: StyledH3,\n  h4: StyledH4,\n};\n\nexport const Title: FC<TitleProps> = ({\n  className,\n  children,\n  type,\n}): ReactElement => {\n  const StyledTitle = titles[type];\n\n  return <StyledTitle className={className}>{children}</StyledTitle>;\n};\n\nexport {\n  StyledSubtitle as Subtitle,\n  StyledParagraph as Paragraph,\n  StyledInfoHeading as InfoHeading,\n  StyledInfoSubHeading as InfoSubHeading,\n  StyledFormLabel as FormLabel,\n  StyledFormInput as FormInput,\n  StyledSelectItem as SelectItem,\n  StyledLink as Link,\n  StyledNavigation as Navigation,\n  StyledMetadata as Metadata,\n} from \"./Typography.styles\";\n","export default function convertHexToRGBA(hexCode: string, opacity: number) {\n  let hex = hexCode.replace(\"#\", \"\");\n\n  if (hex.length === 3) {\n    hex = `${hex[0]}${hex[0]}${hex[1]}${hex[1]}${hex[2]}${hex[2]}`;\n  }\n\n  const r = parseInt(hex.substring(0, 2), 16);\n  const g = parseInt(hex.substring(2, 4), 16);\n  const b = parseInt(hex.substring(4, 6), 16);\n\n  return `rgba(${r},${g},${b},${opacity})`;\n}\n","export const sizes = {\n  sideBarWidth: \"28rem\",\n  tradeContainerPadding: \"1.875rem\",\n};\n","import styled from \"styled-components/macro\";\n\ninterface StyledIconProps {\n  iconSize: number;\n}\n\nexport const StyledIcon = styled.div<StyledIconProps>`\n  svg {\n    width: ${(props) => `${props.iconSize}rem`};\n    height: ${(props) => `${props.iconSize}rem`};\n  }\n\n  circle,\n  path,\n  polygon,\n  rect {\n    fill: ${(props) => props.color || \"currentColor\"};\n  }\n\n  .stroke {\n    fill: none;\n    stroke: ${(props) => props.color || \"currentColor\"};\n  }\n`;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconDarkModeSwitch: FC<SvgIconProps> = ({\n  className = \"\",\n}): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 26 26\" className={className}>\n    <path\n      className=\"stroke\"\n      d=\"M12.9946 18.4559C16.0076 18.4559 18.4501 16.0134 18.4501 13.0005C18.4501 9.98761 16.0076 7.54517 12.9946 7.54517C9.98158 7.54517 7.53906 9.98761 7.53906 13.0005C7.53906 16.0134 9.98158 18.4559 12.9946 18.4559Z\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M13 1V3.18214\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M13 22.822V25.0042\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M4.51562 4.51343L6.06506 6.06274\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M19.9375 19.9404L21.4869 21.4897\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M1 13.0024H3.18222\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M22.8203 13.0024H25.0025\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M4.51562 21.4897L6.06506 19.9404\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M19.9375 6.06274L21.4869 4.51343\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path d=\"M13 19.003V7.60107L17.0507 9.02632L18.4009 13.302L16.3756 17.5778L13 19.003Z\" />\n  </svg>\n);\n\nexport default IconDarkModeSwitch;\n","import React, { FC, ReactElement } from \"react\";\nimport { BiCheck } from \"react-icons/bi\";\nimport { HiX } from \"react-icons/hi\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { MdKeyboardArrowDown, MdAccessTime, MdOpenInNew } from \"react-icons/md\";\n\nimport { StyledIcon } from \"./Icon.styles\";\nimport { IconArrowLeft, IconArrowRight, IconDarkModeSwitch } from \"./icons\";\n\ntype IconSet = {\n  [key: string]: FC<SvgIconProps>;\n};\n\nexport interface SvgIconProps {\n  className?: string;\n  iconSize?: number;\n  color?: string;\n}\n\nexport const icons: IconSet = {\n  \"arrow-right\": IconArrowRight,\n  \"arrow-left\": IconArrowLeft,\n  \"chevron-down\": MdKeyboardArrowDown,\n  \"dark-mode-switch\": IconDarkModeSwitch,\n  \"information-circle-outline\": IoMdInformationCircleOutline,\n  \"exit-modal\": HiX,\n  \"transaction-completed\": BiCheck,\n  \"transaction-failed\": HiX,\n  \"transaction-pending\": MdAccessTime,\n  \"transaction-link\": MdOpenInNew,\n};\n\ninterface IconProps extends SvgIconProps {\n  name: keyof typeof icons;\n}\n\nconst Icon: FC<IconProps> = ({\n  name,\n  iconSize = 1,\n  className = \"\",\n}): ReactElement | null => {\n  const IconComponent = icons[name];\n\n  return IconComponent ? (\n    <StyledIcon iconSize={iconSize} className={className}>\n      <IconComponent />\n    </StyledIcon>\n  ) : null;\n};\n\nexport default Icon;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconArrowRight: FC<SvgIconProps> = ({ className = \"\" }): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 12 20\" className={className}>\n    <path\n      className=\"stroke\"\n      d=\"M2 18L10 10L2 2\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"square\"\n    />\n  </svg>\n);\n\nexport default IconArrowRight;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { SvgIconProps } from \"../Icon\";\n\nconst IconArrowLeft: FC<SvgIconProps> = ({ className = \"\" }): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 12 20\" className={className}>\n    <path\n      className=\"stroke\"\n      d=\"M2 18L10 10L2 2\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"square\"\n      transform-origin=\"center\"\n      transform=\"scale(-1, 1)\"\n    />\n  </svg>\n);\n\nexport default IconArrowLeft;\n","import styled from \"styled-components/macro\";\n\nimport Icon from \"../Icon/Icon\";\n\ninterface StyledIconButtonProps {\n  hasText: boolean;\n}\n\nexport const StyledIcon = styled(Icon)``;\n\nexport const StyledIconButton = styled.button<StyledIconButtonProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  padding: 1rem;\n  font-weight: 600;\n\n  ${StyledIcon} {\n    svg {\n      margin-left: ${(props) => (props.hasText ? \"0.5rem\" : 0)};\n    }\n  }\n`;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { icons } from \"../Icon/Icon\";\nimport { StyledIcon, StyledIconButton } from \"./IconButton.styles\";\n\nexport type IconButtonProps = {\n  text?: string;\n  icon: keyof typeof icons;\n  iconSize?: number;\n  onClick: () => void;\n  className?: string;\n};\n\nconst IconButton: FC<IconButtonProps> = ({\n  text,\n  icon,\n  iconSize,\n  className,\n  onClick,\n}): ReactElement => {\n  return (\n    <StyledIconButton hasText={!!text} className={className} onClick={onClick}>\n      {text}\n      <StyledIcon name={icon} iconSize={iconSize} />\n    </StyledIconButton>\n  );\n};\n\nexport default IconButton;\n","import React from \"react\";\n\nimport styled from \"styled-components/macro\";\n\nimport { FormInput, FormLabel } from \"../Typography/Typography\";\n\ntype TextInputStyleProps = {\n  hideLabel?: boolean;\n  hasError?: boolean;\n  disabled?: boolean;\n};\n\ntype StyledInputProps = Pick<\n  React.HTMLProps<HTMLInputElement>,\n  \"type\" | \"disabled\"\n>;\n\nexport const StyledFormLabel = styled(FormLabel)``;\n\nexport const StyledInput = styled(FormInput)<StyledInputProps>``;\n\nexport const StyledTextInput = styled.div<TextInputStyleProps>`\n  ${StyledFormLabel} {\n    display: ${(props) => (props.hideLabel ? \"none\" : \"block\")};\n    width: 100%;\n    background: none;\n  }\n\n  ${StyledInput} {\n    position: relative;\n    border: 0;\n    width: 100%;\n    padding: 0;\n    opacity: ${(props) => (props.disabled ? 0.5 : 1)};\n    background: none;\n\n    &::placeholder {\n      color: ${(props) => props.theme.colors.lightGrey};\n    }\n\n    &:focus {\n      outline: 0;\n    }\n  }\n`;\n","import React, { FC, ReactElement } from \"react\";\n\nimport {\n  StyledFormLabel,\n  StyledInput,\n  StyledTextInput,\n} from \"./TextInput.styles\";\n\ntype HTMLInputProps = Omit<React.HTMLProps<HTMLInputElement>, \"ref\" | \"as\">;\n\nexport type TextInputProps = {\n  label: string;\n  type?: string;\n  hasError?: boolean;\n  hideLabel?: boolean;\n} & HTMLInputProps;\n\nconst TextInput: FC<TextInputProps> = ({\n  label,\n  type = \"text\",\n  className,\n  hasError,\n  hideLabel,\n  disabled,\n  ...inputProps\n}): ReactElement => {\n  return (\n    <StyledTextInput\n      hasError={hasError}\n      hideLabel={hideLabel}\n      aria-label={label}\n      disabled={disabled}\n      className={className}\n    >\n      <StyledFormLabel>{label}</StyledFormLabel>\n      <StyledInput {...inputProps} disabled={disabled} type={type} />\n    </StyledTextInput>\n  );\n};\n\nexport default TextInput;\n","import styled from \"styled-components/macro\";\n\nimport convertHexToRGBA from \"../../helpers/transformHexToRgba\";\nimport { sizes } from \"../../style/sizes\";\nimport Icon from \"../Icon/Icon\";\nimport IconButton from \"../IconButton/IconButton\";\nimport TextInput from \"../TextInput/TextInput\";\nimport { StyledInput } from \"../TextInput/TextInput.styles\";\n\ntype ContainerProps = {\n  $overflow: boolean;\n};\n\nexport const ScrollContainer = styled.div`\n  flex-grow: 99;\n  padding-bottom: ${sizes.tradeContainerPadding};\n\n  &::-webkit-scrollbar {\n    width: 0.5rem;\n    background: ${(props) => props.theme.colors.black};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: ${(props) => props.theme.colors.white};\n    border-radius: 0.5rem;\n  }\n`;\n\nexport const Container = styled.div<ContainerProps>`\n  display: flex;\n  flex-direction: column;\n\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  padding: ${sizes.tradeContainerPadding} ${sizes.tradeContainerPadding} 0;\n  background-color: ${(props) => props.theme.colors.black};\n\n  ${ScrollContainer} {\n    width: calc(100% + (${sizes.tradeContainerPadding} / 2));\n    padding-right: calc(${sizes.tradeContainerPadding} / 2);\n    overflow-x: hidden;\n    overflow-y: ${(props) => (props.$overflow ? \"scroll\" : \"hidden\")};\n  }\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-bottom: 1.875rem;\n`;\n\nexport const CloseButton = styled(IconButton)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 1.5rem;\n  height: 1.5rem;\n  padding: 0;\n  border: 1px solid ${(props) => props.theme.colors.borderGrey};\n\n  &:hover {\n    border-color: ${(props) => convertHexToRGBA(props.theme.colors.white, 0.5)};\n  }\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: 1rem;\n`;\n\nexport const SearchInput = styled(TextInput)`\n  margin-bottom: 1.25rem;\n  width: 100%;\n\n  ${StyledInput} {\n    border: 1px solid ${(props) => props.theme.colors.borderGrey};\n    border-radius: 2px;\n    line-height: 2.25;\n    padding: 0.25rem 0.625rem;\n    font-size: 0.875rem;\n    background: transparent;\n    color: #9e9e9e;\n\n    &:focus {\n      outline: none;\n      border: 1px solid ${(props) => props.theme.colors.primary};\n    }\n  }\n`;\n\nexport const TokenContainer = styled.div``;\n\nexport const Legend = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 0.75rem;\n  min-height: 1.5rem;\n`;\n\nexport const LegendItem = styled.div`\n  text-transform: uppercase;\n  font-weight: 700;\n  font-size: 0.625rem;\n  color: ${(props) => props.theme.colors.lightGrey};\n`;\n\nexport const LegendDivider = styled.div`\n  margin: 0 1rem;\n  width: 100%;\n  height: 1px;\n  background: ${(props) => props.theme.colors.borderGrey};\n`;\n\nexport const InactiveTitleContainer = styled.div`\n  border: 1px solid ${(props) => props.theme.colors.borderGrey};\n  border-radius: 2px;\n  background: transparent;\n  color: #9e9e9e;\n  padding: 1rem;\n  font-size: 0.75rem;\n  margin: 1rem 0;\n`;\n\nexport const InactiveTitle = styled.h3`\n  display: flex;\n  font-size: 0.75rem;\n`;\n\nexport const InformationIcon = styled(Icon)`\n  display: inline;\n  margin-left: 0.25rem;\n`;\n","import { TokenInfo } from \"@uniswap/token-lists\";\n\nimport { ethers } from \"ethers\";\n\n/**\n * Create a filter function to apply to a token for whether it matches a particular search query\n * @param search the search query to apply to the token\n */\nexport function createTokenFilterFunction<T extends TokenInfo>(\n  search: string\n): (tokens: T) => boolean {\n  const searchingAddress = ethers.utils.isAddress(search);\n\n  if (searchingAddress) {\n    return (t: T) => t.address.toLowerCase() === search.toLowerCase();\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0);\n\n  if (lowerSearchParts.length === 0) return () => true;\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0);\n\n    return lowerSearchParts.every(\n      (p) =>\n        p.length === 0 ||\n        sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p))\n    );\n  };\n\n  return ({ name, symbol }: T): boolean =>\n    Boolean((symbol && matchesSearch(symbol)) || (name && matchesSearch(name)));\n}\n\nexport function filterTokens<T extends TokenInfo>(\n  tokens: T[],\n  search: string\n): T[] {\n  return tokens.filter(createTokenFilterFunction(search));\n}\n","import { formatUnits } from \"@ethersproject/units\";\nimport { TokenInfo } from \"@uniswap/token-lists\";\n\nimport { BalancesState } from \"../../features/balances/balancesSlice\";\n\nexport function sortTokensByBalance(\n  tokens: TokenInfo[],\n  balances: BalancesState\n) {\n  return tokens.sort((a, b) =>\n    parseFloat(formatUnits(balances.values[a.address]!, a.decimals)) <\n    parseFloat(formatUnits(balances.values[b.address]!, b.decimals))\n      ? 1\n      : parseFloat(formatUnits(balances.values[a.address]!, a.decimals)) ===\n        parseFloat(formatUnits(balances.values[b.address]!, b.decimals))\n      ? a.symbol > b.symbol\n        ? 1\n        : -1\n      : -1\n  );\n}\n\nexport function sortTokensBySymbol(tokens: TokenInfo[]) {\n  return tokens.sort((a, b) =>\n    a.symbol.toLocaleLowerCase() < b.symbol.toLocaleLowerCase() ? -1 : 1\n  );\n}\n\nfunction getTokenBalance(token: TokenInfo, balances: BalancesState): number {\n  const balance = balances.values[token.address];\n\n  if (!balance) {\n    return 0;\n  }\n\n  return parseFloat(\n    formatUnits(balances.values[token.address]!, token.decimals)\n  );\n}\n\nexport function sortTokensBySymbolAndBalance(\n  tokens: TokenInfo[],\n  balances: BalancesState\n) {\n  return tokens.sort((a, b) => {\n    const aBalance = getTokenBalance(a, balances);\n    const bBalance = getTokenBalance(b, balances);\n\n    if (aBalance === 0 && bBalance !== 0) {\n      return 1;\n    } else if (bBalance === 0 && aBalance !== 0) {\n      return -1;\n    }\n\n    return a.symbol.toLocaleLowerCase() < b.symbol.toLocaleLowerCase() ? -1 : 1;\n  });\n}\n","import styled from \"styled-components/macro\";\n\nimport { Metadata } from \"../../../Typography/Typography\";\n\nexport const Container = styled.div`\n  border: 1px solid ${(props) => props.theme.colors.borderGrey};\n  padding: 1rem;\n  display: grid;\n  grid-auto-flow: column;\n  cursor: pointer;\n  grid-template-columns: auto minmax(auto, 1fr) 6.25rem;\n  grid-gap: 1rem;\n  align-items: center;\n\n  &:not(:last-of-type) {\n    border-bottom: 0;\n  }\n\n  & + & {\n    border-top: 1px solid ${(props) => props.theme.colors.borderGrey};\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 2rem;\n`;\n\nexport const Image = styled.img`\n  width: 2rem;\n  height: 2rem;\n`;\n\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const Symbol = styled.h3`\n  font-size: 1rem;\n  font-weight: bold;\n  line-height: 1rem;\n`;\n\nexport const TokenName = styled.h3`\n  font-size: 0.8rem;\n  font-weight: 500;\n  color: #9e9e9e;\n  line-height: 1rem;\n`;\n\nexport const Span = styled.span``;\n\nexport const UnsupportedTokenText = styled(Metadata)`\n  text-align: center;\n  justify-self: center;\n`;\n\nexport const ImportButton = styled.button`\n  border: 1px solid ${(props) => props.theme.colors.borderGrey};\n  font-size: 0.8rem;\n  font-weight: bold;\n  padding: 0.5rem 1.5rem;\n  justify-self: center;\n\n  &:hover:not(:disabled) {\n    background: ${(props) => props.theme.colors.white};\n    color: ${(props) => props.theme.colors.black};\n    transition: 0.25s ease-in-out;\n  }\n`;\n","import BalanceChecker from \"@airswap/balances/build/contracts/BalanceChecker.json\";\nimport balancesDeploys from \"@airswap/balances/deploys.js\";\nimport { Light } from \"@airswap/protocols\";\n\nimport erc20Abi from \"erc-20-abi\";\nimport { BigNumber, ethers, EventFilter, Event } from \"ethers\";\nimport { hexZeroPad, id } from \"ethers/lib/utils\";\n\ninterface SubscribeParams {\n  activeTokenAddresses: string[];\n  walletAddress: string;\n  spenderAddress: string;\n  provider: ethers.providers.Web3Provider;\n  onBalanceChange: (\n    tokenAddress: string,\n    amount: BigNumber,\n    direction: \"in\" | \"out\"\n  ) => void;\n  onApproval: (tokenAddress: string, amount: BigNumber) => void;\n}\n\ninterface WalletParams {\n  chainId: number;\n  provider: ethers.providers.Web3Provider;\n  walletAddress: string;\n  tokenAddresses: string[];\n}\n\nconst balancesInterface = new ethers.utils.Interface(\n  JSON.stringify(BalanceChecker.abi)\n);\n\nconst erc20Interface = new ethers.utils.Interface(erc20Abi);\n\nconst getContract = (\n  chainId: keyof typeof balancesDeploys,\n  provider: ethers.providers.Web3Provider\n) => {\n  return new ethers.Contract(\n    balancesDeploys[chainId],\n    balancesInterface,\n    provider\n  );\n};\n\n/**\n * Fetches balances or allowances for a wallet using the airswap utility\n * contract `BalanceChecker.sol`. Balances are returned in base units.\n */\nconst fetchBalancesOrAllowances: (\n  method: \"walletBalances\" | \"walletAllowances\",\n  params: WalletParams\n) => Promise<string[]> = async (\n  method,\n  { chainId, provider, tokenAddresses, walletAddress }\n) => {\n  const contract = getContract(chainId, provider);\n  const args =\n    method === \"walletBalances\"\n      ? [walletAddress, tokenAddresses]\n      : // sender, spender, tokens.\n        [walletAddress, Light.getAddress(chainId), tokenAddresses];\n  const amounts: BigNumber[] = await contract[method].apply(null, args);\n  return amounts.map((amount) => amount.toString());\n};\n\nconst fetchBalances = fetchBalancesOrAllowances.bind(null, \"walletBalances\");\nconst fetchAllowances = fetchBalancesOrAllowances.bind(\n  null,\n  \"walletAllowances\"\n);\n\n// event Transfer(address indexed _from, address indexed _to, uint256 _value)\n// event Approval(address indexed _owner, address indexed _spender, uint256 _value)\nlet subscribeToTransfersAndApprovals: (params: SubscribeParams) => () => void;\nsubscribeToTransfersAndApprovals = ({\n  activeTokenAddresses,\n  walletAddress,\n  provider,\n  onBalanceChange,\n  spenderAddress,\n  onApproval,\n}) => {\n  // event Transfer(address indexed _from, address indexed _to, uint256 _value)\n  const filters: {\n    in: EventFilter;\n    out: EventFilter;\n  } = {\n    // Tokens being transferred out of our account or approved by our account\n    out: {\n      topics: [\n        [\n          id(\"Transfer(address,address,uint256)\"),\n          id(\"Approval(address,address,uint256)\"),\n        ], // event name\n        hexZeroPad(walletAddress, 32), // from\n      ],\n    },\n\n    // Tokens being transferred in to our account\n    in: {\n      topics: [\n        id(\"Transfer(address,address,uint256)\"), // event name\n        [],\n        hexZeroPad(walletAddress, 32), // to\n      ],\n    },\n  };\n\n  const tearDowns: (() => void)[] = [];\n\n  Object.keys(filters).forEach((direction) => {\n    // in or out?\n    const typedDirection = direction as keyof typeof filters;\n    const filter = filters[typedDirection];\n\n    function listener(event: Event) {\n      const { address } = event;\n      const lowerCasedAddress = address.toLowerCase();\n\n      // Ignore transactions for non-active tokens.\n      if (!activeTokenAddresses.includes(lowerCasedAddress)) return;\n\n      const parsedEvent = erc20Interface.parseLog(event);\n      const isApproval = parsedEvent.name === \"Approval\";\n\n      // Ignore approvals for other spenders.\n      if (isApproval && parsedEvent.args[1].toLowerCase() !== spenderAddress)\n        return;\n\n      const amount: BigNumber = parsedEvent.args[2];\n      isApproval\n        ? onApproval(lowerCasedAddress, amount)\n        : onBalanceChange(lowerCasedAddress, amount, typedDirection);\n    }\n    provider.on(filter, listener);\n    tearDowns.push(provider.off.bind(provider, filter, listener));\n  });\n\n  return () => {\n    tearDowns.forEach((fn) => fn());\n  };\n};\n\nexport { fetchBalances, fetchAllowances, subscribeToTransfersAndApprovals };\n","import { useTranslation } from \"react-i18next\";\n\nimport { TokenInfo } from \"@uniswap/token-lists\";\n\nimport {\n  Container,\n  Image,\n  ImageContainer,\n  TextContainer,\n  Symbol,\n  TokenName,\n  ImportButton,\n  UnsupportedTokenText,\n} from \"./TokenImportButton.styles\";\n\nexport type TokenImportRowProps = {\n  /**\n   * TokenInfo object\n   */\n  token: TokenInfo;\n  /**\n   * True if the token isn't currently supported by makers.\n   */\n  isUnsupported: boolean;\n  /**\n   * onClick event, either setSignerToken or setSenderToken\n   */\n  onClick: (val: string) => void;\n};\n\nconst TokenImportButton = ({\n  token,\n  onClick,\n  isUnsupported,\n}: TokenImportRowProps) => {\n  const { t } = useTranslation([\"balances\", \"common\"]);\n\n  return (\n    <Container>\n      <ImageContainer>\n        <Image\n          src={token.logoURI || \"https://via.placeholder.com/150\"}\n          alt={token.address}\n        />\n      </ImageContainer>\n\n      <TextContainer>\n        <Symbol>{token.symbol}</Symbol>\n        <TokenName>{token.name}</TokenName>\n      </TextContainer>\n      {isUnsupported ? (\n        <UnsupportedTokenText>\n          {t(\"balances:unsupportedToken\")}\n        </UnsupportedTokenText>\n      ) : (\n        <ImportButton onClick={() => onClick(token.address)}>\n          {t(\"balances:addToTokenSet\")}\n        </ImportButton>\n      )}\n    </Container>\n  );\n};\n\nexport default TokenImportButton;\n","import { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { TokenInfo } from \"@uniswap/token-lists\";\n\nimport {\n  InactiveTitle,\n  InactiveTitleContainer,\n  InformationIcon,\n  TokenContainer,\n} from \"../../TokenSelection.styles\";\nimport { filterTokens } from \"../../filter\";\nimport { sortTokensBySymbol } from \"../../sort\";\nimport TokenImportButton from \"../TokenImportButton/TokenImportButton\";\n\ntype InactiveTokensListProps = {\n  tokenQuery: string;\n  allTokens: TokenInfo[];\n  activeTokens: TokenInfo[];\n  supportedTokenAddresses: string[];\n  onTokenClick: (tokenAddress: string) => void;\n};\n\nconst InactiveTokensList = ({\n  tokenQuery,\n  allTokens,\n  supportedTokenAddresses,\n  activeTokens,\n  onTokenClick,\n}: InactiveTokensListProps) => {\n  const { t } = useTranslation([\"orders\"]);\n\n  // sort inactive tokens based on symbol\n  const sortedInactiveTokens: TokenInfo[] = useMemo(() => {\n    return sortTokensBySymbol(\n      allTokens.filter((el) => {\n        return !activeTokens.includes(el);\n      })\n    );\n  }, [allTokens, activeTokens]);\n\n  // only take the top 10 tokens\n  const inactiveTokens: TokenInfo[] = useMemo(() => {\n    return filterTokens(Object.values(sortedInactiveTokens), tokenQuery!).slice(\n      0,\n      10\n    );\n  }, [sortedInactiveTokens, tokenQuery]);\n\n  return (\n    <>\n      <InactiveTitleContainer>\n        <InactiveTitle>\n          {t(\"orders:expandedResults\")}\n          <InformationIcon name=\"information-circle-outline\" />\n        </InactiveTitle>\n      </InactiveTitleContainer>\n      <TokenContainer>\n        {inactiveTokens.map((token) => (\n          <TokenImportButton\n            token={token}\n            isUnsupported={\n              supportedTokenAddresses.length !== 0 &&\n              !supportedTokenAddresses.includes(token.address)\n            }\n            onClick={() => onTokenClick(token.address)}\n            key={`${token.address}`}\n          />\n        ))}\n      </TokenContainer>\n    </>\n  );\n};\n\nexport default InactiveTokensList;\n","const stringToSignificantDecimals: (\n  input: string,\n  sigDecimals?: number\n) => string = (input, sigDecimals = 6) => {\n  // Don't do anything if there's no decimal point.\n  if (input.indexOf(\".\") === -1) {\n    return input;\n  }\n\n  const [beforeDecimalPoint, afterDecimalPoint] = input.split(\".\");\n  let trimmedDecimals = \"\";\n  if (afterDecimalPoint.length <= sigDecimals) {\n    // No need to trim\n    trimmedDecimals = afterDecimalPoint;\n  } else if (beforeDecimalPoint.match(/[1-9]/)) {\n    // Number greater than zero, all decimal places significant:\n    // just trim decimals to correct length\n    trimmedDecimals = afterDecimalPoint.slice(0, 4);\n  } else {\n    // Number less than zero, some decimal places may not be significant\n    let sigDecimalsRemaining = sigDecimals;\n    let i = 0;\n    let inLeadingZeroes = true;\n    while (sigDecimalsRemaining > 0 && i < afterDecimalPoint.length - 1) {\n      const currentDigit = afterDecimalPoint[i];\n      trimmedDecimals += currentDigit;\n      if (!inLeadingZeroes || currentDigit !== \"0\") {\n        inLeadingZeroes = false;\n        sigDecimalsRemaining--;\n      }\n      i++;\n    }\n  }\n\n  return `${beforeDecimalPoint}.${trimmedDecimals}`;\n};\nexport default stringToSignificantDecimals;\n","import styled from \"styled-components/macro\";\n\nexport const Text = styled.div`\n  display: inline;\n  margin-left: 0.25rem;\n  font-size: 0.75rem;\n`;\n\nexport const Container = styled.button`\n  position: relative;\n  text-align: left;\n  width: 100%;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  &:hover {\n    ${Text} {\n      text-decoration: underline;\n    }\n  }\n\n  &:before {\n    content: \"•\";\n    display: inline;\n  }\n`;\n","import { useTranslation } from \"react-i18next\";\n\nimport { Container, Text } from \"./TokenDeleteButton.styles\";\n\ntype TokenDeleteButtonProps = {\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n};\n\nconst TokenDeleteButton = ({ onClick }: TokenDeleteButtonProps) => {\n  const { t } = useTranslation([\"orders\"]);\n\n  return (\n    <Container onClick={onClick}>\n      <Text>{t(\"orders:removeFromActive\")}</Text>\n    </Container>\n  );\n};\n\nexport default TokenDeleteButton;\n","import styled from \"styled-components/macro\";\n\ntype ContainerProps = {\n  disabled: boolean;\n};\n\nexport const TokenNameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  position: relative;\n`;\n\nexport const TokenName = styled.h3`\n  width: 100%;\n  text-align: left;\n  line-height: 1;\n  font-size: 0.875rem;\n  font-weight: 500;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: ${(props) => props.theme.colors.lightGrey};\n`;\n\nexport const Container = styled.button<ContainerProps>`\n  position: relative;\n  width: 100%;\n  padding: 0.5rem 0;\n  display: grid;\n  grid-auto-flow: column;\n  cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\n  grid-template-columns: 1.5rem 4rem calc(50% - 4rem) calc(50% - 4.5rem);\n  grid-gap: 1rem;\n  align-items: center;\n  opacity: ${(props) => (props.disabled ? 0.6 : 1)};\n\n  &:hover {\n    ${TokenName} {\n      color: ${(props) =>\n        props.disabled\n          ? props.theme.colors.lightGrey\n          : props.theme.colors.white};\n    }\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 1.5rem;\n  height: 1.5rem;\n`;\n\nexport const Image = styled.img``;\n\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const Symbol = styled.h3`\n  text-align: left;\n  font-size: 1.125rem;\n  font-weight: 600;\n  line-height: calc(1 + (1 / 3));\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const Balance = styled.div`\n  font-weight: 500;\n  text-align: right;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n","import { TokenInfo } from \"@uniswap/token-lists\";\n\nimport stringToSignificantDecimals from \"../../../../helpers/stringToSignificantDecimals\";\nimport TokenDeleteButton from \"../TokenDeleteButton/TokenDeleteButton\";\nimport {\n  Container,\n  Image,\n  ImageContainer,\n  Symbol,\n  TokenName,\n  Balance,\n  TokenNameContainer,\n} from \"./TokenButton.styles\";\n\nexport type TokenRowProps = {\n  /**\n   * TokenInfo object\n   */\n  token: TokenInfo;\n  /**\n   * Balance of current token\n   */\n  balance: string;\n  /**\n   * onClick event, either setSignerToken or setSenderToken\n   */\n  setToken: (val: string) => void;\n  /**\n   * Whether to disable selection of this token (e.g. if already selected)\n   */\n  disabled?: boolean;\n  /**\n   * Removes token from the active tokens list.\n   */\n  removeActiveToken: (tokenAddress: string) => void;\n  /**\n   * Flag that determines if this is a default token that is automatically active.\n   */\n  defaultToken: boolean;\n};\n\n// TODO: Make Container a button instead of a Balance\nconst TokenButton = ({\n  token,\n  balance,\n  setToken,\n  removeActiveToken,\n  disabled,\n  defaultToken,\n}: TokenRowProps) => {\n  return (\n    <Container\n      onClick={(e) => {\n        !disabled && setToken(token.address);\n      }}\n      disabled={disabled!}\n    >\n      <ImageContainer>\n        <Image\n          src={token.logoURI || \"https://via.placeholder.com/150\"}\n          alt={token.address}\n        />\n      </ImageContainer>\n\n      <Symbol>{token.symbol}</Symbol>\n\n      <TokenNameContainer>\n        <TokenName>{token.name}</TokenName>\n\n        {!defaultToken && (\n          <TokenDeleteButton\n            onClick={(e) => {\n              e.stopPropagation();\n              removeActiveToken(token.address);\n            }}\n          />\n        )}\n      </TokenNameContainer>\n\n      <Balance>{stringToSignificantDecimals(balance)}</Balance>\n    </Container>\n  );\n};\n\nexport default TokenButton;\n","import { useState, useMemo, useRef, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { formatUnits } from \"@ethersproject/units\";\nimport { TokenInfo } from \"@uniswap/token-lists\";\n\nimport { BalancesState } from \"../../features/balances/balancesSlice\";\nimport { defaultActiveTokens } from \"../../features/metadata/metadataApi\";\nimport useWindowSize from \"../../helpers/useWindowSize\";\nimport { Title } from \"../Typography/Typography\";\nimport {\n  Container,\n  TitleContainer,\n  CloseButton,\n  SearchInput,\n  TokenContainer,\n  Legend,\n  LegendItem,\n  LegendDivider,\n  ScrollContainer,\n} from \"./TokenSelection.styles\";\nimport { filterTokens } from \"./filter\";\nimport { sortTokensBySymbolAndBalance } from \"./sort\";\nimport InactiveTokensList from \"./subcomponents/InactiveTokensList/InactiveTokensList\";\nimport TokenButton from \"./subcomponents/TokenButton/TokenButton\";\n\nexport type TokenSelectionProps = {\n  /**\n   * Function to close modal\n   */\n  onClose: () => void;\n  /**\n   * signerToken contract address (e.g. \"0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2\")\n   */\n  signerToken: string;\n  /**\n   * senderToken contract address (e.g. \"0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2\")\n   */\n  senderToken: string;\n  /**\n   * useState hook to set signer token\n   */\n  setSignerToken: (val: string) => void;\n  /**\n   * useState hook to set sender token\n   */\n  setSenderToken: (val: string) => void;\n  /**\n   * Request type incoming to token selection modal; modal handles\n   * setSignerToken/setSenderToken based off of this parameter\n   */\n  tokenSelectType: \"signerToken\" | \"senderToken\";\n  /**\n   * Balances for current tokens in wallet\n   */\n  balances: BalancesState;\n  /**\n   * all Token addresses in metadata.\n   */\n  allTokens: TokenInfo[];\n  /**\n   * All active tokens.\n   */\n  activeTokens: TokenInfo[];\n  /**\n   * Supported tokens according to registry\n   */\n  supportedTokenAddresses: string[];\n  /**\n   * function to handle adding active tokens (dispatches addActiveToken).\n   */\n  addActiveToken: (val: string) => void;\n  /**\n   * function to handle removing active tokens (dispatches removeActiveToken).\n   */\n  removeActiveToken: (val: string) => void;\n  /**\n   * currently connected chain id\n   */\n  chainId: number;\n};\n\nconst TokenSelection = ({\n  onClose,\n  signerToken,\n  senderToken,\n  setSignerToken,\n  setSenderToken,\n  tokenSelectType,\n  balances,\n  allTokens,\n  activeTokens = [],\n  supportedTokenAddresses,\n  addActiveToken,\n  removeActiveToken,\n  chainId,\n}: TokenSelectionProps) => {\n  const { width, height } = useWindowSize();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [overflow, setOverflow] = useState(false);\n\n  const [tokenQuery, setTokenQuery] = useState<string>(\"\");\n  const { t } = useTranslation([\"common\", \"wallet\", \"orders\", \"balances\"]);\n\n  // handle user clicking row\n  const handleClick = (address: string) => {\n    if (tokenSelectType === \"senderToken\") {\n      // swap the token addresses\n      if (address === signerToken) setSignerToken(senderToken);\n      setSenderToken(address);\n    } else {\n      if (address === senderToken) setSenderToken(signerToken);\n      setSignerToken(address);\n    }\n    onClose();\n  };\n\n  // sort tokens based on symbol\n  const sortedTokens: TokenInfo[] = useMemo(() => {\n    return sortTokensBySymbolAndBalance(activeTokens, balances);\n  }, [activeTokens, balances]);\n\n  // filter token\n  const filteredTokens: TokenInfo[] = useMemo(() => {\n    return filterTokens(Object.values(sortedTokens), tokenQuery);\n  }, [sortedTokens, tokenQuery]);\n\n  useEffect(() => {\n    if (containerRef.current && scrollContainerRef.current) {\n      const { offsetTop, scrollHeight } = scrollContainerRef.current;\n      setOverflow(scrollHeight + offsetTop > containerRef.current.offsetHeight);\n    }\n  }, [\n    containerRef,\n    scrollContainerRef,\n    activeTokens,\n    sortedTokens,\n    allTokens,\n    tokenQuery,\n    width,\n    height,\n  ]);\n\n  return (\n    <Container ref={containerRef} $overflow={overflow}>\n      <TitleContainer>\n        <Title type=\"h2\">{t(\"common:swap\")}</Title>\n        <CloseButton icon=\"chevron-down\" iconSize={1} onClick={onClose} />\n      </TitleContainer>\n      <SearchInput\n        hideLabel\n        id=\"tokenQuery\"\n        type=\"text\"\n        label=\"Search name or address\"\n        value={tokenQuery}\n        placeholder=\"Search name or paste address\"\n        onChange={(e) => {\n          setTokenQuery(e.currentTarget.value);\n        }}\n      />\n\n      <ScrollContainer ref={scrollContainerRef}>\n        <Legend>\n          <LegendItem>{t(\"common:token\")}</LegendItem>\n          <LegendDivider />\n          <LegendItem>{t(\"balances:balance\")}</LegendItem>\n        </Legend>\n\n        {filteredTokens && filteredTokens.length > 0 && (\n          <TokenContainer>\n            {filteredTokens.map((token) => (\n              <TokenButton\n                token={token}\n                balance={formatUnits(\n                  balances.values[token.address] || 0,\n                  token.decimals\n                )}\n                setToken={handleClick}\n                disabled={\n                  tokenSelectType === \"senderToken\"\n                    ? token.address === senderToken\n                    : token.address === signerToken\n                } // shouldn't be able to select same duplicate token\n                removeActiveToken={removeActiveToken}\n                defaultToken={defaultActiveTokens[chainId!].includes(\n                  token.address\n                )}\n                key={token.address}\n              />\n            ))}\n          </TokenContainer>\n        )}\n        {chainId === 1 && tokenQuery && filteredTokens.length < 5 && (\n          <InactiveTokensList\n            tokenQuery={tokenQuery}\n            activeTokens={activeTokens}\n            allTokens={allTokens}\n            supportedTokenAddresses={supportedTokenAddresses}\n            onTokenClick={(tokenAddress) => {\n              addActiveToken(tokenAddress);\n              setTokenQuery(\"\");\n            }}\n          />\n        )}\n      </ScrollContainer>\n    </Container>\n  );\n};\n\nexport default TokenSelection;\n","import { useState, useEffect } from \"react\";\n\n// Source: https://usehooks.com/useWindowSize/\n\ninterface WindowSizeState {\n  width?: number;\n  height?: number;\n}\n\nexport default function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowSizeState>({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { RootState } from \"../../app/store\";\n\nexport interface WalletState {\n  connected: boolean;\n  address: string | null;\n  chainId: number | null;\n  providerName: string | null;\n}\n\nconst initialState: WalletState = {\n  connected: false,\n  address: null,\n  chainId: null,\n  providerName: null,\n};\n\nconst walletSlice = createSlice({\n  name: \"wallet\",\n  initialState,\n  reducers: {\n    setWalletConnected: (\n      state,\n      action: PayloadAction<{ address: string; chainId: number }>\n    ) => {\n      state.connected = true;\n      state.address = action.payload.address;\n      state.chainId = action.payload.chainId;\n    },\n    setWalletDisconnected: () => initialState,\n    setActiveProvider: (state, action: PayloadAction<string>) => {\n      state.providerName = action.payload;\n    },\n  },\n});\n\nexport const selectWallet = (state: RootState) => state.wallet;\n\nexport const {\n  setWalletConnected,\n  setWalletDisconnected,\n  setActiveProvider,\n} = walletSlice.actions;\n\nexport default walletSlice.reducer;\n","import {\n  AsyncThunk,\n  createAction,\n  createAsyncThunk,\n  createSlice,\n  PayloadAction,\n} from \"@reduxjs/toolkit\";\n\nimport { BigNumber, ethers } from \"ethers\";\n\nimport { AppDispatch, RootState } from \"../../app/store\";\nimport { setWalletConnected } from \"../wallet/walletSlice\";\nimport { fetchAllowances, fetchBalances } from \"./balancesApi\";\n\nexport interface BalancesState {\n  status: \"idle\" | \"fetching\" | \"failed\";\n  /** Timestamp of last successful fetch */\n  lastFetch: number | null;\n  /** An array of token addresses currently being fetched. If there are two\n   * fetches in flight, this array will contain the list of addresses in the\n   * largest request.\n   */\n  inFlightFetchTokens: string[] | null; // used to prevent duplicate fetches\n  /** Token balances */\n  values: {\n    [tokenAddress: string]: string | null; // null while fetching\n  };\n}\n\n// Initially empty.\nexport const initialState: BalancesState = {\n  status: \"idle\",\n  lastFetch: null,\n  inFlightFetchTokens: null,\n  values: {},\n};\n\nconst getSetInFlightRequestTokensAction = (type: \"balances\" | \"allowances\") => {\n  return createAction<string[]>(`${type}/setInFlightRequestTokens`);\n};\n\nconst getThunk: (\n  type: \"balances\" | \"allowances\"\n) => AsyncThunk<\n  { address: string; amount: string }[],\n  {\n    provider: ethers.providers.Web3Provider;\n  },\n  {}\n> = (type: \"balances\" | \"allowances\") => {\n  const methods = {\n    balances: fetchBalances,\n    allowances: fetchAllowances,\n  };\n  return createAsyncThunk<\n    { address: string; amount: string }[],\n    {\n      provider: ethers.providers.Web3Provider;\n    },\n    {\n      // Optional fields for defining thunkApi field types\n      dispatch: AppDispatch;\n      state: RootState;\n    }\n  >(\n    `${type}/requestForActiveTokens`,\n    async (params, { getState, dispatch }) => {\n      try {\n        const state = getState();\n        const activeTokensAddresses = state.metadata.tokens.active;\n        const { chainId, address } = state.wallet;\n        dispatch(\n          getSetInFlightRequestTokensAction(type)(activeTokensAddresses)\n        );\n        const amounts = await methods[type]({\n          ...params,\n          chainId: chainId!,\n          walletAddress: address!,\n          tokenAddresses: activeTokensAddresses,\n        });\n        return activeTokensAddresses.map((address, i) => ({\n          address,\n          amount: amounts[i],\n        }));\n      } catch (e) {\n        console.error(`Error fetching ${type}: ` + e.message);\n        // TODO: error handling\n        return [];\n      }\n    },\n    {\n      // Logic to prevent fetching again if we're already fetching the same or more tokens.\n      condition: (params, { getState }) => {\n        const sliceState = getState()[type];\n        // If we're not fetching, definitely continue\n        if (sliceState.status !== \"fetching\") return true;\n        if (sliceState.inFlightFetchTokens) {\n          const tokensToFetch = getState().metadata.tokens.active;\n          // only fetch if new list is larger.\n          return tokensToFetch.length > sliceState.inFlightFetchTokens.length;\n        }\n      },\n    }\n  );\n};\n\nconst getSlice = (\n  type: \"balances\" | \"allowances\",\n  asyncThunk: ReturnType<typeof getThunk>\n) => {\n  return createSlice({\n    name: type,\n    initialState,\n    reducers: {\n      incrementBy: (\n        state,\n        action: PayloadAction<{ tokenAddress: string; amount: string }>\n      ) => {\n        const currentAmount = BigNumber.from(\n          state.values[action.payload.tokenAddress.toLowerCase()] || 0\n        );\n        state.values[\n          action.payload.tokenAddress.toLowerCase()\n        ] = currentAmount.add(action.payload.amount).toString();\n      },\n      decrementBy: (\n        state,\n        action: PayloadAction<{ tokenAddress: string; amount: string }>\n      ) => {\n        const currentAmount = BigNumber.from(\n          state.values[action.payload.tokenAddress.toLowerCase()] || 0\n        );\n        let newAmount = currentAmount.sub(action.payload.amount);\n        if (newAmount.lt(\"0\")) newAmount = BigNumber.from(\"0\");\n        state.values[\n          action.payload.tokenAddress.toLowerCase()\n        ] = newAmount.toString();\n      },\n      set: (\n        state,\n        action: PayloadAction<{ tokenAddress: string; amount: string }>\n      ) => {\n        state.values[action.payload.tokenAddress.toLowerCase()] =\n          action.payload.amount;\n      },\n    },\n    extraReducers: (builder) => {\n      builder\n        // Reset to initial state if a new account is connected.\n        .addCase(setWalletConnected, () => initialState)\n\n        // Handle requesting balances\n        .addCase(asyncThunk.pending, (state) => {\n          state.status = \"fetching\";\n        })\n        .addCase(getSetInFlightRequestTokensAction(type), (state, action) => {\n          state.inFlightFetchTokens = action.payload;\n        })\n        .addCase(asyncThunk.fulfilled, (state, action) => {\n          state.lastFetch = Date.now();\n          const tokenBalances = action.payload;\n\n          tokenBalances?.forEach(({ address, amount }) => {\n            state.values[address] = amount;\n          });\n\n          // Only clear fetching status if this request contained the largest\n          // list of tokens (which will be stored in inFlightFetchTokens)\n          if (\n            state.inFlightFetchTokens &&\n            tokenBalances.every(\n              (result, i) => state.inFlightFetchTokens![i] === result.address\n            )\n          ) {\n            state.inFlightFetchTokens = null;\n            state.status = \"idle\";\n          }\n        })\n        .addCase(asyncThunk.rejected, (state, action) => {\n          state.status = \"failed\";\n        });\n    },\n  });\n};\n\nexport const selectBalances = (state: RootState) => state.balances;\nexport const selectAllowances = (state: RootState) => state.allowances;\n\nexport const requestActiveTokenBalances = getThunk(\"balances\");\nexport const requestActiveTokenAllowances = getThunk(\"allowances\");\n\nexport const balancesSlice = getSlice(\"balances\", requestActiveTokenBalances);\nexport const allowancesSlice = getSlice(\n  \"allowances\",\n  requestActiveTokenAllowances\n);\n\nexport const {\n  incrementBy: incrementBalanceBy,\n  decrementBy: decrementBalanceBy,\n  set: setBalance,\n} = balancesSlice.actions;\nexport const {\n  incrementBy: incrementAllowanceBy,\n  decrementBy: decreementAllowanceBy,\n  set: setAllowance,\n} = allowancesSlice.actions;\n\nexport const balancesActions = balancesSlice.actions;\nexport const allowancesActions = allowancesSlice.actions;\n\nexport const balancesReducer = balancesSlice.reducer;\nexport const allowancesReducer = allowancesSlice.reducer;\n","import { fetchTokens } from \"@airswap/metadata\";\nimport {\n  createAsyncThunk,\n  createSelector,\n  createSlice,\n  PayloadAction,\n} from \"@reduxjs/toolkit\";\nimport { TokenInfo } from \"@uniswap/token-lists\";\n\nimport { AppDispatch, RootState } from \"../../app/store\";\nimport {\n  setWalletConnected,\n  setWalletDisconnected,\n} from \"../wallet/walletSlice\";\nimport {\n  defaultActiveTokens,\n  getActiveTokensFromLocalStorage,\n} from \"./metadataApi\";\n\nexport interface MetadataState {\n  tokens: {\n    all: {\n      [address: string]: TokenInfo;\n    };\n    active: string[];\n  };\n}\n\nconst initialState: MetadataState = {\n  tokens: {\n    all: {},\n    active: [],\n  },\n};\n\nexport const fetchAllTokens = createAsyncThunk<\n  TokenInfo[],\n  void,\n  {\n    dispatch: AppDispatch;\n    state: RootState;\n  }\n>(\"metadata/fetchTokens\", async (unused, thunkApi) => {\n  const { wallet } = thunkApi.getState();\n  if (!wallet.connected) return [];\n  return await fetchTokens(wallet.chainId!);\n});\n\nexport const metadataSlice = createSlice({\n  name: \"metadata\",\n  initialState,\n  reducers: {\n    addActiveToken: (state, action: PayloadAction<string>) => {\n      const lowerCasedToken = action.payload.trim().toLowerCase();\n      if (!state.tokens.active.includes(lowerCasedToken)) {\n        state.tokens.active.push(lowerCasedToken);\n      }\n    },\n    removeActiveToken: (state, action: PayloadAction<string>) => {\n      if (state.tokens.active.includes(action.payload)) {\n        state.tokens.active = state.tokens.active.filter(\n          (tokenAddress) => tokenAddress !== action.payload\n        );\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchAllTokens.pending, (state) => {\n        // TODO: consider whether we need to put a pending state to prevent dupes\n      })\n      .addCase(fetchAllTokens.fulfilled, (state, action) => {\n        const { payload: tokenInfo } = action;\n        state.tokens.all = tokenInfo.reduce(\n          (allTokens: { [address: string]: TokenInfo }, token) => {\n            const { address } = token;\n            if (!allTokens[address]) {\n              allTokens[address] = { ...token };\n            }\n            return allTokens;\n          },\n          {}\n        );\n      })\n      .addCase(fetchAllTokens.rejected, (state) => {\n        // TODO: handle failure?\n      })\n      .addCase(setWalletConnected, (state, action) => {\n        const { chainId, address } = action.payload;\n        state.tokens.active =\n          getActiveTokensFromLocalStorage(address, chainId) ||\n          defaultActiveTokens[chainId] ||\n          [];\n      })\n      .addCase(setWalletDisconnected, (state) => {\n        state.tokens.active = [];\n      });\n  },\n});\n\nexport const { addActiveToken, removeActiveToken } = metadataSlice.actions;\n\nconst selectActiveTokenAddresses = (state: RootState) =>\n  state.metadata.tokens.active;\nexport const selectAllTokenInfo = (state: RootState) =>\n  Object.values(state.metadata.tokens.all);\nexport const selectActiveTokens = createSelector(\n  [selectActiveTokenAddresses, selectAllTokenInfo],\n  (activeTokenAddresses, allTokenInfo) => {\n    return Object.values(allTokenInfo).filter((tokenInfo) =>\n      activeTokenAddresses.includes(tokenInfo.address)\n    );\n  }\n);\n\nexport default metadataSlice.reducer;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nimport { SubmittedTransaction, SubmittedApproval } from \"./transactionsSlice\";\n\nconst submitTransaction = createAction<\n  SubmittedTransaction | SubmittedApproval\n>(\"transaction/submitTransaction\");\n\nconst declineTransaction = createAction<{\n  hash: string;\n  reason: string;\n}>(\"transactions/declineTransaction\");\n\nconst mineTransaction = createAction<string>(\"transaction/mineTransaction\");\n\nconst revertTransaction = createAction<{\n  hash: string;\n  reason: string;\n}>(\"transactions/revertTransaction\");\n\nexport {\n  submitTransaction,\n  declineTransaction,\n  mineTransaction,\n  revertTransaction,\n};\n","import { Registry, Light, ERC20 } from \"@airswap/protocols\";\nimport { LightOrder } from \"@airswap/types\";\nimport { toAtomicString } from \"@airswap/utils\";\n\nimport { BigNumber, ethers, Transaction } from \"ethers\";\n\nexport async function requestOrder(\n  chainId: number,\n  signerToken: string,\n  senderToken: string,\n  senderAmount: string,\n  senderTokenDecimals: number,\n  senderWallet: string,\n  provider: ethers.providers.Web3Provider\n): Promise<LightOrder[]> {\n  // @ts-ignore TODO: type compatability issue with AirSwap lib\n  const servers = await new Registry(chainId, provider).getServers(\n    signerToken,\n    senderToken\n  );\n  if (!servers.length) {\n    throw new Error(\"no peers\");\n  }\n  const orderPromises = servers.map(async (server) => {\n    const order = await server.getSignerSideOrder(\n      toAtomicString(senderAmount, senderTokenDecimals),\n      signerToken,\n      senderToken,\n      senderWallet\n    );\n    return (order as any) as LightOrder;\n  });\n  const orders = await Promise.allSettled(orderPromises);\n  const successfulOrders = orders\n    .filter((result) => result.status === \"fulfilled\")\n    .map((result) => (result as PromiseFulfilledResult<LightOrder>).value);\n  return successfulOrders;\n}\n\nexport async function approveToken(\n  senderToken: string,\n  provider: ethers.providers.Web3Provider\n) {\n  const spender = Light.getAddress(provider.network.chainId);\n  const approvalTxHash = await new ERC20(senderToken).approve(\n    spender,\n    // @ts-ignore TODO: type compatability issue with AirSwap lib\n    provider.getSigner()\n  );\n  return (approvalTxHash as any) as Transaction;\n}\n\nexport async function takeOrder(\n  order: LightOrder,\n  provider: ethers.providers.Web3Provider\n) {\n  // @ts-ignore TODO: type compatability issue with AirSwap lib\n  const tx = await new Light(provider.network.chainId, provider).swap(\n    order,\n    // @ts-ignore TODO: type compatability issue with AirSwap lib\n    provider.getSigner()\n  );\n  return (tx as any) as Transaction;\n}\n\nexport function orderSortingFunction(a: LightOrder, b: LightOrder) {\n  // If tokens transferred are the same\n  if (a.signerAmount === b.signerAmount && a.senderAmount === b.senderAmount) {\n    return parseInt(b.expiry) - parseInt(a.expiry);\n  }\n  if (a.signerAmount === b.signerAmount) {\n    // Likely senderSide\n    // Sort orders by amount of senderToken sent (ascending).\n    const aAmount = BigNumber.from(a.senderAmount);\n    const bAmount = BigNumber.from(b.senderAmount);\n    if (bAmount.lt(aAmount)) return 1;\n    else return -1;\n  } else {\n    // Likely signerSide\n    // Sort orders by amount of signerToken received (descending).\n    const aAmount = BigNumber.from(a.signerAmount);\n    const bAmount = BigNumber.from(b.signerAmount);\n    if (bAmount.gt(aAmount)) return 1;\n    else return -1;\n  }\n}\n","import { LightOrder } from \"@airswap/types\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nimport { Transaction } from \"ethers\";\n\nimport { RootState } from \"../../app/store\";\nimport {\n  submitTransaction,\n  mineTransaction,\n  revertTransaction,\n  declineTransaction,\n} from \"../transactions/transactionActions\";\nimport {\n  SubmittedOrder,\n  SubmittedApproval,\n} from \"../transactions/transactionsSlice\";\nimport {\n  setWalletConnected,\n  setWalletDisconnected,\n} from \"../wallet/walletSlice\";\nimport {\n  requestOrder,\n  takeOrder,\n  approveToken,\n  orderSortingFunction,\n} from \"./orderAPI\";\n\nexport interface OrdersState {\n  orders: LightOrder[];\n  status: \"idle\" | \"requesting\" | \"taking\" | \"failed\";\n}\n\nconst initialState: OrdersState = {\n  orders: [],\n  status: \"idle\",\n};\n\nexport const request = createAsyncThunk(\n  \"orders/request\",\n  async (params: {\n    chainId: number;\n    signerToken: string;\n    senderToken: string;\n    senderAmount: string;\n    senderTokenDecimals: number;\n    senderWallet: string;\n    provider: any;\n  }) =>\n    await requestOrder(\n      params.chainId,\n      params.signerToken,\n      params.senderToken,\n      params.senderAmount,\n      params.senderTokenDecimals,\n      params.senderWallet,\n      params.provider\n    )\n);\n\nexport const approve = createAsyncThunk(\n  \"orders/approve\",\n  async (params: any, { dispatch }) => {\n    let tx: Transaction;\n    try {\n      tx = await approveToken(params.token, params.library);\n      if (tx.hash) {\n        const transaction: SubmittedApproval = {\n          type: \"Approval\",\n          hash: tx.hash,\n          status: \"processing\",\n          tokenAddress: params.token,\n          timestamp: Date.now(),\n        };\n        dispatch(submitTransaction(transaction));\n        params.library.once(tx.hash, async () => {\n          const receipt = await params.library.getTransactionReceipt(tx.hash);\n          if (receipt.status === 1) {\n            dispatch(mineTransaction(receipt.transactionHash));\n          } else {\n            dispatch(revertTransaction(receipt.transactionHash));\n          }\n        });\n      }\n    } catch (e) {\n      dispatch(declineTransaction(e.message));\n      throw e;\n    }\n  }\n);\n\nexport const take = createAsyncThunk(\n  \"orders/take\",\n  async (params: { order: LightOrder; library: any }, { dispatch }) => {\n    let tx: Transaction;\n    try {\n      tx = await takeOrder(params.order, params.library);\n      if (tx.hash) {\n        const transaction: SubmittedOrder = {\n          type: \"Order\",\n          order: params.order,\n          hash: tx.hash,\n          status: \"processing\",\n          timestamp: Date.now(),\n        };\n        dispatch(submitTransaction(transaction));\n        params.library.once(tx.hash, async () => {\n          const receipt = await params.library.getTransactionReceipt(tx.hash);\n          if (receipt.status === 1) {\n            dispatch(mineTransaction(receipt.transactionHash));\n          } else {\n            dispatch(revertTransaction(receipt.transactionHash));\n          }\n        });\n      }\n    } catch (e) {\n      dispatch(declineTransaction(e.message));\n      throw e;\n    }\n  }\n);\n\nexport const ordersSlice = createSlice({\n  name: \"orders\",\n  initialState,\n  reducers: {\n    clear: (state) => {\n      state.orders = [];\n      state.status = \"idle\";\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(request.pending, (state) => {\n        state.status = \"requesting\";\n      })\n      .addCase(request.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.orders = action.payload!;\n      })\n      .addCase(request.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.orders = [];\n      })\n      .addCase(take.pending, (state) => {\n        state.status = \"taking\";\n      })\n      .addCase(take.fulfilled, (state, action) => {\n        state.status = \"idle\";\n      })\n      .addCase(take.rejected, (state, action) => {\n        state.status = \"failed\";\n      })\n      .addCase(setWalletConnected, (state) => {\n        state.status = \"idle\";\n        state.orders = [];\n      })\n      .addCase(setWalletDisconnected, (state) => {\n        state.status = \"idle\";\n        state.orders = [];\n      });\n  },\n});\n\nexport const { clear } = ordersSlice.actions;\n/**\n * Sorts orders and returns the best order based on tokens received or sent\n * then falling back to expiry.\n */\nexport const selectBestOrder = (state: RootState) =>\n  // Note that `.sort` mutates the array, so we need to clone it first to\n  // prevent mutating state.\n  [...state.orders.orders].sort(orderSortingFunction)[0];\n\nexport const selectSortedOrders = (state: RootState) =>\n  [...state.orders.orders].sort(orderSortingFunction);\nexport const selectOrdersStatus = (state: RootState) => state.orders.status;\nexport default ordersSlice.reducer;\n","import * as RegistryContract from \"@airswap/registry/build/contracts/Registry.sol/Registry.json\";\nimport registryDeploys from \"@airswap/registry/deploys.js\";\n\nimport { providers, utils, Contract, Event } from \"ethers\";\n\nconst RegistryInterface = new utils.Interface(\n  JSON.stringify(RegistryContract.abi)\n);\n\nasync function getStakerTokens(chainId: number, provider: providers.Provider) {\n  const registryContract = new Contract(\n    registryDeploys[chainId],\n    RegistryInterface,\n    provider\n  );\n\n  const addTokensEventFilter = registryContract.filters.AddTokens();\n  const removeTokensEventFilter = registryContract.filters.RemoveTokens();\n\n  // Fetch all AddTokens and RemoveTokens events from the registry\n  const [addEvents, removeEvents] = await Promise.all([\n    registryContract.queryFilter(addTokensEventFilter),\n    registryContract.queryFilter(removeTokensEventFilter),\n  ]);\n\n  // Order matters here, so order AddTokens and RemoveTokens chronologically\n  const sortedEvents: Event[] = [...addEvents, ...removeEvents]\n    .filter((log) => !log.removed)\n    .sort((a, b) => {\n      // Sort by oldest first. If they're not in the same block, sort based\n      // on blocknumber\n      if (a.blockNumber !== b.blockNumber) return a.blockNumber - b.blockNumber;\n      // if in the same block, sort by the index of the log in the block\n      return a.logIndex - b.logIndex;\n    });\n\n  // Hold a list of tokens for each staker.\n  const stakerTokens: Record<string, string[]> = {};\n\n  sortedEvents.forEach((log) => {\n    if (!log.args) return;\n    // @ts-ignore (args are not typed)\n    const [staker, tokens] = log.args as [string, string[]];\n    const lowerCasedTokens = tokens.map((t) => t.toLowerCase());\n    if (log.event === \"AddTokens\") {\n      // Adding tokens\n      stakerTokens[staker] = (stakerTokens[staker] || []).concat(\n        lowerCasedTokens\n      );\n    } else {\n      // Removing tokens\n      stakerTokens[staker] = (stakerTokens[staker] || []).filter(\n        (token) => !lowerCasedTokens.includes(token)\n      );\n    }\n  });\n\n  return stakerTokens;\n}\n\nexport { getStakerTokens };\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { providers } from \"ethers\";\nimport uniqBy from \"lodash.uniqby\";\n\nimport { AppDispatch, RootState } from \"../../app/store\";\nimport { getStakerTokens } from \"./registryAPI\";\n\nexport interface RegistryState {\n  stakerTokens: Record<string, string[]>;\n  allSupportedTokens: string[];\n  status: \"idle\" | \"fetching\" | \"failed\";\n}\n\nconst initialState: RegistryState = {\n  stakerTokens: {},\n  allSupportedTokens: [],\n  status: \"idle\",\n};\n\nexport const fetchSupportedTokens = createAsyncThunk<\n  { allSupportedTokens: string[]; stakerTokens: Record<string, string[]> },\n  {\n    provider: providers.Provider;\n  },\n  {\n    // Optional fields for defining thunkApi field types\n    dispatch: AppDispatch;\n    state: RootState;\n  }\n>(\"registry/fetchSupportedTokens\", async ({ provider }, { getState }) => {\n  const stakerTokens = await getStakerTokens(\n    getState().wallet.chainId!,\n    provider\n  );\n  // Combine token lists from all makers and flatten them.\n  const allSupportedTokens = uniqBy(\n    Object.values(stakerTokens).flat(),\n    (i) => i\n  );\n  return { stakerTokens, allSupportedTokens };\n});\n\nexport const registrySlice = createSlice({\n  name: \"registry\",\n  initialState,\n  reducers: {\n    setStakerTokens: (\n      state,\n      action: PayloadAction<Record<string, string[]>>\n    ) => {\n      state.stakerTokens = { ...action.payload };\n    },\n    setAllSupportedTokens: (state, action: PayloadAction<string[]>) => {\n      state.allSupportedTokens = [...action.payload];\n    },\n    reset: () => {\n      return { ...initialState };\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchSupportedTokens.pending, (state) => {\n        state.status = \"fetching\";\n      })\n      .addCase(fetchSupportedTokens.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.allSupportedTokens = [...action.payload.allSupportedTokens];\n        state.stakerTokens = { ...action.payload.stakerTokens };\n      })\n      .addCase(fetchSupportedTokens.rejected, (state) => {\n        state.status = \"failed\";\n      });\n  },\n});\n\nexport const {\n  setStakerTokens,\n  setAllSupportedTokens,\n  reset,\n} = registrySlice.actions;\nexport const selectAllSupportedTokens = (state: RootState) =>\n  state.registry.allSupportedTokens;\nexport default registrySlice.reducer;\n","import { LightOrder } from \"@airswap/types\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nimport { RootState } from \"../../app/store\";\nimport {\n  submitTransaction,\n  declineTransaction,\n  revertTransaction,\n  mineTransaction,\n} from \"./transactionActions\";\n\nexport interface SubmittedTransaction {\n  type: \"Approval\" | \"Order\";\n  hash: string;\n  status: \"processing\" | \"succeeded\" | \"reverted\";\n  timestamp: number;\n}\n\nexport interface SubmittedOrder extends SubmittedTransaction {\n  order: LightOrder;\n}\n\nexport interface SubmittedApproval extends SubmittedTransaction {\n  tokenAddress: string;\n}\n\nexport interface TransactionsState {\n  all: SubmittedTransaction[];\n}\n\nconst initialState: TransactionsState = {\n  all: [],\n};\n\nfunction updateTransaction(\n  state: TransactionsState,\n  hash: string,\n  status: \"processing\" | \"succeeded\" | \"reverted\"\n) {\n  for (let i in state.all) {\n    if (state.all[i].hash === hash) {\n      state.all[i] = {\n        ...state.all[i],\n        status,\n      };\n      break;\n    }\n  }\n}\n\nexport const ordersSlice = createSlice({\n  name: \"transactions\",\n  initialState,\n  reducers: {\n    clear: (state) => {\n      state.all = [];\n    },\n    setTransactions: (state, action) => {\n      try {\n        state.all = action.payload.all;\n      } catch (err) {\n        console.error(err);\n        state.all = [];\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(submitTransaction, (state, action) => {\n      state.all.unshift(action.payload);\n    });\n    builder.addCase(declineTransaction, (state, action) => {\n      console.error(action.payload);\n    });\n    builder.addCase(revertTransaction, (state, action) => {\n      updateTransaction(state, action.payload.hash, \"reverted\");\n    });\n    builder.addCase(mineTransaction, (state, action) => {\n      updateTransaction(state, action.payload, \"succeeded\");\n    });\n  },\n});\n\nexport const { clear, setTransactions } = ordersSlice.actions;\nexport const selectTransactions = (state: RootState) => state.transactions.all;\nexport default ordersSlice.reducer;\n","import { TokenInfo } from \"@uniswap/token-lists\";\n\nimport styled from \"styled-components/macro\";\n\nexport type sizes = \"small\" | \"medium\" | \"large\";\n\nexport type StlyedTokenLogoProps = {\n  size: sizes;\n  tokenInfo: TokenInfo | null;\n};\n\nconst remSizes: Record<sizes, string> = {\n  small: \"1.5rem\",\n  medium: \"2.5rem\",\n  large: \"3.125rem\",\n};\n\nconst StyledTokenLogo = styled.div<StlyedTokenLogoProps>`\n  width: ${(props) => remSizes[props.size]};\n  height: ${(props) => remSizes[props.size]};\n  background-image: ${(props) =>\n    props.tokenInfo === null ? \"none\" : \"url(\" + props.tokenInfo.logoURI + \")\"};\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-color: ${(props) => props.theme.colors.black};\n  border-radius: 50%;\n  border-color: ${(props) => props.theme.colors.borderGrey};\n  border-style: ${(props) => (props.tokenInfo === null ? \"solid\" : \"none\")};\n  /* Note this is only applied when not empty. */\n  border-width: 1px;\n`;\n\nexport default StyledTokenLogo;\n","import { BaseHTMLAttributes, FC } from \"react\";\n\nimport { TokenInfo } from \"@uniswap/token-lists\";\n\nimport StyledTokenLogo, { StlyedTokenLogoProps } from \"./TokenLogo.styles\";\n\nexport type TokenLogoProps = {\n  tokenInfo: TokenInfo | null;\n} & StlyedTokenLogoProps &\n  BaseHTMLAttributes<HTMLImageElement>;\n\nconst TokenLogo: FC<TokenLogoProps> = ({ tokenInfo, ...rest }) => {\n  return <StyledTokenLogo tokenInfo={tokenInfo} {...rest} />;\n};\n\nexport default TokenLogo;\n","import { MdKeyboardArrowDown } from \"react-icons/md\";\n\nimport styled, { css } from \"styled-components/macro\";\n\nimport {\n  SelectItem,\n  FormLabel,\n  FormInput,\n  Metadata,\n} from \"../Typography/Typography\";\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const AmountAndDetailsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: 0;\n  text-align: right;\n`;\n\nexport const TokenSelectContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  height: 5rem;\n  padding: 1.25em;\n  margin-bottom: 0.625rem;\n  border: 1px solid ${(props) => props.theme.colors.borderGrey};\n  border-radius: 2px;\n  background-color: ${(props) =>\n    props.theme.name === \"dark\"\n      ? props.theme.colors.darkGrey\n      : props.theme.colors.alwaysWhite};\n`;\n\nconst fadeOutWhenInvisible = css<{ invisible: boolean }>`\n  transition: opacity ease-in-out 0.3s;\n  will-change: opacity;\n  opacity: ${(props) => (props.invisible ? 0 : 1)};\n`;\n\nexport const StyledLabel = styled(FormLabel)<{ invisible: boolean }>`\n  ${fadeOutWhenInvisible}\n`;\n\nexport const StyledSelectButtonContent = styled.span<{ emphasize: boolean }>`\n  transition: transform ease-in-out 0.3s;\n  will-change: transform;\n  transform: ${(props) =>\n    props.emphasize\n      ? \"translateY(-0.625rem) scale(1.111111)\"\n      : \"translateY(0) scale(1)\"};\n`;\n\nexport const StyledDownArrow = styled(MdKeyboardArrowDown)<{\n  invisible: boolean;\n}>`\n  ${fadeOutWhenInvisible}\n`;\n\nexport const StyledSelectButton = styled.button`\n  display: flex;\n  flex-direction: column;\n  margin-left: 0.9375rem;\n  cursor: ${(props) => (props.disabled ? \"initial\" : \"pointer\")};\n`;\n\nexport const StyledSelectItem = styled(SelectItem)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 0.5rem;\n`;\n\nexport const AmountInput = styled(FormInput)<{ hasSubtext: boolean }>`\n  padding-right: 0;\n  margin-top: ${(props) => (props.hasSubtext ? \"-0.75rem\" : 0)};\n  text-align: right;\n`;\n\nexport const AmountSubtext = styled(Metadata)`\n  margin-top: -0.25rem;\n`;\n\nexport const PlaceholderContainer = styled.div`\n  display: flex;\n  flex: 1 1 0;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: 0.3125rem;\n  max-width: 50%;\n`;\n\nexport const PlaceholderTop = styled.div`\n  height: 1.25rem;\n  width: 100%;\n  background-image: ${(props) => props.theme.colors.placeholderGradient};\n`;\n\nexport const PlaceholderBottom = styled.div`\n  height: 0.9375rem;\n  width: 75%;\n  background-image: ${(props) => props.theme.colors.placeholderGradient};\n`;\n","import { FC, MouseEventHandler, FormEventHandler } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { TokenInfo } from \"@uniswap/token-lists\";\n\nimport TokenLogo from \"../TokenLogo/TokenLogo\";\nimport {\n  AmountInput,\n  AmountAndDetailsContainer,\n  AmountSubtext,\n  FlexRow,\n  TokenSelectContainer,\n  StyledSelectItem,\n  StyledSelectButton,\n  PlaceholderContainer,\n  PlaceholderTop,\n  PlaceholderBottom,\n  StyledLabel,\n  StyledDownArrow,\n  StyledSelectButtonContent,\n} from \"./TokenSelect.styles\";\n\nexport type TokenSelectProps = {\n  /**\n   * Whether or not the token selector is read only, e.g. when used to display\n   * a quote.\n   */\n  readOnly: boolean;\n  /**\n   * Whether or not to display an amount input with the token select, or to\n   * display a placeholder, e.g. when used to select received token where amount\n   * isn't known yet.\n   */\n  includeAmountInput: boolean;\n  /**\n   * Label - note that this is not shown if the field is readOnly.\n   */\n  label: string;\n  /**\n   * Metadata for currently selected token\n   */\n  selectedToken: TokenInfo | null;\n  /**\n   * Called when the user has clicked on the token dropdown to change token\n   */\n  onChangeTokenClicked: MouseEventHandler<HTMLButtonElement>;\n  /**\n   * Currently selected amount. Not used if `includeAmountInput` is false.\n   */\n  amount?: string | null;\n  /**\n   * Called when the amount is changed. Input change event is passed.\n   */\n  onAmountChange?: FormEventHandler<HTMLInputElement>;\n  /**\n   * Text to include beneath the amount. Currently used for fee information.\n   */\n  amountDetails?: string;\n};\n\nconst TokenSelect: FC<TokenSelectProps> = ({\n  readOnly,\n  includeAmountInput,\n  label,\n  selectedToken,\n  onChangeTokenClicked,\n  amount,\n  onAmountChange,\n  amountDetails,\n}) => {\n  const { t } = useTranslation([\"common\"]);\n  return (\n    <TokenSelectContainer>\n      <FlexRow>\n        <TokenLogo size=\"medium\" tokenInfo={selectedToken} />\n        <StyledSelectButton onClick={onChangeTokenClicked} disabled={readOnly}>\n          <StyledLabel invisible={readOnly}>{label}</StyledLabel>\n          <StyledSelectItem>\n            <StyledSelectButtonContent emphasize={readOnly}>\n              {selectedToken !== null\n                ? selectedToken.symbol\n                : t(\"common:select\")}\n            </StyledSelectButtonContent>\n            <StyledDownArrow invisible={readOnly} />\n          </StyledSelectItem>\n        </StyledSelectButton>\n      </FlexRow>\n      {includeAmountInput ? (\n        <AmountAndDetailsContainer>\n          <AmountInput\n            // @ts-ignore\n            inputMode=\"decimal\"\n            autoComplete=\"off\"\n            pattern=\"^[0-9]*[.,]?[0-9]*$\"\n            minLength={1}\n            maxLength={79}\n            spellCheck={false}\n            value={amount}\n            disabled={readOnly}\n            onChange={onAmountChange}\n            placeholder=\"0.00\"\n            hasSubtext={!!amountDetails}\n          />\n          {amountDetails && <AmountSubtext>{amountDetails}</AmountSubtext>}\n        </AmountAndDetailsContainer>\n      ) : (\n        <PlaceholderContainer>\n          <PlaceholderTop />\n          <PlaceholderBottom />\n        </PlaceholderContainer>\n      )}\n    </TokenSelectContainer>\n  );\n};\n\nexport default TokenSelect;\n","import { AbstractConnector } from \"@web3-react/abstract-connector\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\n\nimport metamaskLogo from \"../assets/wallet-provider-logos/metamask.svg\";\nimport walletconnectLogo from \"../assets/wallet-provider-logos/walletconnect.svg\";\n\nexport type WalletProvider = {\n  name: string;\n  logo: string;\n  getConnector: () => AbstractConnector;\n};\n\nconst SUPPORTED_WALLET_PROVIDERS: WalletProvider[] = [\n  {\n    name: \"MetaMask\",\n    logo: metamaskLogo,\n    getConnector: () =>\n      new InjectedConnector({\n        supportedChainIds: [\n          1, // Mainet\n          3, // Ropsten\n          4, // Rinkeby\n          5, // Goerli\n          42, // Kovan\n        ],\n      }),\n  },\n  {\n    name: \"WalletConnect\",\n    logo: walletconnectLogo,\n    getConnector: () =>\n      new WalletConnectConnector({\n        rpc: {\n          1: process.env.REACT_APP_RPC_URL_1 || \"\",\n          4: process.env.REACT_APP_RPC_URL_4 || \"\",\n        },\n      }),\n  },\n];\n\nexport default SUPPORTED_WALLET_PROVIDERS;\n\nexport { AbstractConnector };\n","export default __webpack_public_path__ + \"static/media/metamask.45038d58.svg\";","export default __webpack_public_path__ + \"static/media/walletconnect.dfa25e47.svg\";","import { AiOutlineLoading } from \"react-icons/ai\";\n\nimport classNames from \"classnames\";\n\ntype LoadingSpinnerProps = { className?: string };\n\nconst LoadingSpinner = ({ className }: LoadingSpinnerProps) => {\n  return (\n    <div\n      className={classNames(\n        \"flex items-center justify-center h-full\",\n        className\n      )}\n    >\n      <AiOutlineLoading className=\"animate-spin\" />\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import styled, { DefaultTheme } from \"styled-components/macro\";\n\nimport { ButtonIntent, ButtonProps } from \"./Button\";\n\nfunction getButtonBackground(\n  theme: DefaultTheme,\n  intent?: ButtonIntent\n): string {\n  switch (intent) {\n    case \"destructive\":\n      return theme.colors.red;\n    case \"positive\":\n      return theme.colors.green;\n    case \"neutral\":\n      return theme.colors.black;\n    default:\n      return theme.colors.primary;\n  }\n}\n\nexport const Text = styled.div`\n  transition: opacity 0.3s ease-out;\n`;\n\nexport const StyledButton = styled.button<ButtonProps>`\n  display: flex;\n  align-items: center;\n  justify-content: ${(props) => props.justifyContent || \"center\"};\n  width: 100%;\n  height: 3.125rem;\n  padding: 0 1rem;\n  font-size: 1rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  border-radius: 2px;\n  border-style: ${(props) => (props.intent === \"neutral\" ? \"solid\" : \"none\")};\n  border-width: 1px;\n  border-color: ${(props) => props.theme.colors.borderGrey};\n  /* Use blue text on a netral light mode button, otherwise white. */\n  color: ${(props) =>\n    props.intent === \"neutral\" && props.theme.name === \"light\"\n      ? props.theme.colors.primary\n      : props.theme.colors.alwaysWhite};\n  background: ${(props) => getButtonBackground(props.theme, props.intent)};\n  pointer-events: ${(props) => (props.disabled ? \"none\" : \"visible\")};\n  cursor: ${(props) => (props.disabled ? \"none\" : \"pointer\")};\n\n  ${Text} {\n    margin-right: ${(props) => (props.loading ? \"1rem\" : 0)};\n    opacity: ${(props) => (props.disabled ? 0.5 : 1)};\n  }\n`;\n","import React from \"react\";\n\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner\";\nimport { StyledButton, Text } from \"./Button.styles\";\n\nexport type ButtonIntent = \"neutral\" | \"primary\" | \"positive\" | \"destructive\";\ntype ButtonJustifyContent = \"center\" | \"flex-start\" | \"flex-end\";\n\nexport type ButtonProps = {\n  children: React.ReactNode;\n  className?: string;\n  /**\n   * Intent affects the appearance of the button\n   */\n  intent?: ButtonIntent;\n  /**\n   * Intent affects the appearance of the button\n   */\n  justifyContent?: ButtonJustifyContent;\n  /**\n   * Whether or not the button should be disabled. Clicking a disabled button\n   * has no effect.\n   */\n  disabled?: boolean;\n  /**\n   * Whether or not to show a loading spinner within the button. This also\n   * prevents further clicks on the button\n   */\n  loading?: boolean;\n} & React.ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport const Button = ({\n  children,\n  className = \"\",\n  intent = \"neutral\",\n  justifyContent = \"center\",\n  disabled = false,\n  loading = false,\n  onClick,\n  ...rest\n}: ButtonProps) => {\n  return (\n    <StyledButton\n      className={className}\n      loading={loading}\n      intent={intent}\n      disabled={disabled || loading}\n      justifyContent={justifyContent}\n      onClick={(e) => {\n        !loading && onClick && onClick(e);\n      }}\n      {...rest}\n    >\n      <Text>{children}</Text>\n      {loading && <LoadingSpinner />}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","import SUPPORTED_WALLET_PROVIDERS, {\n  WalletProvider,\n} from \"../../constants/supportedWalletProviders\";\nimport Button from \"../Button/Button\";\n\nexport type WalletProviderListProps = {\n  onProviderSelected: (provider: WalletProvider) => void;\n};\n\nconst WalletProviderList = ({\n  onProviderSelected,\n}: WalletProviderListProps) => {\n  return (\n    <div className=\"flex flex-col gap-2\">\n      {SUPPORTED_WALLET_PROVIDERS.map((provider) => (\n        <Button\n          key={provider.name}\n          justifyContent=\"flex-start\"\n          intent=\"neutral\"\n          onClick={() => {\n            onProviderSelected(provider);\n          }}\n        >\n          <div className=\"flex gap-2 items-center pr-2\">\n            <img\n              src={provider.logo}\n              alt={`${provider.name} logo`}\n              className=\"w-12 h-12\"\n            />\n            <span className=\"flex-1\">{provider.name}</span>\n          </div>\n        </Button>\n      ))}\n    </div>\n  );\n};\n\nexport default WalletProviderList;\n","import { useState, useEffect } from \"react\";\n\nexport type TimerProps = {\n  className?: string;\n  /**\n   * Expiration time in unix timestamp (s)\n   */\n  expiryTime: number;\n  onTimerComplete: () => void;\n};\n\nexport const Timer = ({\n  expiryTime = Date.now() / 1000 + 300,\n  onTimerComplete,\n}: TimerProps) => {\n  const [distance, setDistance] = useState<number>(\n    Math.floor(expiryTime - Date.now() / 1000)\n  );\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      const dist: number = Math.floor(expiryTime - Date.now() / 1000);\n\n      if (dist <= 0) {\n        setDistance(0);\n        clearInterval(interval);\n        onTimerComplete();\n        return;\n      }\n\n      setDistance(dist);\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [expiryTime, onTimerComplete]);\n\n  return distance !== undefined ? (\n    <span>\n      {Math.floor(distance / 60)}:\n      {Math.floor(distance % 60) < 10\n        ? `0${Math.floor(distance % 60)}`\n        : Math.floor(distance % 60)}\n    </span>\n  ) : null;\n};\n\nexport default Timer;\n","import { IoMdSwap } from \"react-icons/io\";\n\nimport styled from \"styled-components/macro\";\n\nexport const StyledInvertPriceButton = styled.button`\n  margin-left: 0.5rem;\n`;\n\nexport const StyledInvertPriceIcon = styled(IoMdSwap)`\n  position: relative;\n  top: 0.4rem;\n  margin-top: -0.5rem;\n  font-size: 1.5rem;\n`;\n\nexport const TimerContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0.25rem 1.5rem;\n  margin-top: 0.875rem;\n  border: 1px solid ${(props) => props.theme.colors.borderGrey};\n  border-radius: 1rem;\n`;\n\nexport const NewQuoteText = styled.span`\n  font-size: 0.75rem;\n  line-height: 2;\n  font-weight: 700;\n  text-transform: uppercase;\n`;\n\nexport const TimerText = styled(NewQuoteText)`\n  /* Fixed width to prevent jumping around as timer reduces */\n  width: 2rem;\n  color: ${(props) =>\n    props.theme.name === \"dark\"\n      ? props.theme.colors.white\n      : props.theme.colors.primary};\n  margin-left: 0.25rem;\n`;\n","import { FC, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { LightOrder } from \"@airswap/types\";\nimport { TokenInfo } from \"@uniswap/token-lists\";\n\nimport { BigNumber } from \"bignumber.js\";\n\nimport Timer from \"../../components/Timer/Timer\";\nimport stringToSignificantDecimals from \"../../helpers/stringToSignificantDecimals\";\nimport { InfoHeading, InfoSubHeading } from \"../Typography/Typography\";\nimport {\n  StyledInvertPriceButton,\n  StyledInvertPriceIcon,\n  TimerContainer,\n  NewQuoteText,\n  TimerText,\n} from \"./InfoSection.styles\";\n\nexport type InfoSectionProps = {\n  isConnected: boolean;\n  isPairUnavailable: boolean;\n  orderSubmitted: boolean;\n  isFetchingOrders: boolean;\n  isApproving: boolean;\n  isSwapping: boolean;\n  order: LightOrder | null;\n  requiresApproval: boolean;\n  signerTokenInfo: TokenInfo | null;\n  senderTokenInfo: TokenInfo | null;\n  timerExpiry: number | null;\n  onTimerComplete: () => void;\n};\n\nconst InfoSection: FC<InfoSectionProps> = ({\n  isConnected,\n  isPairUnavailable,\n  orderSubmitted,\n  isApproving,\n  isSwapping,\n  order,\n  isFetchingOrders,\n  requiresApproval,\n  senderTokenInfo,\n  signerTokenInfo,\n  timerExpiry,\n  onTimerComplete,\n}) => {\n  const { t } = useTranslation([\"orders\", \"marketing\"]);\n  const [invertPrice, setInvertPrice] = useState<boolean>(false);\n  // Wallet not connected.\n  if (!isConnected) {\n    return (\n      <>\n        <InfoHeading>{t(\"marketing:useAtOwnRisk\")}</InfoHeading>\n        <InfoSubHeading>{t(\"marketing:alphaPreview\")}</InfoSubHeading>\n      </>\n    );\n  }\n\n  if (isFetchingOrders) {\n    return (\n      <>\n        <InfoHeading>{t(\"orders:findingBestPrice\")}</InfoHeading>\n        <InfoSubHeading>{t(\"orders:scanningPeers\")}</InfoSubHeading>\n      </>\n    );\n  }\n\n  if (isPairUnavailable) {\n    return (\n      <>\n        <InfoHeading>{t(\"orders:tokenPairUnavailable\")}</InfoHeading>\n        <InfoSubHeading>{t(\"orders:retryOrCancel\")}</InfoSubHeading>\n      </>\n    );\n  }\n\n  if (orderSubmitted) {\n    return (\n      <>\n        <InfoHeading>{t(\"orders:submitted\")}</InfoHeading>\n        <InfoSubHeading>{t(\"orders:trackTransaction\")}</InfoSubHeading>\n      </>\n    );\n  }\n\n  if (isApproving) {\n    return (\n      <>\n        <InfoHeading>\n          {t(\"orders:approvePending\", { symbol: senderTokenInfo!.symbol })}\n        </InfoHeading>\n        <InfoSubHeading>{t(\"orders:approveMessage\")}</InfoSubHeading>\n      </>\n    );\n  }\n\n  if (isSwapping) {\n    return (\n      <>\n        <InfoHeading>{t(\"orders:swapPending\")}</InfoHeading>\n        <InfoSubHeading>{t(\"orders:swapMessage\")}</InfoSubHeading>\n      </>\n    );\n  }\n\n  if (!!order) {\n    // TODO: ideally refactor out bignumber.js\n    let price = new BigNumber(order.signerAmount)\n      .dividedBy(new BigNumber(order.senderAmount))\n      .dividedBy(10 ** (signerTokenInfo!.decimals - senderTokenInfo!.decimals));\n\n    if (invertPrice) {\n      price = new BigNumber(1).dividedBy(price);\n    }\n\n    return (\n      <>\n        <InfoHeading>\n          1 {invertPrice ? signerTokenInfo!.symbol : senderTokenInfo!.symbol} ={\" \"}\n          {stringToSignificantDecimals(price.toString())}{\" \"}\n          {invertPrice ? senderTokenInfo!.symbol : signerTokenInfo!.symbol}\n          <StyledInvertPriceButton onClick={() => setInvertPrice((p) => !p)}>\n            <StyledInvertPriceIcon />\n          </StyledInvertPriceButton>\n        </InfoHeading>\n        {requiresApproval ? (\n          <InfoSubHeading>\n            {t(\"orders:approvalRequired\", { symbol: senderTokenInfo!.symbol })}\n          </InfoSubHeading>\n        ) : (\n          <InfoSubHeading>\n            <TimerContainer>\n              <NewQuoteText>{t(\"orders:newQuoteIn\")}</NewQuoteText>\n              {order && (\n                <TimerText>\n                  <Timer\n                    expiryTime={timerExpiry!}\n                    onTimerComplete={onTimerComplete}\n                  ></Timer>\n                </TimerText>\n              )}\n            </TimerContainer>\n          </InfoSubHeading>\n        )}\n      </>\n    );\n  }\n\n  // No order & not fetching, but wallet connected.\n  return (\n    <>\n      <InfoHeading>{t(\"marketing:useAtOwnRisk\")}</InfoHeading>\n      <InfoSubHeading>{t(\"marketing:alphaPreview\")}</InfoSubHeading>\n    </>\n  );\n};\n\nexport default InfoSection;\n","import { MdDoneAll } from \"react-icons/md\";\n\nimport styled from \"styled-components/macro\";\n\nimport Button from \"../Button/Button\";\n\nexport const Header = styled.div`\n  margin-bottom: 1.875rem;\n`;\n\nexport const QuoteAndTimer = styled.div`\n  display: flex;\n  margin-bottom: 1rem;\n`;\n\nexport const BackButton = styled(Button)`\n  flex: 1 0 0;\n`;\nexport const SubmitButton = styled(Button)`\n  flex: 2.33333333 0 0;\n`;\n\nexport const InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 11.25rem;\n  margin-top: -0.625rem;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 1.25rem;\n  margin-bottom: 2.75rem;\n`;\n\nexport const SwapIconContainer = styled.div`\n  position: absolute;\n  /* right: 3.75rem; */\n  right: 14.125rem;\n  top: 10rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 1.75rem;\n  height: 1.75rem;\n  /* margin-top: -1rem; */\n  /* margin-bottom: -0.875rem; */\n  border: 1px solid ${(props) => props.theme.colors.borderGrey};\n  background-color: ${(props) => props.theme.colors.black};\n  font-size: 1.25rem;\n`;\n\nexport const HugeTicks = styled(MdDoneAll)`\n  font-size: 8rem;\n  margin: 5rem auto 2px auto;\n`;\n\nexport const Placeholder = styled.div`\n  height: 5rem;\n`;\n\nexport const StyledSwapWidget = styled.div`\n  height: 100%;\n`;\n\nexport default StyledSwapWidget;\n","import { useState, FormEvent, useMemo, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { MdArrowDownward, MdBlock } from \"react-icons/md\";\nimport Modal from \"react-modal\";\n\nimport { findTokenByAddress } from \"@airswap/metadata\";\nimport { toDecimalString } from \"@airswap/utils\";\nimport { toAtomicString } from \"@airswap/utils\";\nimport { useMatomo } from \"@datapunt/matomo-tracker-react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport { BigNumber } from \"ethers\";\nimport { parseUnits } from \"ethers/lib/utils\";\n\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\nimport TokenSelection from \"../../components/TokenSelection/TokenSelection\";\nimport { Title } from \"../../components/Typography/Typography\";\nimport {\n  requestActiveTokenAllowances,\n  requestActiveTokenBalances,\n} from \"../../features/balances/balancesSlice\";\nimport {\n  selectBalances,\n  selectAllowances,\n} from \"../../features/balances/balancesSlice\";\nimport {\n  selectActiveTokens,\n  selectAllTokenInfo,\n  addActiveToken,\n  removeActiveToken,\n} from \"../../features/metadata/metadataSlice\";\nimport {\n  approve,\n  request,\n  take,\n  selectBestOrder,\n  selectOrdersStatus,\n  clear,\n} from \"../../features/orders/ordersSlice\";\nimport { selectAllSupportedTokens } from \"../../features/registry/registrySlice\";\nimport {\n  SubmittedApproval,\n  selectTransactions,\n} from \"../../features/transactions/transactionsSlice\";\nimport { setActiveProvider } from \"../../features/wallet/walletSlice\";\nimport stringToSignificantDecimals from \"../../helpers/stringToSignificantDecimals\";\nimport TokenSelect from \"../TokenSelect/TokenSelect\";\nimport WalletProviderList from \"../WalletProviderList/WalletProviderList\";\nimport InfoSection from \"./InfoSection\";\nimport StyledSwapWidget, {\n  Header,\n  InfoContainer,\n  SubmitButton,\n  BackButton,\n  SwapIconContainer,\n  ButtonContainer,\n  HugeTicks,\n  Placeholder,\n} from \"./SwapWidget.styles\";\n\nconst floatRegExp = new RegExp(\"^([0-9])*[.,]?([0-9])*$\");\n\nconst SwapWidget = () => {\n  const [senderToken, setSenderToken] = useState<string>();\n  const [signerToken, setSignerToken] = useState<string>();\n  const [senderAmount, setSenderAmount] = useState(\"0.01\");\n  const [showWalletList, setShowWalletList] = useState<boolean>(false);\n  const [showTokenSelection, setShowTokenSelection] = useState<boolean>(false);\n  const [isApproving, setIsApproving] = useState<boolean>(false);\n  const [isSwapping, setIsSwapping] = useState<boolean>(false);\n  const [isConnecting, setIsConnecting] = useState<boolean>(false);\n  const [pairUnavailable, setPairUnavailable] = useState<boolean>(false);\n  const [showOrderSubmitted, setShowOrderSubmitted] = useState<boolean>(false);\n\n  const [tokenSelectType, setTokenSelectType] = useState<\n    \"senderToken\" | \"signerToken\"\n  >(\"senderToken\");\n  const dispatch = useAppDispatch();\n  const transactions = useAppSelector(selectTransactions);\n  const balances = useAppSelector(selectBalances);\n  const allowances = useAppSelector(selectAllowances);\n  const order = useAppSelector(selectBestOrder);\n  const ordersStatus = useAppSelector(selectOrdersStatus);\n  const activeTokens = useAppSelector(selectActiveTokens);\n  const allTokens = useAppSelector(selectAllTokenInfo);\n  const supportedTokens = useAppSelector(selectAllSupportedTokens);\n  const { t } = useTranslation([\"orders\", \"common\", \"wallet\", \"balances\"]);\n  const {\n    chainId,\n    account,\n    library,\n    active,\n    activate,\n  } = useWeb3React<Web3Provider>();\n  const { trackEvent } = useMatomo();\n\n  const senderTokenInfo = useMemo(\n    () => (senderToken ? findTokenByAddress(senderToken, activeTokens) : null),\n    [senderToken, activeTokens]\n  );\n  const signerTokenInfo = useMemo(\n    () => (signerToken ? findTokenByAddress(signerToken, activeTokens) : null),\n    [signerToken, activeTokens]\n  );\n\n  useEffect(() => {\n    setSenderToken(\"\");\n    setSignerToken(\"\");\n    setSenderAmount(\"\");\n  }, [chainId]);\n\n  const getTokenDecimals = (tokenAddress: string) => {\n    for (const token of activeTokens) {\n      if (token.address === tokenAddress) return token.decimals;\n    }\n    return null;\n  };\n\n  const getTokenApprovalStatus = (tokenId: string | undefined) => {\n    if (tokenId === undefined) return null;\n    for (let i = transactions.length - 1; i >= 0; i--) {\n      if (transactions[i].type === \"Approval\") {\n        const approvalTx: SubmittedApproval = transactions[\n          i\n        ] as SubmittedApproval;\n        if (approvalTx.tokenAddress === tokenId) return approvalTx.status;\n      }\n    }\n    return null;\n  };\n\n  const hasSufficientAllowance = (tokenAddress: string | undefined) => {\n    if (!tokenAddress) return false;\n    if (!allowances.values[tokenAddress]) return false;\n    return allowances.values[tokenAddress]! >= senderAmount;\n  };\n\n  // function to only allow numerical and dot values to be inputted\n  const handleTokenAmountChange = (e: FormEvent<HTMLInputElement>) => {\n    let value = e.currentTarget.value;\n    if (value === \"\" || floatRegExp.test(value)) {\n      if (value[value.length - 1] === \",\")\n        value = value.slice(0, value.length - 1) + \".\";\n      setSenderAmount(value);\n    }\n  };\n\n  const DisplayedButtons = () => {\n    if (!active || !chainId) {\n      return (\n        <SubmitButton\n          intent=\"primary\"\n          loading={isConnecting}\n          onClick={() => setShowWalletList(true)}\n        >\n          {t(\"wallet:connectWallet\")}\n        </SubmitButton>\n      );\n    } else if (isApproving || isSwapping) {\n      return <></>;\n    } else if (pairUnavailable) {\n      return (\n        <>\n          <BackButton\n            onClick={() => {\n              dispatch(clear());\n              setPairUnavailable(false);\n            }}\n          >\n            {t(\"common:back\")}\n          </BackButton>\n        </>\n      );\n    } else if (showOrderSubmitted) {\n      return (\n        <SubmitButton\n          intent=\"primary\"\n          onClick={() => {\n            dispatch(clear());\n            setShowOrderSubmitted(false);\n          }}\n        >\n          {t(\"orders:newSwap\")}\n        </SubmitButton>\n      );\n    } else if (\n      signerAmount &&\n      hasSufficientAllowance(senderToken) &&\n      signerToken &&\n      senderToken\n    ) {\n      return (\n        <>\n          <BackButton\n            onClick={() => {\n              dispatch(clear());\n            }}\n          >\n            {t(\"common:back\")}\n          </BackButton>\n          <SubmitButton\n            intent=\"primary\"\n            aria-label={t(\"orders:take\", { context: \"aria\" })}\n            disabled={isNaN(parseFloat(signerAmount))}\n            loading={ordersStatus === \"taking\"}\n            onClick={async () => {\n              try {\n                setIsSwapping(true);\n                const result = await dispatch(take({ order, library }));\n                setIsSwapping(false);\n                await unwrapResult(result);\n                setShowOrderSubmitted(true);\n              } catch (e) {\n                if (e.code && e.code === 4001) {\n                  // 4001 is metamask user declining transaction sig, do nothing\n                } else {\n                  // FIXME: notify user - toast?\n                }\n              }\n            }}\n          >\n            {t(\"orders:take\")}\n          </SubmitButton>\n        </>\n      );\n    } else if (signerAmount && signerToken && senderToken) {\n      return (\n        <>\n          <BackButton\n            onClick={() => {\n              dispatch(clear());\n            }}\n          >\n            {t(\"common:back\")}\n          </BackButton>\n          <SubmitButton\n            intent=\"primary\"\n            aria-label={t(\"orders:approve\", { context: \"aria\" })}\n            loading={\n              getTokenApprovalStatus(senderToken) === \"processing\" ||\n              isApproving\n            }\n            onClick={async () => {\n              setIsApproving(true);\n              await dispatch(approve({ token: senderToken, library }));\n              setIsApproving(false);\n            }}\n          >\n            {t(\"orders:approve\")}\n          </SubmitButton>\n        </>\n      );\n    } else {\n      return (\n        <SubmitButton\n          intent=\"primary\"\n          disabled={\n            !decimalsFound ||\n            !senderToken ||\n            !signerToken ||\n            !senderAmount ||\n            insufficientBalance ||\n            parseFloat(senderAmount) === 0\n          }\n          loading={ordersStatus === \"requesting\"}\n          onClick={async () => {\n            try {\n              trackEvent({ category: \"order\", action: \"request\" });\n              const result = await dispatch(\n                request({\n                  chainId: chainId!,\n                  senderToken: senderToken!,\n                  senderAmount,\n                  senderTokenDecimals: senderTokenInfo!.decimals,\n                  signerToken: signerToken!,\n                  senderWallet: account!,\n                  provider: library,\n                })\n              );\n              await unwrapResult(result);\n            } catch (e) {\n              switch (e.message) {\n                // may want to handle no peers differently in future.\n                // case \"no peers\": {\n                //   break;\n                // }\n                default: {\n                  setPairUnavailable(true);\n                }\n              }\n            }\n          }}\n        >\n          {!insufficientBalance\n            ? !senderAmount || parseFloat(senderAmount) === 0\n              ? t(\"orders:enterAmount\")\n              : decimalsFound\n              ? t(\"orders:continue\")\n              : t(\"orders:decimalsNotFound\")\n            : t(\"orders:insufficentBalance\", {\n                symbol: senderTokenInfo?.symbol,\n              })}\n        </SubmitButton>\n      );\n    }\n  };\n\n  let signerAmount: string | null = null;\n  if (order) {\n    const signerDecimals = getTokenDecimals(order.signerToken);\n    if (signerDecimals) {\n      signerAmount = toDecimalString(order.signerAmount, signerDecimals);\n    } else {\n      signerAmount = t(\"orders:decimalsNotFound\");\n    }\n  }\n\n  let parsedSenderAmount = null;\n  let insufficientBalance: boolean = false;\n  let decimalsFound: boolean = true;\n  if (senderAmount && senderToken && Object.keys(balances.values).length) {\n    if (parseFloat(senderAmount) === 0) {\n      insufficientBalance = false;\n    } else {\n      const senderDecimals = getTokenDecimals(senderToken);\n      if (senderDecimals) {\n        parsedSenderAmount = parseUnits(senderAmount, senderDecimals);\n        insufficientBalance = BigNumber.from(\n          balances.values[senderToken!] || toAtomicString(\"0\", 18)\n        ).lt(parsedSenderAmount);\n      } else decimalsFound = false;\n    }\n  }\n\n  const handleAddActiveToken = (address: string) => {\n    if (library) {\n      dispatch(addActiveToken(address));\n      dispatch(requestActiveTokenBalances({ provider: library! }));\n      dispatch(requestActiveTokenAllowances({ provider: library! }));\n    }\n  };\n\n  const handleRemoveActiveToken = (address: string) => {\n    if (library) {\n      if (address === senderToken) {\n        setSenderToken(\"\");\n        setSenderAmount(\"0.01\");\n      } else if (address === signerToken) setSignerToken(\"\");\n      dispatch(removeActiveToken(address));\n      dispatch(requestActiveTokenBalances({ provider: library! }));\n      dispatch(requestActiveTokenAllowances({ provider: library! }));\n    }\n  };\n\n  return (\n    <>\n      <StyledSwapWidget>\n        <Header>\n          <Title type=\"h2\">{isApproving ? \"Approve\" : \"Swap\"}</Title>\n        </Header>\n        {showOrderSubmitted ? (\n          <HugeTicks />\n        ) : isApproving || isSwapping ? (\n          <Placeholder />\n        ) : (\n          <>\n            <TokenSelect\n              label={t(\"orders:from\")}\n              amount={senderAmount}\n              onAmountChange={(e) => handleTokenAmountChange(e)}\n              onChangeTokenClicked={() => {\n                setTokenSelectType(\"senderToken\");\n                setShowTokenSelection(true);\n              }}\n              readOnly={!!signerAmount || pairUnavailable}\n              includeAmountInput={true}\n              selectedToken={senderTokenInfo}\n            />\n            <SwapIconContainer>\n              {pairUnavailable ? <MdBlock /> : <MdArrowDownward />}\n            </SwapIconContainer>\n            <TokenSelect\n              label={t(\"orders:to\")}\n              amount={signerAmount && stringToSignificantDecimals(signerAmount)}\n              onAmountChange={(e) => handleTokenAmountChange(e)}\n              onChangeTokenClicked={() => {\n                setTokenSelectType(\"signerToken\");\n                setShowTokenSelection(true);\n              }}\n              readOnly={!!signerAmount || pairUnavailable}\n              includeAmountInput={!!signerAmount}\n              amountDetails={\n                !!signerAmount ? t(\"orders:afterFee\", { fee: \"0.3%\" }) : \"\"\n              }\n              selectedToken={signerTokenInfo}\n            />\n          </>\n        )}\n        <InfoContainer>\n          <InfoSection\n            orderSubmitted={showOrderSubmitted}\n            isConnected={active}\n            isPairUnavailable={pairUnavailable}\n            isFetchingOrders={ordersStatus === \"requesting\"}\n            isApproving={isApproving}\n            isSwapping={isSwapping}\n            order={order}\n            requiresApproval={order && !hasSufficientAllowance(senderToken)}\n            senderTokenInfo={senderTokenInfo}\n            signerTokenInfo={signerTokenInfo}\n            timerExpiry={order ? parseInt(order.expiry) - 60 : null}\n            onTimerComplete={() => {\n              dispatch(\n                request({\n                  chainId: chainId!,\n                  senderToken: senderToken!,\n                  senderAmount,\n                  senderTokenDecimals: senderTokenInfo!.decimals,\n                  signerToken: signerToken!,\n                  senderWallet: account!,\n                  provider: library,\n                })\n              );\n              trackEvent({ category: \"order\", action: \"request\" });\n            }}\n          />\n        </InfoContainer>\n        <ButtonContainer>\n          <DisplayedButtons />\n        </ButtonContainer>\n      </StyledSwapWidget>\n\n      <Modal\n        isOpen={showWalletList}\n        onRequestClose={() => setShowWalletList(false)}\n        className=\"modal\"\n        overlayClassName=\"overlay\"\n      >\n        {/* need to come back and fill out onProviderSelected */}\n        <WalletProviderList\n          onProviderSelected={(provider) => {\n            dispatch(setActiveProvider(provider.name));\n            setIsConnecting(true);\n            activate(provider.getConnector()).finally(() =>\n              setIsConnecting(false)\n            );\n            setShowWalletList(false);\n          }}\n        />\n      </Modal>\n      {showTokenSelection && (\n        <TokenSelection\n          signerToken={signerToken!}\n          senderToken={senderToken!}\n          setSignerToken={setSignerToken}\n          setSenderToken={setSenderToken}\n          tokenSelectType={tokenSelectType}\n          balances={balances}\n          allTokens={allTokens}\n          activeTokens={activeTokens}\n          supportedTokenAddresses={supportedTokens}\n          addActiveToken={handleAddActiveToken}\n          removeActiveToken={handleRemoveActiveToken}\n          onClose={() => setShowTokenSelection(false)}\n          chainId={chainId!}\n        />\n      )}\n    </>\n  );\n};\n\nexport default SwapWidget;\n","import SwapWidget from \"../../components/SwapWidget/SwapWidget\";\n\nexport function Orders() {\n  return <SwapWidget />;\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { ThemeType } from \"styled-components/macro\";\n\nimport { RootState } from \"../../app/store\";\nimport getInitialThemeValue from \"./helpers/getInitialThemeValue\";\n\nexport interface UserSettingsState {\n  theme: ThemeType;\n}\n\nexport const THEME_LOCAL_STORAGE_KEY = \"airswap/theme\";\n\nconst initialState: UserSettingsState = {\n  theme: getInitialThemeValue(),\n};\n\nconst userSettingsSlice = createSlice({\n  name: \"userSettings\",\n  initialState,\n  reducers: {\n    toggleTheme: (state) => {\n      const theme: ThemeType = state.theme === \"dark\" ? \"light\" : \"dark\";\n      localStorage[THEME_LOCAL_STORAGE_KEY] = theme;\n      state.theme = theme;\n    },\n  },\n});\n\nexport const selectUserSettings = (state: RootState) => state.userSettings;\n\nexport const { toggleTheme } = userSettingsSlice.actions;\n\nexport default userSettingsSlice.reducer;\n","import { ThemeType } from \"styled-components/macro\";\n\nimport { THEME_LOCAL_STORAGE_KEY } from \"../userSettingsSlice\";\n\nexport default function getInitialThemeValue(): ThemeType {\n  if (localStorage[THEME_LOCAL_STORAGE_KEY] === \"dark\") {\n    return \"dark\";\n  }\n\n  if (localStorage[THEME_LOCAL_STORAGE_KEY] === \"light\") {\n    return \"light\";\n  }\n\n  return \"dark\";\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  gap: 1rem;\n  padding: 1rem 0;\n`;\n\nexport const Link = styled.a`\n  text-decoration: underline;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n`;\n","import { Paragraph, Title } from \"../Typography/Typography\";\nimport { Container, Link } from \"./Content.style\";\n\nconst Introduction = () => {\n  return (\n    <>\n      <Container>\n        <Title type=\"h1\">Welcome to AirSwap</Title>\n        <Paragraph>\n          We are an open developer community building decentralized trading\n          systems.\n          <br />\n          <br />\n          More content will be displayed here soon.\n        </Paragraph>\n        <Link href=\"https://chat.airswap.io/\">Join the Discord →</Link>\n      </Container>\n    </>\n  );\n};\n\nexport default Introduction;\n","import { Paragraph, Title } from \"../Typography/Typography\";\nimport { Container, Link } from \"./Content.style\";\n\nconst Organization = () => {\n  return (\n    <>\n      <Container>\n        <Title type=\"h1\">Stake to Join</Title>\n        <Paragraph>\n          We are an open developer community building decentralized trading\n          systems.\n          <br />\n          <br />\n          More content will be displayed here soon.\n        </Paragraph>\n        <Link href=\"https://activate.codefi.network/staking/airswap/governance\">\n          Stake your tokens →\n        </Link>\n      </Container>\n    </>\n  );\n};\n\nexport default Organization;\n","import { Paragraph, Title } from \"../Typography/Typography\";\nimport { Container, Link } from \"./Content.style\";\n\nconst Products = () => {\n  return (\n    <>\n      <Container>\n        <Title type=\"h1\">Peer-to-peer Trading</Title>\n        <Paragraph>\n          We are an open developer community building decentralized trading\n          systems.\n          <br />\n          <br />\n          More content will be displayed here soon.\n        </Paragraph>\n        <Link href=\"https://docs.airswap.io/\">Check the docs →</Link>\n      </Container>\n    </>\n  );\n};\n\nexport default Products;\n","import Blockies from \"react-blockies\";\n\nimport styled from \"styled-components\";\n\nexport const StyledWalletAddress = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Button = styled.div`\n  border: 0;\n  margin: 0;\n  padding: 1rem;\n  cursor: pointer;\n  background: none;\n`;\n\nexport const BlockiesContainer = styled.div`\n  position: relative;\n  margin-right: 1.25rem;\n\n  &::after {\n    display: block;\n    content: \"\";\n    position: absolute;\n    background-color: ${(props) => props.theme.colors.green};\n    border-radius: 50%;\n    z-index: 5;\n    width: 0.5rem;\n    height: 0.5rem;\n    top: 1rem;\n    left: 1rem;\n  }\n`;\n\nexport const StyledBlockies = styled(Blockies)`\n  border-radius: 50%;\n  overflow: hidden;\n`;\n\nexport const GreenCircle = styled.div`\n  margin-right: 0.5rem;\n  width: 0.5rem;\n  height: 0.5rem;\n  background-color: ${(props) => props.theme.colors.green};\n  border-radius: 50%;\n`;\n","import truncateEthAddress from \"truncate-eth-address\";\n\nimport { InfoHeading } from \"../../../Typography/Typography\";\nimport {\n  StyledWalletAddress,\n  BlockiesContainer,\n  GreenCircle,\n  Button,\n  StyledBlockies,\n} from \"./WalletAddress.styles\";\n\ntype WalletBlockiesProps = {\n  address: string;\n  isButton?: boolean;\n  showBlockies?: boolean;\n  onClick?: () => void;\n  className?: string;\n};\n\nconst WalletAddress = ({\n  address,\n  isButton = false,\n  showBlockies = false,\n  className = \"\",\n  onClick,\n}: WalletBlockiesProps) => {\n  const renderContent = () => (\n    <StyledWalletAddress className={className}>\n      {showBlockies ? (\n        <BlockiesContainer>\n          <StyledBlockies\n            size={8}\n            scale={3}\n            seed={address}\n            bgColor=\"black\"\n            color=\"#2b72ff\"\n          />\n        </BlockiesContainer>\n      ) : (\n        <GreenCircle />\n      )}\n      <InfoHeading>{truncateEthAddress(address)}</InfoHeading>\n    </StyledWalletAddress>\n  );\n\n  if (isButton) {\n    return <Button onClick={onClick}>{renderContent()}</Button>;\n  }\n\n  return renderContent();\n};\n\nexport default WalletAddress;\n","import styled from \"styled-components/macro\";\n\nimport Button from \"../Button/Button\";\nimport IconButton from \"../IconButton/IconButton\";\nimport { InfoHeading } from \"../Typography/Typography\";\nimport WalletAddress from \"./subcomponents/WalletAddress/WalletAddress\";\n\nexport const OpenWallet = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 2px;\n  padding: 1.375rem 1.5rem;\n  width: 21.5rem;\n  min-height: 21.5rem;\n  background: ${(props) => props.theme.colors.darkGrey};\n  overflow: hidden;\n`;\n\nexport const OpenWalletTopContainer = styled.div`\n  display: flex;\n  position: relative;\n  border-bottom: 1px solid ${(props) => props.theme.colors.borderGrey};\n  width: 100%;\n  padding-bottom: 1.1875rem;\n`;\n\nexport const StyledWalletButton = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const StyledWalletAddress = styled(WalletAddress)`\n  ${InfoHeading} {\n    font-size: 1.125rem;\n    font-weight: 700;\n  }\n`;\n\nexport const NoTransactions = styled.span`\n  color: ${(props) => props.theme.colors.lightGrey};\n`;\n\nexport const ExitButton = styled(IconButton)`\n  position: absolute;\n  top: -0.5rem;\n  right: -0.5rem;\n  padding: 0.5rem;\n  color: ${(props) => props.theme.colors.lightGrey};\n\n  &:hover {\n    color: ${(props) => props.theme.colors.alwaysWhite};\n  }\n`;\n\ntype TransactionContainerProps = {\n  flex: boolean;\n};\n\nexport const TransactionContainer = styled.div<TransactionContainerProps>`\n  display: ${(props) => (props.flex ? \"flex\" : \"block\")};\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  flex-grow: 2;\n  padding: 1.25rem 0 1.5rem;\n  width: 100%;\n`;\n\nexport const DisconnectButton = styled(Button)`\n  margin-top: auto;\n  justify-self: flex-end;\n  border: 1px solid ${(props) => props.theme.colors.borderGrey};\n  border-radius: 2px;\n  height: 2.875rem;\n  padding: 1rem 3rem;\n  font-size: 0.875rem;\n  font-weight: 700;\n  background-color: transparent;\n  color: ${(props) => props.theme.colors.lightGrey};\n\n  &:hover {\n    color: ${(props) => props.theme.colors.black};\n    background-color: ${(props) => props.theme.colors.white};\n  }\n`;\n","const MS_PER_MINUTE = 60000;\nconst MS_PER_HOUR = 3600000;\nconst MS_PER_DAY = 86400000;\nconst MS_PER_MONTH = 2592000000;\nconst MS_PER_YEAR = 31536000000;\n\nexport default function getTimeBetweenTwoDates(date: Date): string {\n  const currentDate = new Date();\n\n  // if date is past the current date;\n  if (currentDate < date) return \"undefined\";\n\n  // convert to seconds\n  const timeDiff = currentDate.getTime() - date.getTime();\n\n  // use increasing denominations based on how recent the comparison between dates are\n  // e.g. x mins (< 1 hour), x hours (< 1 day), x days(< 1 month), x months(< 1 year), x years(> 1 year)\n  if (timeDiff < MS_PER_HOUR) {\n    // if time difference is less than 1 hour\n    const minutes = Math.floor((timeDiff % MS_PER_HOUR) / MS_PER_MINUTE);\n    return `${minutes} min${minutes > 1 ? \"s\" : \"\"}`;\n  } else if (timeDiff < MS_PER_DAY) {\n    // if time difference is less than 1 day\n    const hours = Math.floor(timeDiff / MS_PER_HOUR);\n    return `${hours} hour${hours > 1 ? \"s\" : \"\"}`;\n  } else if (timeDiff < MS_PER_MONTH) {\n    // if time difference is less than 1 month\n    const days = Math.floor(timeDiff / MS_PER_DAY);\n    return `${days} day${days > 1 ? \"s\" : \"\"}`;\n  } else if (timeDiff < MS_PER_YEAR) {\n    // if time difference is less than 1 year\n    const months = Math.floor(timeDiff / MS_PER_MONTH);\n    return `${months} month${months > 1 ? \"s\" : \"\"}`;\n  } else {\n    const years = Math.floor(timeDiff / MS_PER_YEAR);\n    return `${years} year${years > 1 ? \"s\" : \"\"}`;\n  }\n}\n","import styled from \"styled-components\";\n\nexport const Link = styled.a`\n  transform: translate(0.5rem, -0.5rem);\n  padding: 0.5rem;\n  color: ${(props) => props.theme.colors.lightGrey};\n\n  &:hover {\n    color: ${(props) => props.theme.colors.white};\n  }\n`;\n","import { getEtherscanURL } from \"@airswap/utils\";\n\nimport Icon from \"../../../Icon/Icon\";\nimport { Link } from \"./TransactionLink.style\";\n\ntype TransactionLinkProps = {\n  chainId: number;\n  hash: string;\n  className?: string;\n};\n\nconst TransactionLink = ({\n  chainId,\n  hash,\n  className = \"\",\n}: TransactionLinkProps) => {\n  return (\n    <Link\n      className={className}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={`${getEtherscanURL(chainId, hash)}`}\n    >\n      <Icon iconSize={1} name=\"transaction-link\" />\n    </Link>\n  );\n};\n\nexport default TransactionLink;\n","import styled from \"styled-components\";\n\nimport Icon from \"../../../Icon/Icon\";\n\nexport const IconContainer = styled.div`\n  width: 1.75rem;\n`;\n\nexport const SucceedIcon = styled(Icon)`\n  transform: translate(-0.25rem, -0.25rem);\n`;\n\nexport const ProcessingIcon = styled(Icon)`\n  transform: translate(-0.125rem, 0.0625rem);\n`;\n\nexport const FailedIcon = styled(Icon)`\n  transform: translate(-0.125rem, 0);\n`;\n","import {\n  FailedIcon,\n  IconContainer,\n  ProcessingIcon,\n  SucceedIcon,\n} from \"./WalletTransactionStatus.styles\";\n\ntype WalletTransactionStatusProps = {\n  status: \"succeeded\" | \"processing\" | \"reverted\";\n  className?: string;\n};\n\nconst WalletTransactionStatus = ({\n  status,\n  className = \"\",\n}: WalletTransactionStatusProps) => {\n  return (\n    <IconContainer>\n      {status === \"succeeded\" ? (\n        <SucceedIcon\n          className={className}\n          iconSize={1.875}\n          name=\"transaction-completed\"\n        />\n      ) : status === \"processing\" ? (\n        <ProcessingIcon\n          className={className}\n          iconSize={1.5}\n          name=\"transaction-pending\"\n        />\n      ) : (\n        <FailedIcon\n          className={className}\n          iconSize={1.5}\n          name=\"transaction-failed\"\n        />\n      )}\n    </IconContainer>\n  );\n};\n\nexport default WalletTransactionStatus;\n","import styled from \"styled-components\";\n\nimport TransactionLink from \"../TransactionLink/TransactionLink\";\nimport WalletTransactionStatus from \"../WalletTransactionStatus/WalletTransactionStatus\";\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: flex-start;\n  width: 100%;\n\n  & + & {\n    margin-top: 1.25rem;\n  }\n`;\n\nexport const StyledWalletTransactionStatus = styled(WalletTransactionStatus)``;\n\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n`;\n\nexport const SpanTitle = styled.span`\n  font-size: 0.875rem;\n  font-weight: 700;\n`;\n\nexport const SpanSubtitle = styled.span`\n  line-height: 1.3;\n  font-size: 1rem;\n  font-weight: 400;\n  color: ${(props) => props.theme.colors.lightGrey};\n`;\n\nexport const StyledTransactionLink = styled(TransactionLink)`\n  justify-self: flex-end;\n  margin-left: auto;\n\n  &:hover {\n    color: ${(props) => props.theme.colors.alwaysWhite};\n  }\n`;\n","import { useTranslation } from \"react-i18next\";\n\nimport { formatUnits } from \"@ethersproject/units\";\nimport { TokenInfo } from \"@uniswap/token-lists\";\n\nimport {\n  SubmittedApproval,\n  SubmittedOrder,\n  SubmittedTransaction,\n} from \"../../../../features/transactions/transactionsSlice\";\nimport getTimeBetweenTwoDates from \"../../../../helpers/getTimeBetweenTwoDates\";\nimport {\n  Container,\n  TextContainer,\n  SpanTitle,\n  SpanSubtitle,\n  StyledTransactionLink,\n  StyledWalletTransactionStatus,\n} from \"./WalletTransaction.styles\";\n\ntype WalletTransactionProps = {\n  /**\n   * The parent object of SubmittedOrder and SubmittedApproval\n   */\n  transaction: SubmittedTransaction;\n  /**\n   * the type of transaction\n   * @type \"Approval\" | \"Order\"\n   */\n  type: \"Approval\" | \"Order\";\n  /**\n   * chainId of current Ethereum net\n   */\n  chainId: number;\n  /**\n   * Token Info of sender token\n   */\n  senderToken?: TokenInfo;\n  /**\n   * Token Info of signer token\n   */\n  signerToken?: TokenInfo;\n  /**\n   * Token Info of approval token\n   */\n  approvalToken?: TokenInfo;\n};\n\nexport const WalletTransaction = ({\n  transaction,\n  type,\n  chainId,\n  senderToken,\n  signerToken,\n  approvalToken,\n}: WalletTransactionProps) => {\n  const { t } = useTranslation([\"common\", \"wallet\"]);\n\n  if (type === \"Order\") {\n    const tx: SubmittedOrder = transaction as SubmittedOrder;\n    return (\n      <Container>\n        <StyledWalletTransactionStatus status={tx.status} />\n        <TextContainer>\n          {tx && senderToken && signerToken && (\n            <>\n              <SpanTitle>\n                {t(\"wallet:transaction\", {\n                  senderAmount: parseFloat(\n                    Number(\n                      formatUnits(tx.order.senderAmount, senderToken.decimals)\n                    ).toFixed(5)\n                  ),\n                  senderToken: senderToken.symbol,\n                  signerAmount: parseFloat(\n                    Number(\n                      formatUnits(tx.order.signerAmount, signerToken.decimals)\n                    ).toFixed(5)\n                  ),\n                  signerToken: signerToken.symbol,\n                })}\n              </SpanTitle>\n              <SpanSubtitle>\n                {tx.status === \"succeeded\"\n                  ? t(\"common:success\")\n                  : tx.status === \"processing\"\n                  ? t(\"common:processing\")\n                  : t(\"common:failed\")}{\" \"}\n                ·{\" \"}\n                {tx.timestamp\n                  ? t(\"wallet:transactionTimeAgo\", {\n                      time: getTimeBetweenTwoDates(new Date(tx.timestamp)),\n                    })\n                  : t(\"common:undefined\")}\n              </SpanSubtitle>\n            </>\n          )}\n        </TextContainer>\n        <StyledTransactionLink chainId={chainId} hash={tx.hash} />\n      </Container>\n    );\n  } else {\n    const tx: SubmittedApproval = transaction as SubmittedApproval;\n    return (\n      <Container>\n        <StyledWalletTransactionStatus status={tx.status} />\n        <TextContainer>\n          {approvalToken && (\n            <>\n              <SpanTitle>Approve {approvalToken.symbol}</SpanTitle>\n              <SpanSubtitle>\n                {tx.status === \"succeeded\"\n                  ? t(\"common:success\")\n                  : tx.status === \"processing\"\n                  ? t(\"common:processing\")\n                  : t(\"common:failed\")}{\" \"}\n                ·{\" \"}\n                {tx.timestamp\n                  ? t(\"wallet:transactionTimeAgo\", {\n                      time: getTimeBetweenTwoDates(new Date(tx.timestamp)),\n                    })\n                  : t(\"common:undefined\")}\n              </SpanSubtitle>\n            </>\n          )}\n        </TextContainer>\n        <StyledTransactionLink chainId={chainId} hash={tx.hash} />\n      </Container>\n    );\n  }\n};\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { findTokenByAddress } from \"@airswap/metadata\";\nimport { TokenInfo } from \"@uniswap/token-lists\";\n\nimport {\n  SubmittedApproval,\n  SubmittedOrder,\n  SubmittedTransaction,\n} from \"../../features/transactions/transactionsSlice\";\nimport {\n  OpenWallet,\n  ExitButton,\n  DisconnectButton,\n  TransactionContainer,\n  OpenWalletTopContainer,\n  StyledWalletAddress,\n  NoTransactions,\n} from \"./WalletButton.styles\";\nimport WalletAddress from \"./subcomponents/WalletAddress/WalletAddress\";\nimport { WalletTransaction } from \"./subcomponents/WalletTransaction/WalletTransaction\";\n\nexport type WalletButtonProps = {\n  /**\n   * Address of currenlty connected wallet, if any\n   */\n  address?: string | null;\n  /**\n   * Boolean to indicate if wallet is currently connecting. (Ignored if address\n   * is set)\n   */\n  isConnecting?: boolean;\n  /**\n   * Callback function for when connect button is clicked\n   */\n  onConnectWalletClicked: () => void;\n  /**\n   * Callback function for when disconnect button is clicked\n   */\n  onDisconnectWalletClicked: () => void;\n  /**\n   * List of transactions that have been submitted\n   */\n  transactions: SubmittedTransaction[];\n  /**\n   * Number representing chainId of ETH network\n   */\n  chainId: number;\n  /**\n   * List of all tokens in metadata\n   */\n  tokens: TokenInfo[];\n};\n\nexport const WalletButton = ({\n  address,\n  isConnecting,\n  onConnectWalletClicked,\n  onDisconnectWalletClicked,\n  transactions = [],\n  chainId,\n  tokens,\n}: WalletButtonProps) => {\n  const { t } = useTranslation([\"wallet\"]);\n\n  const [walletOpen, setWalletOpen] = useState<boolean>(false);\n\n  if (address && !walletOpen) {\n    return (\n      <WalletAddress\n        isButton\n        address={address}\n        onClick={() => setWalletOpen(!walletOpen)}\n      />\n    );\n  }\n\n  if (address && walletOpen) {\n    return (\n      <OpenWallet>\n        <OpenWalletTopContainer>\n          <StyledWalletAddress\n            showBlockies\n            address={address}\n            onClick={() => setWalletOpen(!walletOpen)}\n          />\n          <ExitButton\n            iconSize={1.25}\n            icon=\"exit-modal\"\n            onClick={() => setWalletOpen(!walletOpen)}\n          />\n        </OpenWalletTopContainer>\n        <TransactionContainer flex={transactions.length === 0}>\n          {transactions.length > 0 ? (\n            transactions.slice(0, 3).map((transaction) => {\n              let token;\n              if (transaction.type === \"Order\") {\n                const tx: SubmittedOrder = transaction as SubmittedOrder;\n                const senderToken = findTokenByAddress(\n                  tx.order.senderToken,\n                  tokens\n                );\n                const signerToken = findTokenByAddress(\n                  tx.order.signerToken,\n                  tokens\n                );\n                return (\n                  <WalletTransaction\n                    transaction={transaction}\n                    senderToken={senderToken}\n                    signerToken={signerToken}\n                    type={transaction.type}\n                    chainId={chainId!}\n                    key={transaction.hash}\n                  />\n                );\n              } else {\n                const tx: SubmittedApproval = transaction as SubmittedApproval;\n                token = findTokenByAddress(tx.tokenAddress, tokens);\n                return (\n                  <WalletTransaction\n                    transaction={transaction}\n                    approvalToken={token}\n                    type={transaction.type}\n                    chainId={chainId!}\n                    key={transaction.hash}\n                  />\n                );\n              }\n            })\n          ) : (\n            <NoTransactions>{t(\"wallet:noTransactions\")}</NoTransactions>\n          )}\n        </TransactionContainer>\n\n        <DisconnectButton\n          aria-label={t(\"wallet:disconnectWallet\")}\n          onClick={onDisconnectWalletClicked}\n        >\n          {t(\"wallet:disconnectWallet\")}\n        </DisconnectButton>\n      </OpenWallet>\n    );\n  }\n\n  return null;\n};\n\nexport default WalletButton;\n","import SUPPORTED_WALLET_PROVIDERS, {\n  WalletProvider,\n} from \"../../constants/supportedWalletProviders\";\n\nconst LAST_ACCOUNT_LOCAL_STORAGE_KEY = `airswap/lastConnectedAccount`;\n\nconst saveLastAccount = (address: string, provider: WalletProvider) => {\n  localStorage.setItem(\n    LAST_ACCOUNT_LOCAL_STORAGE_KEY,\n    `${provider.name}/${address}`\n  );\n};\n\nconst clearLastAccount = () => {\n  localStorage.setItem(LAST_ACCOUNT_LOCAL_STORAGE_KEY, \"\");\n};\n\nconst loadLastAccount = () => {\n  try {\n    const storedString = localStorage.getItem(LAST_ACCOUNT_LOCAL_STORAGE_KEY);\n    if (!storedString) throw new Error(\"No connected accounts saved\");\n    const [providerName, address] = storedString.split(\"/\");\n    const provider = SUPPORTED_WALLET_PROVIDERS.find(\n      (p) => p.name === providerName\n    );\n    if (!provider) throw new Error(`Could not find provider: ${providerName}`);\n    return {\n      provider,\n      address,\n    };\n  } catch (e) {\n    return null;\n  }\n};\n\nexport { loadLastAccount, saveLastAccount, clearLastAccount };\n","const sizes = {\n  tinyScreen: \"320px\",\n  phone: \"480px\",\n  tabletPortrait: \"768px\",\n  tabletLandscape: \"1024px\",\n  desktop: \"1448px\",\n  bigDesktop: \"1800px\",\n};\n\nconst breakPoints = {\n  tinyScreenOnly: `(max-width: ${sizes.tinyScreen})`,\n  phoneOnly: `(max-width: ${sizes.phone})`,\n  tabletPortraitUp: `(min-width: ${sizes.tabletPortrait})`,\n  tabletLandscapeUp: `(min-width: ${sizes.tabletLandscape})`,\n  desktopUp: `(min-width: ${sizes.desktop})`,\n  bigDesktopUp: `(min-width: ${sizes.bigDesktop})`,\n};\n\nexport default breakPoints;\n","import styled from \"styled-components/macro\";\n\nimport IconButton from \"../IconButton/IconButton\";\n\nexport const StyledDarkModeSwitch = styled(IconButton)`\n  width: 1.5rem;\n  height: 1.5rem;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n","import { StyledDarkModeSwitch } from \"./DarkModeSwitch.styles\";\n\ntype DarkModeProps = {\n  className?: string;\n  onClick: () => void;\n};\n\nconst DarkModeSwitch = ({ className, onClick }: DarkModeProps): JSX.Element => {\n  return (\n    <StyledDarkModeSwitch\n      className={className}\n      iconSize={1.5}\n      icon=\"dark-mode-switch\"\n      onClick={onClick}\n    />\n  );\n};\n\nexport default DarkModeSwitch;\n","import { Link } from \"react-router-dom\";\n\nimport { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\n\nimport { Wallet } from \"../../features/wallet/Wallet\";\nimport breakPoints from \"../../style/breakpoints\";\nimport { sizes } from \"../../style/sizes\";\nimport DarkModeSwitch from \"../DarkModeSwitch/DarkModeSwitch\";\n\nexport const StyledDarkModeSwitch = styled(DarkModeSwitch)`\n  position: absolute;\n  bottom: 1rem;\n  right: 1rem;\n`;\n\ntype StyledWalletProps = {\n  isOpen: boolean;\n};\n\nexport const StyledWallet = styled(Wallet)<StyledWalletProps>`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  position: absolute;\n  top: 2rem;\n  right: 2rem;\n  transform: translateX(\n    ${(props) =>\n      props.isOpen ? \"-2.5rem\" : `calc(-4rem - ${sizes.sideBarWidth})`}\n  );\n  transition: transform 0.3s ease-in-out;\n  z-index: 1001;\n  z-index: 1;\n`;\n\ntype ContainerProps = {\n  isOpen: boolean;\n};\n\nexport const Container = styled.div<ContainerProps>`\n  position: absolute;\n  top: 0;\n  right: 0;\n  height: 100%;\n  width: 32rem;\n  padding: 4rem;\n  transform: translateX(${(props) => (props.isOpen ? \"28rem\" : \"0\")});\n  transition: transform 0.3s ease-in-out;\n  background-color: ${(props) => props.theme.colors.darkGrey};\n\n  @media ${breakPoints.phoneOnly} {\n    display: none;\n  }\n`;\n\nexport const ToggleButton = styled.button`\n  position: absolute;\n  top: 50%;\n  left: -1rem;\n  width: 2rem;\n  height: 2rem;\n  border-radius: 50%;\n  background-color: ${(props) => props.theme.colors.darkGrey};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${(props) => props.theme.colors.white};\n`;\n\nexport const Navigation = styled.nav`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\ntype StyledLinkProps = {\n  primary: boolean;\n};\n\nexport const StyledLink = styled(Link)<StyledLinkProps>`\n  font-weight: ${(props) => (props.primary ? 700 : 500)};\n  color: ${(props) => props.theme.colors.white};\n`;\n\nexport const ContentContainer = styled(motion.div)`\n  padding: 1rem 0;\n\n  .hidden {\n    color: purple;\n  }\n`;\n","import { FC, useEffect, useState } from \"react\";\nimport Modal from \"react-modal\";\n\nimport { Light } from \"@airswap/protocols\";\nimport { useMatomo } from \"@datapunt/matomo-tracker-react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\n\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\nimport WalletButton from \"../../components/WalletButton/WalletButton\";\nimport WalletProviderList from \"../../components/WalletProviderList/WalletProviderList\";\nimport {\n  AbstractConnector,\n  WalletProvider,\n} from \"../../constants/supportedWalletProviders\";\nimport SUPPORTED_WALLET_PROVIDERS from \"../../constants/supportedWalletProviders\";\nimport { subscribeToTransfersAndApprovals } from \"../balances/balancesApi\";\nimport {\n  decrementBalanceBy,\n  incrementBalanceBy,\n  requestActiveTokenAllowances,\n  requestActiveTokenBalances,\n  selectBalances,\n  setAllowance,\n} from \"../balances/balancesSlice\";\nimport { getTransactionsLocalStorageKey } from \"../metadata/metadataApi\";\nimport {\n  fetchAllTokens,\n  selectActiveTokens,\n  selectAllTokenInfo,\n} from \"../metadata/metadataSlice\";\nimport { fetchSupportedTokens } from \"../registry/registrySlice\";\nimport {\n  revertTransaction,\n  mineTransaction,\n} from \"../transactions/transactionActions\";\nimport {\n  selectTransactions,\n  setTransactions,\n  TransactionsState,\n} from \"../transactions/transactionsSlice\";\nimport {\n  clearLastAccount,\n  loadLastAccount,\n  saveLastAccount,\n} from \"./walletAPI\";\nimport {\n  setWalletConnected,\n  setWalletDisconnected,\n  selectWallet,\n} from \"./walletSlice\";\n\ntype WalletProps = {\n  className?: string;\n};\n\nexport const Wallet: FC<WalletProps> = ({ className = \"\" }) => {\n  const {\n    chainId,\n    account,\n    activate,\n    deactivate,\n    active,\n    library,\n  } = useWeb3React<Web3Provider>();\n\n  // Redux\n  const dispatch = useAppDispatch();\n  const activeTokens = useAppSelector(selectActiveTokens);\n  const balances = useAppSelector(selectBalances);\n  const { providerName } = useAppSelector(selectWallet);\n  const transactions = useAppSelector(selectTransactions);\n  const allTokens = useAppSelector(selectAllTokenInfo);\n\n  // Analytics\n  const { trackPageView } = useMatomo();\n\n  // Local component state\n  const [showConnectorList, setShowConnectorList] = useState<boolean>(false);\n  const [isActivating, setIsActivating] = useState<boolean>(false);\n  const [connector, setConnector] = useState<AbstractConnector>();\n  const [provider, setProvider] = useState<WalletProvider>();\n\n  // Auto-activate if user has connected before on (first render)\n  useEffect(() => {\n    trackPageView({ documentTitle: \"Swap Page\", href: \"https://airswap.io\" });\n    const lastConnectedAccount = loadLastAccount();\n    if (lastConnectedAccount) {\n      setIsActivating(true);\n      const connector = lastConnectedAccount.provider.getConnector();\n      setConnector(connector);\n      setProvider(lastConnectedAccount.provider);\n      activate(connector).finally(() => setIsActivating(false));\n    }\n  }, [activate, trackPageView]);\n\n  // Side effects for connecting a wallet from SwapWidget\n\n  useEffect(() => {\n    if (providerName) {\n      const provider = SUPPORTED_WALLET_PROVIDERS.find(\n        (provider) => provider.name === providerName\n      );\n      setProvider(provider);\n      setConnector(provider!.getConnector());\n    }\n  }, [providerName]);\n\n  // Trigger request for balances and allowances once account is connected\n  useEffect(() => {\n    if (active && account && chainId && library && connector && provider) {\n      // Dispatch a general action to indicate wallet has changed\n      dispatch(\n        setWalletConnected({\n          chainId,\n          address: account,\n        })\n      );\n      saveLastAccount(account, provider);\n      dispatch(fetchAllTokens());\n      dispatch(\n        requestActiveTokenAllowances({\n          provider: library,\n        })\n      );\n      dispatch(\n        requestActiveTokenBalances({\n          provider: library,\n        })\n      );\n      dispatch(\n        fetchSupportedTokens({\n          provider: library,\n        })\n      );\n    } else {\n      dispatch(setWalletDisconnected());\n    }\n  }, [active, account, chainId, dispatch, library, connector, provider]);\n\n  // Subscribe to changes in balance\n  useEffect(() => {\n    if (\n      !library ||\n      !account ||\n      !connector ||\n      chainId === undefined ||\n      !activeTokens.length ||\n      balances.lastFetch === null ||\n      balances.status !== \"idle\"\n    )\n      return;\n\n    let teardownTransferListener: () => void;\n    if (activeTokens.length) {\n      teardownTransferListener = subscribeToTransfersAndApprovals({\n        activeTokenAddresses: activeTokens.map((t) => t.address),\n        provider: library,\n        walletAddress: account,\n        spenderAddress: Light.getAddress(),\n        onBalanceChange: (tokenAddress, amount, direction) => {\n          const actionCreator =\n            direction === \"in\" ? incrementBalanceBy : decrementBalanceBy;\n          dispatch(\n            actionCreator({\n              tokenAddress,\n              amount: amount.toString(),\n            })\n          );\n        },\n        onApproval: (tokenAddress, amount) => {\n          dispatch(\n            setAllowance({\n              tokenAddress,\n              amount: amount.toString(),\n            })\n          );\n        },\n      });\n    }\n    return () => {\n      if (teardownTransferListener) {\n        teardownTransferListener();\n      }\n    };\n  }, [\n    activeTokens,\n    account,\n    library,\n    connector,\n    dispatch,\n    chainId,\n    balances.lastFetch,\n    balances.status,\n  ]);\n\n  useEffect(() => {\n    // Create a flag we can set to handle wallet changing between async operations\n    let walletHasChanged = false;\n\n    // get transaction state from local storage and update the transactions\n    if (chainId && account && library) {\n      const transactionsLocalStorage: TransactionsState = JSON.parse(\n        localStorage.getItem(\n          getTransactionsLocalStorageKey(account!, chainId!)\n        )!\n      ) || { all: [] };\n      dispatch(setTransactions(transactionsLocalStorage));\n\n      // check from all responses if one is pending... if pending, call getTransaction\n      // to see if it was a success/failure/pending. update accordingly. if pending: wait()\n      // and poll at a sensible interval.\n      transactionsLocalStorage.all.forEach(async (tx) => {\n        if (tx.status === \"processing\") {\n          let receipt = await library.getTransactionReceipt(tx.hash);\n          if (receipt !== null) {\n            if (walletHasChanged) return;\n            const status = receipt.status;\n            if (status === 1) dispatch(mineTransaction(tx.hash));\n            // success\n            else if (status === 0)\n              dispatch(\n                revertTransaction({\n                  hash: tx.hash,\n                  reason: \"Reverted\",\n                })\n              ); // reverted\n            return;\n          } else {\n            // Receipt was null, so the transaction is incomplete\n            // Try to get a reference to the transaction in the mem pool - this\n            // can sometimes also return null (e.g. gas price too low or tx only\n            // recently sent) depending on backend.\n            const transaction = await library.getTransaction(tx.hash);\n            if (transaction) {\n              try {\n                await transaction.wait(1);\n                if (!walletHasChanged) dispatch(mineTransaction(tx.hash)); // success\n              } catch (err) {\n                console.error(err);\n                if (!walletHasChanged)\n                  dispatch(\n                    revertTransaction({\n                      hash: tx.hash,\n                      reason: \"Reverted\",\n                    })\n                  );\n              }\n              return;\n            } else {\n              // if transaction === null, we poll at intervals\n              // assume failed after 30 mins\n              const assumedFailureTime = Date.now() + 30 * 60 * 1000;\n              while (receipt === null && Date.now() <= assumedFailureTime) {\n                // wait 30 seconds\n                await new Promise((res) => setTimeout(res, 30000));\n                receipt = await library!.getTransactionReceipt(tx.hash);\n              }\n              if (!receipt || receipt.status === 0) {\n                if (!walletHasChanged)\n                  dispatch(\n                    revertTransaction({\n                      hash: tx.hash,\n                      reason: \"Reverted\",\n                    })\n                  );\n              } else {\n                if (!walletHasChanged) dispatch(mineTransaction(tx.hash)); // success\n              }\n            }\n          }\n        }\n      });\n    }\n    return () => {\n      // Library & dispatch won't change, so when we tear down it's because\n      // the wallet has changed. The useEffect will run after this and set up\n      // everything for the new wallet.\n      walletHasChanged = true;\n    };\n  }, [chainId, dispatch, library, account]);\n\n  return (\n    <div className={className}>\n      <Modal\n        isOpen={showConnectorList}\n        onRequestClose={() => setShowConnectorList(false)}\n        overlayClassName=\"absolute inset-0 flex flex-col items-center justify-center bg-black bg-opacity-50 p-10\"\n        className=\"w-64 p-4 rounded-sm bg-white dark:bg-gray-800 shadow-lg\"\n      >\n        <WalletProviderList\n          onProviderSelected={(provider) => {\n            setProvider(provider);\n            const connector = provider.getConnector();\n            setConnector(connector);\n            setShowConnectorList(false);\n            setIsActivating(true);\n            activate(connector).finally(() => setIsActivating(false));\n          }}\n        />\n      </Modal>\n      <WalletButton\n        address={account}\n        onConnectWalletClicked={() => {\n          setShowConnectorList(true);\n        }}\n        onDisconnectWalletClicked={() => {\n          clearLastAccount();\n          deactivate();\n          if (connector instanceof WalletConnectConnector) {\n            connector.close();\n          }\n        }}\n        isConnecting={isActivating}\n        tokens={allTokens}\n        chainId={chainId!}\n        transactions={transactions}\n      />\n    </div>\n  );\n};\n","import { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useRouteMatch } from \"react-router-dom\";\n\nimport { AnimatePresence } from \"framer-motion\";\n\nimport { NavLocation } from \"../../routes\";\nimport Information from \"../Content/Introduction\";\nimport Organization from \"../Content/Organization\";\nimport Products from \"../Content/Products\";\nimport Icon from \"../Icon/Icon\";\nimport {\n  Container,\n  ToggleButton,\n  Navigation,\n  StyledLink,\n  ContentContainer,\n} from \"./SideBar.styles\";\n\nconst content: Record<NavLocation, FunctionComponent> = {\n  swap: Information,\n  introduction: Information,\n  products: Products,\n  organization: Organization,\n};\n\ntype SideBarProps = {\n  isOpen: boolean;\n  setIsOpen: any;\n};\n\nconst SideBar = ({ isOpen, setIsOpen }: SideBarProps) => {\n  const { t } = useTranslation([\"information\"]);\n\n  const match = useRouteMatch<{\n    section?: NavLocation;\n  }>();\n\n  const allLocations: NavLocation[] = [\n    \"swap\",\n    \"introduction\",\n    \"products\",\n    \"organization\",\n  ];\n\n  const { section } = match.params;\n\n  return (\n    <Container isOpen={isOpen}>\n      <Navigation>\n        {allLocations\n          .filter((loc) => loc !== \"swap\")\n          .map((loc) => (\n            <StyledLink\n              key={loc}\n              to={loc}\n              primary={\n                section === loc ||\n                (loc === \"introduction\" &&\n                  (!section || !allLocations.includes(section)))\n              }\n            >\n              {/* @ts-ignore dynamic key */}\n              {t(`information:nav_${loc}`)}\n            </StyledLink>\n          ))}\n      </Navigation>\n      <AnimatePresence exitBeforeEnter>\n        <ContentContainer\n          initial={{ opacity: 0, x: \"100%\" }}\n          animate={{ opacity: 1, x: \"0%\" }}\n          exit={{ opacity: 0, x: \"100%\" }}\n          transition={{ ease: \"easeOut\" }}\n          key={section || \"introduction\"}\n          style={{\n            display: `${isOpen ? \"none\" : \"block\"}`,\n          }}\n        >\n          {section && content[section]\n            ? content[section]({})\n            : content[\"introduction\"]({})}\n        </ContentContainer>\n      </AnimatePresence>\n      <ToggleButton onClick={setIsOpen}>\n        {isOpen ? (\n          <Icon iconSize={0.5} name=\"arrow-left\" />\n        ) : (\n          <Icon iconSize={0.5} name=\"arrow-right\" />\n        )}\n      </ToggleButton>\n    </Container>\n  );\n};\n\nexport default SideBar;\n","import styled from \"styled-components/macro\";\n\nimport breakPoints from \"../../style/breakpoints\";\nimport { sizes } from \"../../style/sizes\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  border-radius: 0.25rem;\n  height: 32.5rem;\n  width: 100%;\n  padding: ${sizes.tradeContainerPadding};\n  background: ${(props) => props.theme.colors.black};\n  overflow: hidden;\n`;\n\ntype StyledTradeContainerProps = {\n  isOpen: boolean;\n};\n\nexport const StyledTradeContainer = styled.div<StyledTradeContainerProps>`\n  display: flex;\n  box-sizing: border-box;\n  border-radius: 0.5rem;\n  margin: 0 auto;\n  padding: 2.25rem;\n  width: 100%;\n  max-width: 34.5rem;\n  background: url(\"${process.env.PUBLIC_URL}/images/bg.jpg\");\n  background-size: 100% 100%;\n\n  transition: transform 0.3s ease-in-out;\n\n  @media ${breakPoints.tabletLandscapeUp} {\n    transform: translateX(${(props) => (props.isOpen ? 0 : \"-16rem\")});\n  }\n\n  @media (min-resolution: 144dpi) {\n    background-image: url(\"${process.env.PUBLIC_URL}/images/bg-x2.jpg\");\n  }\n\n  @media ${breakPoints.phoneOnly} {\n    padding: 1.5rem;\n  }\n\n  @media ${breakPoints.tinyScreenOnly} {\n    padding: 1.25rem;\n  }\n`;\n","import React, { ReactElement } from \"react\";\n\nimport { Container, StyledTradeContainer } from \"./TradeContainer.styles\";\n\ntype TradeContainerProps = {\n  children: React.ReactNode;\n  isOpen: boolean;\n};\n\nconst TradeContainer = ({\n  children,\n  isOpen,\n}: TradeContainerProps): ReactElement => {\n  return (\n    <StyledTradeContainer isOpen={isOpen}>\n      <Container>{children}</Container>\n    </StyledTradeContainer>\n  );\n};\n\nexport default TradeContainer;\n","import styled from \"styled-components/macro\";\n\nexport const StyledSiteLogo = styled.svg`\n  width: 10rem;\n  height: 3.125rem;\n  fill: ${(props) =>\n    props.theme.name === \"light\"\n      ? props.theme.colors.primary\n      : props.theme.colors.white};\n`;\n","import React, { FC, ReactElement } from \"react\";\n\nimport { StyledSiteLogo } from \"./SiteLogo.styles\";\n\ntype SiteLogoProps = {\n  className?: string;\n};\n\nconst SiteLogo: FC<SiteLogoProps> = ({ className }): ReactElement => {\n  return (\n    <StyledSiteLogo viewBox=\"0 0 159 50\" className={className}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12.7296 43.8766H19.0945C20.9352 43.8766 21.4878 43.8502 22.5133 43.6914V47.0248C21.5667 46.919 20.8826 46.8925 19.1468 46.8925H3.36652C1.63066 46.8925 0.947139 46.919 0 47.0248V43.6914C1.02574 43.8502 1.57805 43.8766 3.41942 43.8766H9.36312V33.0035H5.33909C3.60322 33.0035 2.9194 33.0299 1.97257 33.1361V29.8292C2.97231 29.9879 3.60322 30.0143 5.39169 30.0143H17.0953C18.8837 30.0143 19.515 29.9879 20.5144 29.8292V33.1361C19.5676 33.0299 18.91 33.0035 17.1479 33.0035H12.7296V43.8766Z\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M63.0343 37.0233H69.3992C71.2399 37.0233 71.7925 36.9982 72.818 36.8478V40.0062C71.8714 39.9059 71.1873 39.8809 69.4514 39.8809H53.6712C51.9353 39.8809 51.2518 39.9059 50.3047 40.0062V36.8478C51.3304 36.9982 51.8827 37.0233 53.7241 37.0233H59.6678H63.0343Z\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M47.9527 29.9531C47.581 30.4012 47.581 30.4275 46.8901 31.7979C45.96 33.7482 44.4185 35.7248 42.7976 37.0952C41.735 38.0173 40.8581 38.5971 39.6091 39.2823C38.8119 38.1754 38.4133 37.7801 37.2176 36.8841C38.998 36.0934 40.0077 35.4876 41.0972 34.4597C42.1867 33.4583 43.0105 32.3777 43.6213 31.1127H29.6712C27.8108 31.1127 27.1467 31.1391 26.0573 31.2709V27.9765C27.0667 28.1347 27.8905 28.1874 29.7243 28.1874H43.5948C45.1894 28.1874 45.4286 28.161 46.1723 27.9502L47.9527 29.9531ZM37.1644 33.2738C37.0847 33.7745 37.0847 33.8009 37.0581 35.4085C36.9518 39.9151 36.2344 42.4451 34.4277 44.7377C32.833 46.767 30.8932 48.1111 27.5719 49.4815C26.881 48.0583 26.5356 47.584 25.4727 46.4771C27.6251 45.8446 28.8208 45.2648 30.1229 44.2369C32.833 42.1025 33.6834 39.8357 33.6834 34.8551C33.6834 34.0644 33.6568 33.8272 33.5508 33.2738H37.1644Z\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M71.3352 23.1614C69.1412 20.4748 66.1016 17.5244 63.2203 15.3377C60.2333 18.6569 57.1934 20.975 53.149 22.951C52.4091 21.5809 52.0919 21.1594 51.0078 20.027C53.0432 19.2367 54.3121 18.5251 56.2946 17.1293C60.2861 14.3367 63.4582 10.5173 65.1764 6.40787L65.4669 5.72296C65.0439 5.7493 65.0439 5.7493 56.7175 5.88102C55.4487 5.90736 54.735 5.96004 53.8362 6.09176L53.7308 2.72021C54.4707 2.85162 54.9732 2.87796 56.0567 2.87796H56.6911L65.9959 2.74656C67.4758 2.72021 67.6876 2.69357 68.3482 2.45648L70.0928 4.24778C69.7495 4.64292 69.5377 5.01171 69.2469 5.67028C68.031 8.48893 66.7357 10.7807 65.1235 12.9408C66.7889 14.0469 68.2163 15.1533 70.0135 16.7605C70.6747 17.3397 70.6747 17.3397 73.8729 20.4221L71.3352 23.1614Z\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M93.5706 6.11073C93.3324 6.60943 93.3056 6.76661 93.1732 7.55403C92.7227 10.5728 92.3252 12.0426 91.5038 13.9062C90.2054 16.9246 88.0857 19.2604 84.9593 21.1502C83.3694 22.1213 81.9916 22.725 79.6863 23.5124C79.0769 22.1738 78.7589 21.7014 77.5665 20.389C80.0838 19.7856 81.5411 19.2341 83.2105 18.2108C87.0526 15.8482 89.0661 12.5148 89.5698 7.68557H76.6391V11.0715C76.6391 11.8851 76.6656 12.5935 76.7186 13.1713H73.168C73.2475 12.5148 73.3005 11.7011 73.3005 10.9662V7.16032C73.3005 6.05823 73.274 5.3758 73.1945 4.66743C74.1219 4.77211 74.5988 4.79836 76.0562 4.79836H81.2497L89.437 4.77211C91.3978 4.77211 91.3978 4.77211 92.0338 4.56213L93.5706 6.11073Z\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M105.155 5.96582C106.553 8.5989 107.054 9.76871 107.714 12.0824L104.785 13.0131C104.284 10.992 103.492 8.94461 102.384 6.76363L105.155 5.96582ZM114.679 7.24262C114.52 7.64122 114.467 7.7745 114.309 8.5989C113.544 12.2153 112.357 15.1406 110.669 17.4543C108.716 20.1402 106.526 21.8688 102.622 23.8633C101.936 22.6932 101.619 22.2943 100.511 21.2302C102.358 20.5125 103.44 19.9272 104.996 18.7839C108.083 16.5235 109.851 13.8109 110.985 9.55596C111.328 8.25287 111.46 7.3224 111.46 6.498L114.679 7.24262ZM99.5352 7.05616C100.643 9.10387 101.171 10.3804 102.12 13.3588L99.1395 14.3162C98.4532 11.6303 97.9258 10.2208 96.7383 7.88056L99.5352 7.05616Z\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M133.804 3.03135C133.804 3.9806 134.572 4.77138 135.525 4.77138C136.504 4.77138 137.272 3.9806 137.272 3.03135C137.272 2.0824 136.504 1.31798 135.525 1.31798C134.572 1.31798 133.804 2.0824 133.804 3.03135ZM130.919 3.11073C131.713 3.11073 132.03 3.08437 132.48 3.05771C132.507 1.34434 133.83 0 135.525 0C137.219 0 138.596 1.3707 138.596 3.03135C138.596 4.71836 137.219 6.08936 135.525 6.08936C135.366 6.08936 135.207 6.063 135.022 6.03633C132.877 14.6559 128.192 20.0333 119.826 23.5124C119.138 22.142 118.688 21.5354 117.496 20.3756C124.83 18.1087 129.621 13.2061 131.315 6.19449H118.714C116.755 6.19449 116.252 6.22085 115.379 6.35265V2.92591C116.332 3.08437 116.967 3.11073 118.767 3.11073H130.919Z\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M23.918 22.1087H27.4357V2.10559H23.918V22.1087Z\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M44.9907 22.1087L40.4966 15.3854H35.9752V22.1087H32.3633V2.10559H41.5249C46.2518 2.10559 49.1595 4.85847 49.1595 8.74655C49.1595 12.0376 47.1327 14.0239 44.2551 14.7902L49.2482 22.1087H44.9907ZM41.2313 5.28371H35.9752V12.2927H41.2595C43.8444 12.2927 45.4885 10.7876 45.4885 8.74502C45.4885 6.56004 43.9034 5.28371 41.2313 5.28371Z\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M0 22.1087H3.78527C3.78527 22.1087 6.5041 16.3386 14.4802 17.0038L16.6353 22.1087H20.4027L12.0627 2.10559H8.542L0 22.1087ZM10.3452 6.27642L13.2629 13.8573C13.2629 13.8573 10.0568 13.7376 6.85105 15.2714L10.3452 6.27642Z\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M85.9459 37.1418C82.0325 36.2313 81.026 35.3634 81.026 33.7983C81.026 32.4603 82.0914 31.3987 84.1944 31.3987C86.0642 31.3987 88.1358 32.3034 89.9763 33.6411L91.9037 30.9942C89.83 29.3718 87.0747 28.4254 84.0955 28.4254C80.0358 28.4254 77.4337 30.639 77.4337 34.1112C77.4337 37.8115 79.9585 39.2479 84.3099 40.2727C88.1072 41.1268 88.9242 41.8951 88.9242 43.3462C88.9242 44.8834 87.9029 46.0284 85.6843 46.0284C83.1432 46.0284 80.8054 44.9404 78.8491 43.2898L76.6875 45.7939C79.1408 47.9287 82.4716 49.1304 85.5956 49.1304C89.8891 49.1304 92.5171 46.762 92.5171 43.0054C92.5171 42.5577 92.4762 42.143 92.3955 41.7584C91.8751 39.2788 89.688 38.0294 85.9459 37.1418Z\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M120.042 28.7764L115.146 43.5021L110.104 28.777H107.055L102.013 43.5021L97.1175 28.7764H93.2188L100.371 48.7795H103.479L108.521 34.5075L113.563 48.7795H116.67L123.823 28.7764H120.042Z\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M150.872 38.9666H145.735V31.9544H150.872C153.58 31.9544 155.317 32.6131 155.317 35.3667C155.317 37.9517 153.61 38.9666 150.872 38.9666ZM151.166 28.7764H142.113V48.7795H145.735V42.1162H150.754C155.606 42.1162 158.998 39.7035 158.998 35.2207C158.998 31.1631 155.965 28.7764 151.166 28.7764Z\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M127.445 40.5279L130.362 32.9473L133.856 41.9422C130.651 40.4085 127.445 40.5279 127.445 40.5279ZM128.644 28.7764L120.305 48.7795H124.072L126.227 43.6747C134.203 43.0096 136.922 48.7795 136.922 48.7795H140.707L132.165 28.7764H128.644Z\"\n      />\n    </StyledSiteLogo>\n  );\n};\n\nexport default SiteLogo;\n","import styled from \"styled-components/macro\";\n\nimport SiteLogo from \"../SiteLogo/SiteLogo\";\n\nexport const StyledSiteLogo = styled(SiteLogo)`\n  position: absolute;\n  top: 2.5rem;\n  left: 2.5rem;\n`;\n\nexport const StyledPage = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  min-width: 18rem;\n  min-height: 100vh;\n  padding: 2rem 0;\n\n  @media (min-height: 50rem) {\n    align-items: center;\n    height: 100vh;\n    min-height: 50rem;\n  }\n`;\n","import React, { FC, ReactElement } from \"react\";\nimport { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\n\nimport { useAppDispatch } from \"../../app/hooks\";\nimport { Orders } from \"../../features/orders/Orders\";\nimport { toggleTheme } from \"../../features/userSettings/userSettingsSlice\";\nimport { NavLocation } from \"../../routes\";\nimport SideBar from \"../SideBar/SideBar\";\nimport { StyledWallet, StyledDarkModeSwitch } from \"../SideBar/SideBar.styles\";\nimport TradeContainer from \"../TradeContainer/TradeContainer\";\nimport { StyledPage, StyledSiteLogo } from \"./Page.styles\";\n\nconst Page: FC = ({ children }): ReactElement => {\n  const [sideBarOpen, setSideBarOpen] = useState<boolean>(false);\n  const dispatch = useAppDispatch();\n\n  const history = useHistory();\n\n  const match = useRouteMatch<{\n    senderToken?: string;\n    signerToken?: string;\n    section?: NavLocation;\n  }>();\n\n  const { section } = match.params;\n\n  return (\n    <StyledPage>\n      <StyledSiteLogo />\n      <StyledWallet isOpen={section === \"swap\" || sideBarOpen} />\n      {children}\n      <TradeContainer isOpen={section === \"swap\" || sideBarOpen}>\n        <Orders />\n      </TradeContainer>\n      <SideBar\n        isOpen={section === \"swap\" || sideBarOpen}\n        setIsOpen={() => {\n          setSideBarOpen(!sideBarOpen);\n          sideBarOpen ? history.push(\"/introduction\") : history.push(\"/swap\");\n        }}\n      />\n      <StyledDarkModeSwitch\n        onClick={() => {\n          dispatch(toggleTheme());\n        }}\n      />\n    </StyledPage>\n  );\n};\n\nexport default Page;\n","import { initReactI18next } from \"react-i18next\";\n\nimport i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport HttpBackend from \"i18next-http-backend\";\n\ni18n\n  // load translation using http -> see /public/locales\n  .use(HttpBackend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: \"en\",\n    ns: \"common\",\n    load: \"languageOnly\",\n    debug: process.env.NODE_ENV !== \"production\",\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    react: {\n      useSuspense: true,\n    },\n    backend: {\n      loadPath: process.env.PUBLIC_URL + \"/locales/{{lng}}/{{ns}}.json\",\n    },\n  });\n\nexport default i18n;\n","import \"@fontsource/montserrat/400.css\";\nimport \"@fontsource/montserrat/500.css\";\nimport \"@fontsource/montserrat/600.css\";\nimport \"@fontsource/montserrat/700.css\";\n\nimport { createGlobalStyle } from \"styled-components/macro\";\n\nimport convertHexToRGBA from \"../helpers/transformHexToRgba\";\nimport breakPoints from \"./breakpoints\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    overflow-x: hidden;\n    font-family: 'Montserrat', sans-serif;\n    color: ${(props) =>\n      props.theme.name === \"dark\"\n        ? props.theme.colors.white\n        : props.theme.colors.primary};\n    background: ${(props) => props.theme.colors.black};\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n      monospace;\n  }\n\n  p {\n    font-size: ${(props) => props.theme.typography.paragraph.fontSize};\n    font-weight: ${(props) => props.theme.typography.paragraph.fontWeight};\n    line-height: ${(props) => props.theme.typography.paragraph.lineHeight};\n  }\n\n  .ReactModal__Overlay {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    padding: 1.5rem;\n    background: ${(props) =>\n      convertHexToRGBA(props.theme.colors.alwaysBlack, 0.5)};\n\n    @media ${breakPoints.tabletPortraitUp} {\n      padding: 2.5rem;\n    }\n\n  }\n\n  .ReactModal__Content {\n    position: relative !important;\n    border-radius: 0.125rem;\n    width: 100%;\n    max-width: 25rem;\n    padding: 1.5rem;\n    background: ${(props) => props.theme.colors.grey};\n  }\n`;\n\nexport default GlobalStyle;\n","import { DefaultTheme } from \"styled-components/macro\";\n\nconst typography: DefaultTheme[\"typography\"] = {\n  title1: {\n    fontSize: \"2rem\",\n    lineHeight: 1.167,\n    fontWeight: 500,\n  },\n  title2: {\n    fontSize: \"1.5rem\",\n    lineHeight: 1.25,\n    fontWeight: 700,\n  },\n  title3: {\n    fontSize: \"1.25rem\",\n    lineHeight: 1.25,\n    fontWeight: 400,\n  },\n  title4: {\n    fontSize: \"1rem\",\n    lineHeight: 1.33,\n    fontWeight: 700,\n  },\n  subtitle: {\n    fontSize: \"1rem\",\n    lineHeight: 1.5,\n    fontWeight: 700,\n  },\n  paragraph: {\n    fontSize: \"1rem\",\n    lineHeight: 1.5,\n    fontWeight: 400,\n  },\n  infoHeading: {\n    fontSize: \"1rem\",\n    lineHeight: 1.5625,\n    fontWeight: 600,\n  },\n  infoSubHeading: {\n    fontSize: \"1rem\",\n    lineHeight: 1.5625,\n    fontWeight: 400,\n  },\n  formLabel: {\n    fontSize: \"0.75rem\",\n    lineHeight: 1.5,\n    fontWeight: 600,\n  },\n  formInput: {\n    fontSize: \"1.5rem\",\n    lineHeight: 1.5,\n    fontWeight: 500,\n  },\n  // Form select inputs\n  selectItem: {\n    fontSize: \"1.125rem\",\n    lineHeight: 1 + 1 / 3,\n    fontWeight: 600,\n  },\n  link: {\n    fontSize: \"0.75rem\",\n    lineHeight: 2,\n    fontWeight: 700,\n  },\n  nav: {\n    fontSize: \"1rem\",\n    lineHeight: 1.25,\n    fontWeight: 400,\n  },\n  small: {\n    fontSize: \"0.875rem\",\n    lineHeight: 1.25,\n    fontWeight: 500,\n  },\n};\n\nexport const darkTheme: DefaultTheme = {\n  name: \"dark\",\n  colors: {\n    primary: \"#2B71FF\",\n    primaryDark: \"#0F5FFF\",\n    white: \"#FFFFFF\",\n    alwaysWhite: \"#FFFFFF\",\n    black: \"#060607\",\n    alwaysBlack: \"#060607\",\n    grey: \"#404040\",\n    borderGrey: \"#1A1E25\",\n    darkGrey: \"#101217\",\n    lightGrey: \"#6E7686\",\n    placeholderGrey: \"#6E7686\",\n    red: \"#FF004D\",\n    orange: \"#E7765A\",\n    green: \"#60FF66\",\n    placeholderGradient: \"linear-gradient(270deg, #232833 0%, #2F364400 93.3%)\",\n  },\n  typography,\n};\n\nexport const lightTheme: DefaultTheme = {\n  name: \"light\",\n  colors: {\n    primary: \"#2B71FF\",\n    primaryDark: \"#101217\",\n    white: \"#060607\",\n    alwaysWhite: \"#FFFFFF\",\n    black: \"#FFFFFF\",\n    alwaysBlack: \"#000000\",\n    grey: \"#404040\",\n    borderGrey: \"#DDE2ED\",\n    darkGrey: \"#F5F8FF\",\n    lightGrey: \"#6E7686\",\n    placeholderGrey: \"#E0EAFF\",\n    red: \"#FF004D\",\n    orange: \"#E7765A\",\n    green: \"#60FF66\",\n    placeholderGradient: \"linear-gradient(270deg, #E1EBFF 0%, #E1EBFF00 93.3%)\",\n  },\n  typography,\n};\n","import { Suspense } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\n\nimport { ThemeProvider } from \"styled-components/macro\";\n\nimport { useAppSelector } from \"./app/hooks\";\nimport Page from \"./components/Page/Page\";\nimport { selectUserSettings } from \"./features/userSettings/userSettingsSlice\";\nimport \"./i18n/i18n\";\nimport GlobalStyle from \"./style/GlobalStyle\";\nimport { darkTheme, lightTheme } from \"./style/themes\";\n\nfunction getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 12000;\n  return library;\n}\n\nconst App = (): JSX.Element => {\n  const { theme } = useAppSelector(selectUserSettings);\n\n  return (\n    <ThemeProvider theme={theme === \"dark\" ? darkTheme : lightTheme}>\n      <Web3ReactProvider getLibrary={getLibrary}>\n        {/* Suspense needed here for loading i18n resources */}\n        <Suspense fallback={\"Loading...\"}>\n          <Router>\n            <Route path=\"/:section([^0/#?]+)?\">\n              <Page />\n            </Route>\n          </Router>\n        </Suspense>\n      </Web3ReactProvider>\n      <GlobalStyle />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\n\nimport {\n  balancesReducer,\n  allowancesReducer,\n} from \"../features/balances/balancesSlice\";\nimport metadataReducer from \"../features/metadata/metadataSlice\";\nimport { subscribeToSavedTokenChangesForLocalStoragePersisting } from \"../features/metadata/metadataSubscriber\";\nimport ordersReducer from \"../features/orders/ordersSlice\";\nimport registryReducer from \"../features/registry/registrySlice\";\nimport transactionsReducer from \"../features/transactions/transactionsSlice\";\nimport userSettingsReducer from \"../features/userSettings/userSettingsSlice\";\nimport walletReducer from \"../features/wallet/walletSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    allowances: allowancesReducer,\n    transactions: transactionsReducer,\n    balances: balancesReducer,\n    metadata: metadataReducer,\n    orders: ordersReducer,\n    wallet: walletReducer,\n    registry: registryReducer,\n    userSettings: userSettingsReducer,\n  },\n});\n\nsubscribeToSavedTokenChangesForLocalStoragePersisting();\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import { store } from \"../../app/store\";\nimport {\n  SubmittedTransaction,\n  TransactionsState,\n} from \"../transactions/transactionsSlice\";\nimport {\n  getActiveTokensLocalStorageKey,\n  getTransactionsLocalStorageKey,\n} from \"./metadataApi\";\n\nexport const subscribeToSavedTokenChangesForLocalStoragePersisting = () => {\n  const activeTokensCache: {\n    [address: string]: {\n      [chainId: number]: string[];\n    };\n  } = {};\n  const transactionCache: {\n    [address: string]: {\n      [chainId: number]: SubmittedTransaction[];\n    };\n  } = {};\n\n  let currentChainId: number;\n  let currentTransaction: TransactionsState;\n\n  store.subscribe(() => {\n    const { wallet, metadata, transactions } = store.getState();\n    if (!wallet.connected) return;\n\n    let previousChainId = currentChainId;\n    currentChainId = wallet.chainId!;\n\n    let previousTransaction = currentTransaction;\n    currentTransaction = transactions;\n\n    if (\n      previousTransaction !== currentTransaction ||\n      previousChainId !== currentChainId\n    ) {\n      // handles change in transactions and persists all transactions to localStorage\n      // Store only the top 3 transactions\n      const txs: TransactionsState = JSON.parse(\n        localStorage.getItem(\n          getTransactionsLocalStorageKey(wallet.address!, wallet.chainId!)\n        )!\n      ) || { all: [] };\n\n      const mostRecentTransactions = transactions.all.slice(0, 3);\n\n      if (transactionCache[wallet.address!] === undefined) {\n        transactionCache[wallet.address!] = {};\n        transactionCache[wallet.address!][wallet.chainId!] = txs.all;\n      }\n      if (\n        previousChainId === currentChainId &&\n        transactions.all.length &&\n        transactionCache[wallet.address!][wallet.chainId!] !== transactions.all\n      ) {\n        transactionCache[wallet.address!][\n          wallet.chainId!\n        ] = mostRecentTransactions;\n        localStorage.setItem(\n          getTransactionsLocalStorageKey(wallet.address!, wallet.chainId!),\n          JSON.stringify({\n            all: mostRecentTransactions,\n          })\n        );\n      }\n    }\n\n    if (!activeTokensCache[wallet.address!]) {\n      activeTokensCache[wallet.address!] = {};\n    }\n    const cachedTokensForActiveWallet =\n      activeTokensCache[wallet.address!][wallet.chainId!];\n    if (\n      metadata.tokens.active.length &&\n      cachedTokensForActiveWallet !== metadata.tokens.active\n    ) {\n      // active tokens have changed, persist to local storage.\n      activeTokensCache[wallet.address!][wallet.chainId!] =\n        metadata.tokens.active;\n      localStorage.setItem(\n        getActiveTokensLocalStorageKey(wallet.address!, wallet.chainId!),\n        metadata.tokens.active.join(\",\")\n      );\n    }\n  });\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Modal from \"react-modal\";\nimport { Provider } from \"react-redux\";\n\nimport { MatomoProvider, createInstance } from \"@datapunt/matomo-tracker-react\";\n\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst instance = createInstance({\n  urlBase: \"https://airswap.matomo.cloud/\",\n  siteId: 1,\n  // userId: 'UID76903202', // optional, default value: `undefined`.\n  // trackerUrl: 'https://LINK.TO.DOMAIN/tracking.php', // optional, default value: `${urlBase}matomo.php`\n  srcUrl: \"https://cdn.matomo.cloud/airswap.matomo.cloud/matomo.js\", // optional, default value: `${urlBase}matomo.js`\n  disabled: false, // optional, false by default. Makes all tracking calls no-ops if set to true.\n  heartBeat: {\n    // optional, enabled by default\n    active: true, // optional, default value: true\n    seconds: 10, // optional, default value: `15\n  },\n  linkTracking: false, // optional, default value: true\n  configurations: {\n    // optional, default value: {}\n    // any valid matomo configuration, all below are optional\n    disableCookies: true,\n    setSecureCookie: true,\n    setRequestMethod: \"POST\",\n  },\n});\n\nModal.setAppElement(\"#root\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <MatomoProvider value={instance}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </MatomoProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}